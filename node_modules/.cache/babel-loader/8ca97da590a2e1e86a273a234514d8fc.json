{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport serviceTypes from \"constants/services/serviceTypes/es\";\nvar defaultServiceTypes = [\"installation\", \"maintenance\", \"repair\", \"homeProgram\", \"deliveries\"];\nvar diagnosisType = {\n  key: \"Diagn贸stico en Taller\",\n  label: \"Diagn贸stico en Taller\"\n};\nvar selectedServiceTypes = defaultServiceTypes.map(function (serviceTypeKey) {\n  return serviceTypes[serviceTypeKey];\n});\nexport default [].concat(_toConsumableArray(selectedServiceTypes), [diagnosisType]);","map":{"version":3,"sources":["/usr/src/app/javascript/constants/technicians/serviceTypes/es.js"],"names":["serviceTypes","defaultServiceTypes","diagnosisType","key","label","selectedServiceTypes","map","serviceTypeKey"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,oCAAzB;AAEA,IAAMC,mBAAmB,GAAG,CAC1B,cAD0B,EAE1B,aAF0B,EAG1B,QAH0B,EAI1B,aAJ0B,EAK1B,YAL0B,CAA5B;AAQA,IAAMC,aAAa,GAAI;AACrBC,EAAAA,GAAG,EAAE,uBADgB;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAvB;AAKA,IAAMC,oBAAoB,GAAGJ,mBAAmB,CAACK,GAApB,CAAwB,UAAAC,cAAc;AAAA,SAAIP,YAAY,CAACO,cAAD,CAAhB;AAAA,CAAtC,CAA7B;AAGA,4CAAmBF,oBAAnB,IAAyCH,aAAzC","sourcesContent":["import serviceTypes from \"constants/services/serviceTypes/es\"\n\nconst defaultServiceTypes = [\n  \"installation\",\n  \"maintenance\",\n  \"repair\",\n  \"homeProgram\",\n  \"deliveries\"\n]\n\nconst diagnosisType  = {\n  key: \"Diagn贸stico en Taller\",\n  label: \"Diagn贸stico en Taller\"\n}\n\nconst selectedServiceTypes = defaultServiceTypes.map(serviceTypeKey => serviceTypes[serviceTypeKey])\n\n\nexport default [...selectedServiceTypes, diagnosisType]\n"]},"metadata":{},"sourceType":"module"}