{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/site/ErrorBoundary.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\n\nvar ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      // Display fallback UI\n      this.setState({\n        hasError: true\n      }); // You can also log the error to an error reporting service\n\n      console.log(error, info);\n      console.log(info);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 16\n          }\n        }, \"Algo ha ido mal\");\n      }\n\n      return this.props.children;\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/usr/src/app/javascript/components/site/ErrorBoundary.jsx"],"names":["React","ErrorBoundary","props","state","hasError","error","info","setState","console","log","children","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IACMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFiB;AAGlB;;;;WAED,2BAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B;AAC7B;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAF6B,CAG7B;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,IAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAED;;;WAED,kBAAS;AACP,UAAI,KAAKH,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;;AACD,aAAO,KAAKF,KAAL,CAAWQ,QAAlB;AACD;;;;EArBuBV,KAAK,CAACW,S;;AAwBhC,eAAeV,aAAf","sourcesContent":["import React from \"react\"\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    componentDidCatch(error, info) {\n      // Display fallback UI\n      this.setState({ hasError: true });\n      // You can also log the error to an error reporting service\n      console.log(error, info);\n      console.log(info);\n    \n    }\n  \n    render() {\n      if (this.state.hasError) {\n        // You can render any custom fallback UI\n        return <h1>Algo ha ido mal</h1>;\n      }\n      return this.props.children;\n    }\n  }\n\n  export default ErrorBoundary"]},"metadata":{},"sourceType":"module"}