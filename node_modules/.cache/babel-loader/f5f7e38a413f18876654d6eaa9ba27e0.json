{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/finance/FinanceFilter/index.jsx\",\n    _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from 'react';\nimport InvoicedFilter from './filters/InvoicedFilter';\nimport CompletedFilter from './filters/CompletedFilter';\nimport RequestedFilter from './filters/RequestedFilter';\nimport PaymentFilter from './filters/PaymentFilter';\nimport { Grid } from '@material-ui/core';\nimport * as ServiceApi from 'api/service';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\n\nvar FinanceFilter = function FinanceFilter(props) {\n  var setServicesLoading = props.setServicesLoading,\n      page = props.page,\n      perPage = props.perPage;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      completedOptions = _useState2[0],\n      setCompletedOptions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invoicedOptions = _useState4[0],\n      setInvoicedOptions = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paymentOptions = _useState6[0],\n      setPaymentOptions = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      requestedOptions = _useState8[0],\n      setRequestedOptions = _useState8[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$ServiceApi$fil, completed_options, invoiced_options, payment_options, requested_options;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return ServiceApi.filterOptions();\n\n              case 2:\n                _yield$ServiceApi$fil = _context.sent;\n                completed_options = _yield$ServiceApi$fil.completed_options;\n                invoiced_options = _yield$ServiceApi$fil.invoiced_options;\n                payment_options = _yield$ServiceApi$fil.payment_options;\n                requested_options = _yield$ServiceApi$fil.requested_options;\n                setCompletedOptions(completed_options);\n                setInvoicedOptions(invoiced_options);\n                setPaymentOptions(payment_options);\n                setRequestedOptions(requested_options);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InvoicedFilter, {\n    options: invoicedOptions,\n    getServices: props.getServices,\n    setServicesLoading: setServicesLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CompletedFilter, {\n    options: completedOptions,\n    getServices: props.getServices,\n    setServicesLoading: setServicesLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RequestedFilter, {\n    options: requestedOptions,\n    getServices: props.getServices,\n    setServicesLoading: setServicesLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaymentFilter, {\n    options: paymentOptions,\n    getServices: props.getServices,\n    setServicesLoading: setServicesLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar structuredSelector = createStructuredSelector({\n  page: function page(state) {\n    return state.services_page;\n  },\n  perPage: function perPage(state) {\n    return state.services_per_page;\n  }\n});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(FinanceFilter);","map":{"version":3,"sources":["/usr/src/app/javascript/components/finance/FinanceFilter/index.jsx"],"names":["React","useEffect","useState","InvoicedFilter","CompletedFilter","RequestedFilter","PaymentFilter","Grid","ServiceApi","createStructuredSelector","connect","FinanceFilter","props","setServicesLoading","page","perPage","completedOptions","setCompletedOptions","invoicedOptions","setInvoicedOptions","paymentOptions","setPaymentOptions","requestedOptions","setRequestedOptions","fetchData","filterOptions","completed_options","invoiced_options","payment_options","requested_options","getServices","structuredSelector","state","services_page","services_per_page","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport InvoicedFilter from './filters/InvoicedFilter'\nimport CompletedFilter from './filters/CompletedFilter'\nimport RequestedFilter from './filters/RequestedFilter'\nimport PaymentFilter from './filters/PaymentFilter'\nimport { Grid } from '@material-ui/core';\nimport * as ServiceApi from 'api/service'\nimport { createStructuredSelector } from \"reselect\"\nimport { connect } from \"react-redux\"\n\nconst FinanceFilter = (props) => {\n  const { setServicesLoading, page, perPage } = props\n  const [completedOptions, setCompletedOptions] = useState([])\n  const [invoicedOptions, setInvoicedOptions] = useState([])\n  const [paymentOptions, setPaymentOptions] = useState([])\n  const [requestedOptions, setRequestedOptions] = useState([])\n\n  useEffect(() => {\n    async function fetchData() {\n      const { completed_options, invoiced_options, payment_options, requested_options } = await ServiceApi.filterOptions()\n      setCompletedOptions(completed_options)\n      setInvoicedOptions(invoiced_options)\n      setPaymentOptions(payment_options)\n      setRequestedOptions(requested_options)\n    }\n    fetchData()\n  }, [])\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={3}>\n        <InvoicedFilter\n          options={invoicedOptions}\n          getServices={props.getServices}\n          setServicesLoading={setServicesLoading}\n        />\n      </Grid>\n\n      <Grid item xs={3}>\n        <CompletedFilter\n          options={completedOptions}\n          getServices={props.getServices}\n          setServicesLoading={setServicesLoading}\n        />\n      </Grid>\n\n      <Grid item xs={3}>\n        <RequestedFilter\n          options={requestedOptions}\n          getServices={props.getServices}\n          setServicesLoading={setServicesLoading}\n        />\n      </Grid>\n\n      <Grid item xs={3}>\n        <PaymentFilter\n          options={paymentOptions}\n          getServices={props.getServices}\n          setServicesLoading={setServicesLoading}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  page: state => state.services_page,\n  perPage: state => state.services_per_page,\n});\n\nconst mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(FinanceFilter);\n"]},"metadata":{},"sourceType":"module"}