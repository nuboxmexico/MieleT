{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/ServiceSparePartsRequest.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport PaymentEmailDialog from \"components/services/PaymentEmailDialog\";\nimport NewScheduleDialog from \"components/services/NewScheduleDialog\";\nimport { flash_alert } from 'components/App';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //Accordeon \n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MaterialTable from 'react-data-table-component';\nimport InputLabel from '@material-ui/core/InputLabel'; // Dates\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DeleteSparePartDialog from \"components/services/DeleteSparePartDialog\";\nimport EditSparePartDialog from \"components/services/EditSparePartDialog\";\nimport { csrf, headers, money_format, date_event_format, date_difference_in_hours, api_token, site_url, date_format_without_time } from \"constants/csrf\";\nimport { spare_part_delivery_status_label } from \"constants/service_functions\";\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nfunction ServiceSparePartsRequest(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var spare_part_columns = [{\n    name: t('globalTables.sparePartColumns.tnr'),\n    selector: 'spare_part.tnr',\n    sortable: true,\n    hide: 'sm'\n  }, {\n    name: t('globalTables.sparePartColumns.name'),\n    selector: 'spare_part.name',\n    sortable: true,\n    hide: 'md'\n  }, {\n    name: t('globalTables.sparePartColumns.quantity'),\n    selector: 'requested_quantity',\n    sortable: true,\n    hide: 'md',\n    cell: function cell(row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, row.requested_quantity, \"\\xA0\\xA0\", row.reintegrated && /*#__PURE__*/React.createElement(Chip, {\n        label: t('globalTables.sparePartColumns.quantity'),\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }));\n    }\n  }, {\n    name: t('globalTables.sparePartColumns.deliveryStatus'),\n    selector: 'delivery_status',\n    cell: function cell(row) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, row.delivery_status == \"\" ? t('globalText.noInfo') : spare_part_delivery_status_label(row.delivery_status));\n    }\n  }, {\n    name: t('globalTables.sparePartColumns.background'),\n    selector: 'background',\n    cell: function cell(row) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, row.background == \"\" ? t('globalText.noInfo') : row.background);\n    }\n  }, {\n    name: t('globalTables.sparePartColumns.actions'),\n    selector: 'id',\n    grow: true,\n    minWidth: \"190px\",\n    cell: function cell(row) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EditSparePartDialog, {\n        key: \"EditSparePartDialog\" + row.id,\n        service_id: row.service_id,\n        service_spare_part_id: row.id,\n        tnr: row.spare_part.tnr,\n        name: row.spare_part.name,\n        quantity: row.quantity,\n        delivery_status: row.delivery_status,\n        background: row.background,\n        requested_quantity: row.requested_quantity,\n        from: \"request\",\n        callbacks: props.softCallback,\n        headers: headers,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(DeleteSparePartDialog, {\n        key: \"DeleteSparePartDialog\" + row.id,\n        service_id: row.service_id,\n        service_spare_part_id: row.id,\n        tnr: row.spare_part.tnr,\n        name: row.spare_part.name,\n        from: \"request\",\n        headers: headers,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }));\n    }\n  }];\n  var spare_part_columns_no_actions = [{\n    name: t('globalTables.sparePartColumnsNoActions.tnr'),\n    selector: 'spare_part.tnr',\n    sortable: true,\n    hide: 'sm'\n  }, {\n    name: t('globalTables.sparePartColumnsNoActions.name'),\n    selector: 'spare_part.name',\n    sortable: true,\n    hide: 'md'\n  }, {\n    name: t('globalTables.sparePartColumnsNoActions.requestedQuantity'),\n    selector: 'requested_quantity',\n    sortable: true,\n    hide: 'md',\n    cell: function cell(row) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, row.requested_quantity, \"\\xA0\\xA0\", row.reintegrated && /*#__PURE__*/React.createElement(Chip, {\n        label: \"t('globalTables.sparePartColumnsNoActions.refunded')\",\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }));\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    defaultExpanded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel2a-content\",\n    id: \"paneladditional-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, t('services.serviceSparePartsRequest.title'))), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, t('services.serviceSparePartsRequest.subTitle'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    noHeader: true,\n    columns: props.canEditRequestSparePart ? spare_part_columns : spare_part_columns_no_actions,\n    data: props.spare_parts,\n    progressPending: props.userLoading,\n    progressComponent: /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 75,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 52\n      }\n    }),\n    responsive: true,\n    selectableRows: true,\n    selectableRowsComponent: Checkbox,\n    selectableRowsComponentProps: {\n      className: \"spare-part-checkbox\",\n      color: \"primary\"\n    },\n    selectableRowSelected: function selectableRowSelected(row) {\n      return props.spare_parts.find(function (product) {\n        return product.id === row.id && product.selected;\n      }) != undefined;\n    },\n    onSelectedRowsChange: props.handleRequestSparePartRowChange,\n    highlightOnHover: true,\n    striped: true,\n    contextMessage: {\n      singular: 'producto',\n      plural: 'productos',\n      message: 'seleccionados'\n    },\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: esLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    className: \"payment-date-input full-width-height\",\n    id: \"date-payment-dialog\",\n    label: t('services.serviceSparePartsRequest.sparePartDeliveryDate'),\n    format: \"dd/MM/yyyy\",\n    value: props.spare_part_delivery_date,\n    onChange: props.handleSparePartDeliveryDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"principal_technician-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }, t('services.serviceSparePartsRequest.principalTechnician')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"principal_technician-simple-select-outlined-label\",\n    id: \"principal_technician-simple-select-outlined\",\n    value: props.principal_technician == null ? \"\" : props.principal_technician,\n    onChange: function onChange(e) {\n      return props.setPrincipalTechnician(e.target.value);\n    },\n    label: t('services.serviceSparePartsRequest.principalTechnician'),\n    name: \"principal_technician\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, props.service_technicians.map(function (service_technician) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"principal_technician-\" + service_technician.id,\n      value: service_technician.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, service_technician.user.fullname, \" (\", service_technician.user.email, \")\");\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, props.country_change && /*#__PURE__*/React.createElement(NewScheduleDialog, {\n    schedule_type: \"service\",\n    btn_classname: \"full-width-height\",\n    btn_text: t('services.serviceSparePartsRequest.technicalCalendarButton'),\n    customer_id: props.customer_id,\n    country: props.country,\n    selectedProductRows: props.selectedProductRows,\n    service_type: props.service_type,\n    subcategory: props.subcategory,\n    requested: props.requested,\n    techinicianNumber: props.techinicianNumber,\n    zipcode: props.zipcode,\n    administrative_demarcation: props.administrative_demarcation,\n    setTechinicianNumber: props.setTechinicianNumber,\n    event: props.event,\n    setEvent: props.setEvent,\n    technicians_ids: props.technicians_ids,\n    setTechniciansIds: props.setTechniciansIds,\n    saveService: props.saveService,\n    technicians: props.technicians,\n    setTechnicians: props.setTechnicians,\n    totalhours: props.totalhours // Callbacks\n    ,\n    scheduleCallBack: props.scheduleCallBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(PaymentEmailDialog, {\n    email: props.customerEmail,\n    paymentEmailDialog: props.paymentEmailDialog,\n    setPaymentEmailDialog: props.setPaymentEmailDialog,\n    loading: props.loading,\n    setLoading: props.setLoading,\n    saveService: props.saveService,\n    paymentEmailAdditional: props.paymentEmailAdditional,\n    setPaymentEmailAdditional: props.setPaymentEmailAdditional,\n    isPaymentEmail: props.isPaymentEmail,\n    setIsPaymentEmail: props.setIsPaymentEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"service-save\",\n    disabled: props.loading,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: props.handleSparePartSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, t('services.serviceSparePartsRequest.sparePartSubmitButton')), props.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: props.classes.buttonProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 55\n    }\n  }))))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(ServiceSparePartsRequest);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/ServiceSparePartsRequest.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","TextField","Grid","FormControl","Button","Link","Checkbox","FormControlLabel","PaymentEmailDialog","NewScheduleDialog","flash_alert","Chip","CircularProgress","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","MaterialTable","InputLabel","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Select","MenuItem","DeleteSparePartDialog","EditSparePartDialog","csrf","headers","money_format","date_event_format","date_difference_in_hours","api_token","site_url","date_format_without_time","spare_part_delivery_status_label","useTranslation","i18next","ServiceSparePartsRequest","props","t","spare_part_columns","name","selector","sortable","hide","cell","row","requested_quantity","reintegrated","delivery_status","background","grow","minWidth","id","service_id","spare_part","tnr","quantity","softCallback","spare_part_columns_no_actions","canEditRequestSparePart","spare_parts","userLoading","className","color","find","product","selected","undefined","handleRequestSparePartRowChange","singular","plural","message","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","spare_part_delivery_date","handleSparePartDeliveryDateChange","principal_technician","e","setPrincipalTechnician","target","value","service_technicians","map","service_technician","user","fullname","email","country_change","customer_id","country","selectedProductRows","service_type","subcategory","requested","techinicianNumber","zipcode","administrative_demarcation","setTechinicianNumber","event","setEvent","technicians_ids","setTechniciansIds","saveService","technicians","setTechnicians","totalhours","scheduleCallBack","customerEmail","paymentEmailDialog","setPaymentEmailDialog","loading","setLoading","paymentEmailAdditional","setPaymentEmailAdditional","isPaymentEmail","setIsPaymentEmail","classes","wrapper","handleSparePartSubmit","buttonProgress","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport PaymentEmailDialog from \"components/services/PaymentEmailDialog\";\nimport NewScheduleDialog from \"components/services/NewScheduleDialog\";\nimport { flash_alert } from 'components/App';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n//Accordeon \nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport MaterialTable from 'react-data-table-component';\nimport InputLabel from '@material-ui/core/InputLabel';\n// Dates\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DeleteSparePartDialog from \"components/services/DeleteSparePartDialog\";\nimport EditSparePartDialog from \"components/services/EditSparePartDialog\";\nimport {csrf, headers, money_format, date_event_format, date_difference_in_hours, api_token, site_url, date_format_without_time} from \"constants/csrf\"\n\nimport {spare_part_delivery_status_label} from \"constants/service_functions\"\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nfunction ServiceSparePartsRequest(props){\n    const {t} = useTranslation();\n    const spare_part_columns = [\n        {\n        name: t('globalTables.sparePartColumns.tnr'),\n        selector: 'spare_part.tnr',\n        sortable: true,\n        hide: 'sm',\n        },\n        {\n        name: t('globalTables.sparePartColumns.name'),\n        selector: 'spare_part.name',\n        sortable: true,\n        hide: 'md',\n        \n        },\n        {\n            name: t('globalTables.sparePartColumns.quantity'),\n            selector: 'requested_quantity',\n            sortable: true,\n            hide: 'md',\n            cell: row => (\n                <>\n                    {row.requested_quantity}&nbsp;&nbsp;{\n                        row.reintegrated &&\n                        <Chip\n                            label= {t('globalTables.sparePartColumns.quantity')}\n                            color=\"primary\"\n                        />\n                    }\n                </>\n            ),\n        },\n        {\n            name: t('globalTables.sparePartColumns.deliveryStatus'),\n            selector: 'delivery_status',\n            cell: row => (\n              <span>\n                {(row.delivery_status == \"\" ? t('globalText.noInfo') : spare_part_delivery_status_label(row.delivery_status))}\n              </span>\n            ),\n        },\n        {\n            name: t('globalTables.sparePartColumns.background'),\n            selector: 'background',\n            cell: row => (\n              <span>\n                {(row.background == \"\" ? t('globalText.noInfo') : row.background)}\n              </span>\n            ),\n        },\n        {\n            name: t('globalTables.sparePartColumns.actions'),\n            selector: 'id',\n            grow: true,\n            minWidth: \"190px\",\n            cell: row => (\n            <span>\n                <EditSparePartDialog key={\"EditSparePartDialog\"+row.id} service_id={row.service_id} service_spare_part_id={row.id} tnr={row.spare_part.tnr} name={row.spare_part.name} quantity={row.quantity} delivery_status={row.delivery_status}  background={row.background} requested_quantity={row.requested_quantity} from={\"request\"} callbacks={props.softCallback} headers={headers} />\n                <DeleteSparePartDialog key={\"DeleteSparePartDialog\"+row.id} service_id={row.service_id} service_spare_part_id={row.id} tnr={row.spare_part.tnr} name={row.spare_part.name} from={\"request\"} headers={headers} />\n            </span>\n            ),\n        }\n    ];\n\n\n    const spare_part_columns_no_actions = [\n        {\n        name: t('globalTables.sparePartColumnsNoActions.tnr'),\n        selector: 'spare_part.tnr',\n        sortable: true,\n        hide: 'sm',\n        },\n        {\n        name: t('globalTables.sparePartColumnsNoActions.name'),\n        selector: 'spare_part.name',\n        sortable: true,\n        hide: 'md',\n        },\n        {\n            name: t('globalTables.sparePartColumnsNoActions.requestedQuantity'),\n            selector: 'requested_quantity',\n            sortable: true,\n            hide: 'md',\n            cell: row => (\n                <>\n                    {row.requested_quantity}&nbsp;&nbsp;{\n                        row.reintegrated &&\n                        <Chip\n                            label=\"t('globalTables.sparePartColumnsNoActions.refunded')\"\n                            color=\"primary\"\n                        />\n                    }\n                </>\n            ),\n        }\n    ];\n\n\treturn (\n\t\t<React.Fragment>\n\n            <Accordion defaultExpanded>\n                <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel2a-content\"\n                id=\"paneladditional-header\"\n                >\n                <h1 className=\"panel-custom-title\">{t('services.serviceSparePartsRequest.title')}</h1>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <p className=\"service-subtitle\">{t('services.serviceSparePartsRequest.subTitle')}</p>\n                            \n                        </Grid>\n                        <Grid item xs={12}>\n                            <MaterialTable\n                                noHeader={true}\n                                columns={(props.canEditRequestSparePart ? spare_part_columns : spare_part_columns_no_actions)}\n                                data={props.spare_parts}\n                                progressPending={props.userLoading}\n                                progressComponent={<CircularProgress size={75} />}\n                                responsive={true}\n                                selectableRows\n                                selectableRowsComponent={Checkbox}\n                                selectableRowsComponentProps={{ className: \"spare-part-checkbox\", color: \"primary\" }} \n                                selectableRowSelected={row => (props.spare_parts.find(product => product.id === row.id && product.selected) != undefined) }\n                                onSelectedRowsChange={props.handleRequestSparePartRowChange}\n                                highlightOnHover={true}\n                                striped={true}\n                                contextMessage={{ singular: 'producto', plural: 'productos', message: 'seleccionados' }}\n                                noDataComponent={i18next.t('globalText.NoDataComponent')}\n                                paginationComponentOptions={{rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n\n                            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale}>\n                                <KeyboardDatePicker\n                                    className=\"payment-date-input full-width-height\" \n                                    id=\"date-payment-dialog\"\n                                    label={t('services.serviceSparePartsRequest.sparePartDeliveryDate')}\n                                    format=\"dd/MM/yyyy\"\n                                    value={props.spare_part_delivery_date}\n                                    onChange={props.handleSparePartDeliveryDateChange}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <FormControl variant=\"outlined\" className=\"MuiFormControl-fullWidth\">\n                                    <InputLabel id=\"principal_technician-simple-select-outlined-label\">{t('services.serviceSparePartsRequest.principalTechnician')}</InputLabel>\n                                    <Select\n                                    labelId=\"principal_technician-simple-select-outlined-label\"\n                                    id=\"principal_technician-simple-select-outlined\"\n                                    value={props.principal_technician == null ? \"\" : props.principal_technician}\n                                    onChange={(e) => props.setPrincipalTechnician(e.target.value)}\n                                    label={t('services.serviceSparePartsRequest.principalTechnician')}\n                                    name=\"principal_technician\"\n                                    >\n                                    {props.service_technicians.map((service_technician) => (\n                                        <MenuItem key={\"principal_technician-\"+service_technician.id} value={service_technician.id}>{service_technician.user.fullname} ({service_technician.user.email})</MenuItem>\n                                    ))}\n                                    </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            {(props.country_change) &&\n                                <NewScheduleDialog\n                                    schedule_type=\"service\"\n                                    btn_classname={\"full-width-height\"}\n                                    btn_text={t('services.serviceSparePartsRequest.technicalCalendarButton')}\n                                    customer_id={props.customer_id}\n                                    country={props.country}\n                                    selectedProductRows={props.selectedProductRows}\n                                    service_type={props.service_type}\n                                    subcategory={props.subcategory}\n                                    requested={props.requested}\n                                    techinicianNumber={props.techinicianNumber}\n                                    zipcode={props.zipcode}\n                                    administrative_demarcation={props.administrative_demarcation}\n                                    setTechinicianNumber={props.setTechinicianNumber}\n                                    event={props.event}\n                                    setEvent={props.setEvent}\n                                    technicians_ids={props.technicians_ids}\n                                    setTechniciansIds={props.setTechniciansIds}\n                                    saveService={props.saveService}\n                                    technicians={props.technicians}\n                                    setTechnicians={props.setTechnicians}\n                                    totalhours={props.totalhours}\n                                    // Callbacks\n                                    scheduleCallBack={props.scheduleCallBack}\n                                />\n                            }\n                        </Grid>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <br/>\n                                <PaymentEmailDialog \n                                    email={props.customerEmail}\n                                    paymentEmailDialog={props.paymentEmailDialog}\n                                    setPaymentEmailDialog={props.setPaymentEmailDialog}\n                                    loading={props.loading}\n                                    setLoading={props.setLoading}\n                                    saveService={props.saveService}\n                                    paymentEmailAdditional={props.paymentEmailAdditional}\n                                    setPaymentEmailAdditional={props.setPaymentEmailAdditional}\n                                    isPaymentEmail={props.isPaymentEmail}\n                                    setIsPaymentEmail={props.setIsPaymentEmail}\n                                />\n                                <div className={props.classes.wrapper}>\n                                    <Button id=\"service-save\" disabled={props.loading} type=\"submit\" variant=\"contained\" color=\"primary\" onClick={props.handleSparePartSubmit}>\n                                        {t('services.serviceSparePartsRequest.sparePartSubmitButton')}\n                                    </Button>\n                                    {props.loading && <CircularProgress size={24} className={props.classes.buttonProgress} />}\n                                </div>\n                                \n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </AccordionDetails>\n            </Accordion>\n                \n\n\t\t    \n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({\n});\nconst mapDispatchToProps = {};\n\nexport default connect(structuredSelector, mapDispatchToProps)(ServiceSparePartsRequest)\n"]},"metadata":{},"sourceType":"module"}