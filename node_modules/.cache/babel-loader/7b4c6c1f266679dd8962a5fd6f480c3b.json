{"ast":null,"code":"\"use strict\";\n\nfunction _typeof2(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n  return _typeof2(obj);\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toArray(arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar REACT_ELEMENT = Symbol[\"for\"](\"react.element\");\nvar EMPTY_ARRAY = [];\n\nvar isFlattenable = function isFlattenable(value) {\n  var type = typeof value === \"undefined\" ? \"undefined\" : _typeof(value);\n  return type === \"string\" || type === \"number\";\n};\n\nvar flatten = function flatten(array) {\n  if (array.every(isFlattenable)) {\n    return array.join(\"\");\n  }\n\n  return array;\n};\n\nvar toTemplate = function toTemplate(string) {\n  var expressionRE = /{{\\w+}}/g;\n  var match = string.match(expressionRE) || EMPTY_ARRAY;\n  return [string.split(expressionRE)].concat(_toConsumableArray(match));\n};\n\nvar normalizeValue = function normalizeValue(value, key) {\n  if (value == null || typeof value === \"boolean\") {\n    return value;\n  }\n\n  if (typeof value === \"string\" || typeof value === \"number\") {\n    return value;\n  }\n\n  if (value.$$typeof === REACT_ELEMENT) {\n    return _react2[\"default\"].cloneElement(value, {\n      key: key\n    });\n  }\n};\n\nvar render = function render(string, values) {\n  var _toTemplate = toTemplate(string),\n      _toTemplate2 = _toArray(_toTemplate),\n      parts = _toTemplate2[0],\n      expressions = _toTemplate2.slice(1);\n\n  return flatten(parts.reduce(function (acc, item, index, array) {\n    if (index === array.length - 1) {\n      return [].concat(_toConsumableArray(acc), [item]);\n    }\n\n    var match = expressions[index] && expressions[index].match(/{{(\\w+)}}/);\n    var value = match != null ? values[match[1]] : null;\n    return [].concat(_toConsumableArray(acc), [item, normalizeValue(value, index)]);\n  }, []));\n};\n\nexports[\"default\"] = render;","map":null,"metadata":{},"sourceType":"module"}