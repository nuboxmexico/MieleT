{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/NewScheduleDialog.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport { csrf, headers, getRandomColor, getTechiniansInfo, getProductsInfo } from \"constants/csrf\";\nimport { flash_alert } from 'components/App';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport Slide from '@material-ui/core/Slide';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //Calendar\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timegridPlugin from \"@fullcalendar/timegrid\";\nimport daygridPlugin from \"@fullcalendar/daygrid\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport esLocale from '@fullcalendar/core/locales/es'; // List\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face'; // Accordeon\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nvar GET_TECHNICIANS_TAXONS_REQUEST = \"GET_TECHNICIANS_TAXONS_REQUEST\";\nvar GET_TECHNICIANS_TAXONS_SUCCESS = \"GET_TECHNICIANS_TAXONS_SUCCESS\";\n\nfunction getTechnicians() {\n  var country = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var taxons_names = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var taxon_type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var zone = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  return function (dispatch) {\n    dispatch({\n      type: GET_TECHNICIANS_TAXONS_REQUEST\n    });\n    return fetch(\"/api/v1/get_technicians_by_taxon?country=\".concat(country, \"&taxons_names=\").concat(taxons_names, \"&taxon_type=\").concat(taxon_type, \"&zone=\").concat(zone)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(getTechniciansSuccess(json));\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n}\n\n;\nexport function getTechniciansSuccess(json) {\n  return {\n    type: GET_TECHNICIANS_TAXONS_SUCCESS,\n    json: json\n  };\n}\n;\nvar GET_CALENDAR_EVENTS_REQUEST = \"GET_CALENDAR_EVENTS_REQUEST\";\nvar GET_CALENDAR_EVENTS_SUCCESS = \"GET_CALENDAR_EVENTS_SUCCESS\";\n\nfunction getCalendarEvents(country_iso) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_CALENDAR_EVENTS_REQUEST\n    });\n    return fetch(\"/api/v1/calendar_events?country=\".concat(country_iso)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(getCalendarEventsSuccess(json));\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n}\n\n;\nexport function getCalendarEventsSuccess(json) {\n  return {\n    type: GET_CALENDAR_EVENTS_SUCCESS,\n    json: json\n  };\n}\n;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    appBar: {\n      position: 'relative',\n      minHeight: \"50px\"\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: '33.33%',\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    },\n    buttonProgressRelative: {\n      position: 'relative',\n      left: '50%',\n      marginTop: 12,\n      marginLeft: -24\n    }\n  };\n});\nvar Transition = /*#__PURE__*/React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }\n  }));\n});\n\nfunction NewScheduleDialog(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState({\n    start: \"\",\n    end: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      current_event = _useState4[0],\n      setCurrentEvent = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userLoading = _useState6[0],\n      setUserLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      checkedTechnicians = _useState8[0],\n      setCheckedTechnicians = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      checkedTechniciansObject = _useState10[0],\n      setCheckedTechniciansObject = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      checkedOthersTechnicians = _useState12[0],\n      setCheckedOthersTechnicians = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      checkedOthersTechniciansObject = _useState14[0],\n      setCheckedOthersTechniciansObject = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      technician_calendar_events = _useState16[0],\n      setTechnician_calendar_events = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      eventObject = _useState18[0],\n      setEventObject = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      loading = _useState20[0],\n      setLoading = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      firstLoad = _useState22[0],\n      setfirstLoad = _useState22[1];\n\n  var calendarRef = /*#__PURE__*/React.createRef(\"\");\n\n  var _useState23 = useState('panel1'),\n      _useState24 = _slicedToArray(_useState23, 2),\n      expanded = _useState24[0],\n      setExpanded = _useState24[1];\n\n  var handleChange = function handleChange(panel) {\n    return function (event, isExpanded) {\n      setExpanded(isExpanded ? panel : false);\n    };\n  };\n\n  useEffect(function () {\n    if (firstLoad) {\n      fetch_technician_events(props.technicians_ids, firstLoad);\n      setfirstLoad(false);\n    }\n\n    if (props.event) {\n      if (calendarRef.current != null) {\n        var last_event = calendarRef.current.getApi().getEventById(\"service_schedule\");\n\n        if (last_event == null) {\n          calendarRef.current.getApi().addEvent({\n            id: \"service_schedule\",\n            title: \"\".concat(props.service_type),\n            description: \"Producto/s: \".concat(getProductsInfo(props.selectedProductRows), \" - T\\xE9cnico/s: \").concat(getTechiniansInfo(checkedTechniciansObject)),\n            start: props.event.start,\n            end: props.event.end,\n            allDay: false,\n            color: getRandomColor()\n          });\n        }\n      }\n    }\n\n    if (props.current_event) {\n      if (props.current_event.start != \"\") {\n        if (calendarRef.current != null) {\n          var _last_event = calendarRef.current.getApi().getEventById(\"visit_schedule\");\n\n          var last_service_event = calendarRef.current.getApi().getEventById(\"service_schedule\");\n\n          if (last_service_event) {\n            last_service_event.remove();\n          }\n\n          if (_last_event == null) {\n            calendarRef.current.getApi().addEvent({\n              id: \"visit_schedule\",\n              title: \"\".concat(props.service_type),\n              description: \"Producto/s: \".concat(getProductsInfo(props.selectedProductRows), \" - T\\xE9cnico/s: \").concat(getTechiniansInfo(checkedTechniciansObject)),\n              start: props.current_event.start,\n              end: props.current_event.end,\n              allDay: false,\n              color: getRandomColor()\n            });\n          }\n        }\n      }\n    }\n  }, [calendarRef]);\n  useEffect(function () {\n    fetch_technician_events(props.technicians_ids);\n  }, [props.technicians_ids]);\n  useEffect(function () {\n    if (calendarRef.current) {\n      fetch_technician_events(props.technicians_ids);\n    }\n  }, []);\n  useEffect(function () {\n    if (open) {\n      setfirstLoad(true); //props.technicians_ids.split(\",\").map((technician_id) => (\n      //document.getElementsByClassName(\"technician-check-\"+technician_id)[0].click()\n      //))\n    }\n  }, [open]);\n  useEffect(function () {\n    if (props.current_event) {\n      if (props.current_event.start != \"\") {\n        if (calendarRef.current != null) {\n          var last_event = calendarRef.current.getApi().getEventById(\"visit_schedule\");\n\n          if (last_event == null) {\n            calendarRef.current.getApi().addEvent({\n              id: \"visit_schedule\",\n              title: \"\".concat(props.service_type),\n              description: \"Producto/s: \".concat(getProductsInfo(props.selectedProductRows), \" - T\\xE9cnico/s: \").concat(getTechiniansInfo(checkedTechniciansObject)),\n              start: props.current_event.start,\n              end: props.current_event.end,\n              allDay: false,\n              color: getRandomColor()\n            });\n          }\n        }\n      }\n    }\n  }, [props.current_event]);\n\n  function fetch_technician_events(technicians_ids_params) {\n    var firstLoad_t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (calendarRef.current != null && technicians_ids_params != \"\") {\n      setLoading(true);\n      var current_ref = calendarRef.current;\n\n      var new_technician_calendar_events = _toConsumableArray(technician_calendar_events);\n\n      new_technician_calendar_events.forEach(function (event_id) {\n        var last_event = current_ref.getApi().getEventById(event_id);\n\n        if (last_event) {\n          last_event.remove();\n        }\n      });\n      fetch(\"/api/v1/technician_calendar_events?technician_id=\".concat(technicians_ids_params)).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        json.data.forEach(function (event) {\n          event.color = getRandomColor();\n          event.display = \"background\";\n          event.overlap = true;\n          event.id = \"technician_events\" + new_technician_calendar_events.length;\n          event.groupID = \"technician_events\";\n          current_ref.getApi().addEvent(event);\n          new_technician_calendar_events.push(\"technician_events\" + new_technician_calendar_events.length);\n        });\n        setTechnician_calendar_events(new_technician_calendar_events);\n\n        if (!firstLoad_t) {\n          setCurrentEvent({\n            start: \"\",\n            end: \"\"\n          });\n          var last_event = current_ref.getApi().getEventById(\"service_schedule\");\n\n          if (last_event) {\n            last_event.remove();\n          }\n\n          var last_visit_event = current_ref.getApi().getEventById(\"visit_schedule\");\n\n          if (last_visit_event) {\n            last_visit_event.remove();\n          }\n        }\n\n        setLoading(false);\n      })[\"catch\"](function (error) {\n        return setLoading(false);\n      });\n    }\n  }\n\n  function handleClickOpen(e) {\n    e.preventDefault();\n\n    if (props.selectedProductRows.length < 1 && props.service_type != 'Póliza de Mantenimiento') {\n      flash_alert(\"Atención\", \"Debe seleccionar al menos 1 producto\", \"warning\");\n    } else if (props.service_type == \"\") {\n      flash_alert(\"Atención\", \"Debe seleccionar el tipo de servicio a solicitar\", \"warning\");\n    } else {\n      var taxons_names = [];\n      props.selectedProductRows.forEach(function (customer_product) {\n        if (customer_product.product != undefined) {\n          if (customer_product.product.taxons.length > 0) {\n            customer_product.product.taxons.forEach(function (taxon) {\n              taxons_names.push(taxon.name);\n            });\n          }\n        }\n      });\n      var zone = \"\";\n\n      if (props.country == \"MX\") {\n        zone = props.zipcode;\n      } else {\n        zone = props.administrative_demarcation.admin_name_3;\n      }\n\n      props.getTechnicians(props.country, taxons_names.join(','), props.service_type, zone);\n      props.getCalendarEvents(props.country);\n      setOpen(true);\n    }\n  }\n\n  function handleClose(e) {\n    e.preventDefault();\n    setOpen(false); //props.setVisit()\n\n    if (props.scheduleCallBack) {\n      props.scheduleCallBack();\n    }\n  }\n\n  var handleDateClick = function handleDateClick(arg) {// bind with an arrow function\n  };\n\n  var handleDateSelect = function handleDateSelect(arg) {\n    // bind with an arrow function\n    var calendarApi = arg.view.calendar;\n\n    if (props.current_event) {\n      var last_event = calendarApi.getEventById(\"visit_schedule\");\n\n      if (last_event) {\n        last_event.remove();\n      }\n\n      calendarApi.addEvent({\n        id: \"visit_schedule\",\n        title: \"\".concat(props.service_type),\n        description: \"Producto/s: \".concat(getProductsInfo(props.selectedProductRows), \" - T\\xE9cnico/s: \").concat(getTechiniansInfo(checkedTechniciansObject)),\n        start: arg.startStr,\n        end: arg.endStr,\n        allDay: arg.allDay,\n        color: getRandomColor()\n      });\n    } else {\n      var _last_event2 = calendarApi.getEventById(\"service_schedule\");\n\n      if (_last_event2) {\n        _last_event2.remove();\n      }\n\n      calendarApi.addEvent({\n        id: \"service_schedule\",\n        title: \"\".concat(props.service_type),\n        description: \"Producto/s: \".concat(getProductsInfo(props.selectedProductRows), \" - T\\xE9cnico/s: \").concat(getTechiniansInfo(checkedTechniciansObject)),\n        start: arg.startStr,\n        end: arg.endStr,\n        allDay: arg.allDay,\n        color: getRandomColor()\n      });\n    }\n\n    if (arg.allDay) {\n      setCurrentEvent({\n        start: arg.startStr + \"T08:00:00\",\n        end: arg.startStr + \"T20:00:00\"\n      });\n    } else {\n      setCurrentEvent({\n        start: arg.startStr,\n        end: arg.endStr\n      });\n    }\n\n    calendarApi.updateSize();\n  };\n\n  var handleDateUnselect = function handleDateUnselect(arg) {\n    // bind with an arrow function\n    console.log(arg);\n  };\n\n  var handleEventClick = function handleEventClick(clickInfo) {\n    if (clickInfo.event.title && clickInfo.event.display != \"background\") {\n      if (confirm(\"\\xBFEsta seguro que quiere eliminar el evento '\".concat(clickInfo.event.title, \"'?\"))) {\n        clickInfo.event.remove();\n        setCurrentEvent({\n          start: \"\",\n          end: \"\"\n        });\n      }\n    }\n  };\n\n  function handleSchedule(_x) {\n    return _handleSchedule.apply(this, arguments);\n  }\n\n  function _handleSchedule() {\n    _handleSchedule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var save_function_param;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (checkedTechnicians.length + checkedOthersTechnicians.length < 1 || checkedTechnicians.length + checkedOthersTechnicians.length == 0) {\n                flash_alert(\"Atención\", \"Debe seleccionar al menos \".concat(1, \" t\\xE9cnico(s)\"), \"warning\");\n              } else {\n                props.setEvent(current_event);\n                setOpen(false);\n                save_function_param = props.schedule_type == \"visit\" ? props.current_visit : false;\n\n                if (props.schedule_type == \"visit\") {\n                  props.saveService(save_function_param, current_event);\n                  console.log(\"Agendar visita\");\n                } else {\n                  props.saveService(save_function_param, \"schedule_visit\");\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSchedule.apply(this, arguments);\n  }\n\n  var handleTechToggle = function handleTechToggle(value) {\n    return function () {\n      var currentIndex = checkedTechnicians.indexOf(value);\n\n      var newChecked = _toConsumableArray(checkedTechnicians);\n\n      var newCheckedObjects = _toConsumableArray(checkedTechniciansObject);\n\n      var current_techinician = props.technicians.find(function (technician) {\n        return technician.id == value;\n      });\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n        newCheckedObjects.push(current_techinician);\n      } else {\n        newChecked.splice(currentIndex, 1);\n        newCheckedObjects.splice(currentIndex, 1);\n      }\n\n      props.setTechniciansIds(newChecked.concat(checkedOthersTechnicians).toString());\n      setCheckedTechnicians(newChecked);\n      setCheckedTechniciansObject(newCheckedObjects);\n      props.setTechnicians(newCheckedObjects.concat(checkedOthersTechniciansObject));\n    };\n  };\n\n  var handleOtherTechToggle = function handleOtherTechToggle(value) {\n    return function () {\n      var currentIndex = checkedOthersTechnicians.indexOf(value);\n\n      var newChecked = _toConsumableArray(checkedOthersTechnicians);\n\n      var newCheckedObjects = _toConsumableArray(checkedOthersTechniciansObject);\n\n      var current_techinician = props.others_technicians.find(function (technician) {\n        return technician.id == value;\n      });\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n        newCheckedObjects.push(current_techinician);\n      } else {\n        newChecked.splice(currentIndex, 1);\n        newCheckedObjects.splice(currentIndex, 1);\n      }\n\n      props.setTechniciansIds(newChecked.concat(checkedTechnicians).toString());\n      setCheckedOthersTechnicians(newChecked);\n      setCheckedOthersTechniciansObject(newCheckedObjects);\n      props.setTechnicians(newCheckedObjects.concat(checkedTechniciansObject));\n    };\n  };\n\n  function renderInnerContent(innerProps) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fc-daygrid-dot-event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fc-daygrid-event-dot\",\n      style: {\n        \"borderColor\": innerProps.backgroundColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fc-event-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }\n    }, innerProps.timeText), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fc-event-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }\n    }, innerProps.event.title || \"\"));\n  }\n\n  var loading_var = userLoading.loading_var;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }\n  }, props.schedule_type == \"visit\" && /*#__PURE__*/React.createElement(Button, {\n    className: props.btn_classname + \"customers-scheddule-visit-link\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"service-tooltip\",\n      dangerouslySetInnerHTML: {\n        __html: props.btn_text || \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 33\n      }\n    })),\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 27\n    }\n  }, \"sync\"))), props.schedule_type == \"service\" && /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: props.btn_classname,\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 21\n    }\n  }, \"book_online\"), \"\\xA0\\xA0\", props.btn_text), /*#__PURE__*/React.createElement(Dialog, {\n    TransitionComponent: Transition,\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"schedule-back-button\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 29\n    }\n  }, \"chevron_left\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 29\n    }\n  }, t('calendarTechnical.scheduleBackButton'))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    className: \"schedule-save-buttom\",\n    color: \"primary\",\n    onClick: handleSchedule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 25\n    }\n  }, t('calendarTechnical.scheduleSaveButton')))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    className: \"schedule-service-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 29\n    }\n  }, t('calendarTechnical.scheduleVisit'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: \"schedule-service-techinicias-available\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 29\n    }\n  }, t('calendarTechnical.techniciansAvailable')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"schedule-service-techinicias-available-p mdl-navigation__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons schedule-material-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 33\n    }\n  }, \"info_outline\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 103\n    }\n  }, t('calendarTechnical.techniciansText#1'), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 152\n    }\n  }, props.techinicianNumber, \" \", t('calendarTechnical.techniciansText#2'), \" \")), \" \", props.totalhours && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 267\n    }\n  }, \"y \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 275\n    }\n  }, props.totalhours, \" hora(s)\"))), !props.technicians && !props.others_technicians && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgressRelative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 29\n    }\n  }, props.technicians && props.technicians.map(function (technician) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      className: \"schedule-list-technician\",\n      key: technician.id,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleTechToggle(technician.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: checkedTechnicians.indexOf(technician.id) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      color: \"primary\",\n      inputProps: {\n        'aria-labelledby': \"checkbox-list-label-\".concat(technician.id)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: \"checkbox-list-label-\".concat(technician.id),\n      primary: technician.enterprise != \"\" && technician.enterprise != null ? technician.user.fullname + \" (\" + technician.enterprise + \")\" : technician.user.fullname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 41\n      }\n    }));\n  }), props.technicians && (props.technicians.length > 0 ? \"\" : /*#__PURE__*/React.createElement(Chip, {\n    icon: /*#__PURE__*/React.createElement(FaceIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 104\n      }\n    }),\n    label: t('calendarTechnical.noTechniciansAvailable'),\n    color: \"primary\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 92\n    }\n  }))), /*#__PURE__*/React.createElement(Accordion, {\n    className: \"others-tech-accordeon\",\n    expanded: expanded === 'panel1',\n    onChange: handleChange('panel1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 45\n      }\n    }),\n    \"aria-controls\": \"panel1bh-content\",\n    id: \"panel1bh-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: \"schedule-service-techinicias-available\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 33\n    }\n  }, t('calendarTechnical.otherTechnicians')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.secondaryHeading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 41\n    }\n  }, props.others_technicians && props.others_technicians.map(function (technician) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      className: \"schedule-list-technician\",\n      key: technician.id,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleOtherTechToggle(technician.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      className: \"technician-check-\" + technician.id,\n      checked: checkedOthersTechnicians.indexOf(technician.id) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      color: \"primary\",\n      inputProps: {\n        'aria-labelledby': \"checkbox-list-label-\".concat(technician.id)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: \"checkbox-list-label-\".concat(technician.id),\n      primary: technician.enterprise != \"\" && technician.enterprise != null ? technician.user.fullname + \" (\" + technician.enterprise + \")\" : technician.user.fullname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 53\n      }\n    }));\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    className: \"technicians-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 25\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FullCalendar, {\n    timeZone: 'local',\n    plugins: [dayGridPlugin, interactionPlugin, timegridPlugin, daygridPlugin],\n    initialView: \"timeGridWeek\",\n    selectable: true,\n    ref: calendarRef //weekends={false}\n    ,\n    selectAllow: function selectAllow(info) {\n      if (info.start < new Date()) return false;\n      return true;\n    },\n    events: props.calendar_events,\n    id: \"initial_events\",\n    selectOverlap: function selectOverlap(event) {\n      return event.rendering === 'background';\n    },\n    headerToolbar: {\n      start: 'today',\n      center: 'prevYear,prev,title,next,nextYear',\n      end: 'dayGridMonth,timeGridWeek,timeGridDay'\n    },\n    slotLabelFormat: ({\n      month: 'long',\n      year: 'numeric'\n    }, {\n      hour: 'numeric',\n      minute: '2-digit',\n      meridiem: 'short',\n      hour12: true\n    }),\n    slotLabelContent: function slotLabelContent(arg) {\n      var label_text = arg.text;\n\n      if (arg.text == \"0:00 p. m.\") {\n        label_text = \"12:00 p. m.\";\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, label_text);\n    },\n    locale: esLocale,\n    slotDuration: \"01:00:00\",\n    slotMinTime: \"07:00\",\n    slotMaxTime: \"21:00\",\n    dateClick: handleDateClick,\n    select: handleDateSelect,\n    unselect: handleDateUnselect,\n    eventClick: handleEventClick,\n    eventContent: function eventContent(arg) {\n      if (arg.event.id == \"service_schedule\" || arg.event.id == \"visit_schedule\") {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, renderInnerContent(arg));\n      } else {\n        return /*#__PURE__*/React.createElement(Tooltip, {\n          title: /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 57\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"service-tooltip\",\n            dangerouslySetInnerHTML: {\n              __html: arg.event.extendedProps.description || \"\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 45\n            }\n          })),\n          arrow: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 41\n          }\n        }, renderInnerContent(arg));\n      }\n    },\n    businessHours: {\n      daysOfWeek: [0, 1, 2, 3, 4, 5, 6],\n      startTime: '07:00',\n      endTime: '21:00'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nvar structuredSelector = createStructuredSelector({\n  technicians: function technicians(state) {\n    return state.technicians;\n  },\n  calendar_events: function calendar_events(state) {\n    return state.calendar_events;\n  },\n  others_technicians: function others_technicians(state) {\n    return state.others_technicians;\n  }\n});\nvar mapDispatchToProps = {\n  getTechnicians: getTechnicians,\n  getCalendarEvents: getCalendarEvents\n};\nexport default connect(structuredSelector, mapDispatchToProps)(NewScheduleDialog);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/NewScheduleDialog.jsx"],"names":["React","useState","useEffect","ReactDOM","axios","Redirect","connect","createStructuredSelector","TextField","Grid","FormControl","Button","csrf","headers","getRandomColor","getTechiniansInfo","getProductsInfo","flash_alert","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Link","Slide","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","MenuItem","makeStyles","useTranslation","CircularProgress","FullCalendar","dayGridPlugin","interactionPlugin","timegridPlugin","daygridPlugin","Tooltip","esLocale","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","Chip","FaceIcon","Accordion","AccordionDetails","AccordionSummary","ExpandMoreIcon","GET_TECHNICIANS_TAXONS_REQUEST","GET_TECHNICIANS_TAXONS_SUCCESS","getTechnicians","country","taxons_names","taxon_type","zone","dispatch","type","fetch","then","response","json","getTechniciansSuccess","error","console","log","GET_CALENDAR_EVENTS_REQUEST","GET_CALENDAR_EVENTS_SUCCESS","getCalendarEvents","country_iso","getCalendarEventsSuccess","useStyles","theme","appBar","position","minHeight","title","marginLeft","spacing","flex","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","buttonProgress","top","left","marginTop","buttonProgressRelative","Transition","forwardRef","props","ref","NewScheduleDialog","t","classes","open","setOpen","start","end","current_event","setCurrentEvent","userLoading","setUserLoading","checkedTechnicians","setCheckedTechnicians","checkedTechniciansObject","setCheckedTechniciansObject","checkedOthersTechnicians","setCheckedOthersTechnicians","checkedOthersTechniciansObject","setCheckedOthersTechniciansObject","technician_calendar_events","setTechnician_calendar_events","eventObject","setEventObject","loading","setLoading","firstLoad","setfirstLoad","calendarRef","createRef","expanded","setExpanded","handleChange","panel","event","isExpanded","fetch_technician_events","technicians_ids","current","last_event","getApi","getEventById","addEvent","id","service_type","description","selectedProductRows","allDay","last_service_event","remove","technicians_ids_params","firstLoad_t","current_ref","new_technician_calendar_events","forEach","event_id","data","display","overlap","length","groupID","push","last_visit_event","handleClickOpen","e","preventDefault","customer_product","product","undefined","taxons","taxon","name","zipcode","administrative_demarcation","admin_name_3","join","handleClose","scheduleCallBack","handleDateClick","arg","handleDateSelect","calendarApi","view","calendar","startStr","endStr","updateSize","handleDateUnselect","handleEventClick","clickInfo","confirm","handleSchedule","setEvent","save_function_param","schedule_type","current_visit","saveService","handleTechToggle","value","currentIndex","indexOf","newChecked","newCheckedObjects","current_techinician","technicians","find","technician","splice","setTechniciansIds","concat","toString","setTechnicians","handleOtherTechToggle","others_technicians","renderInnerContent","innerProps","backgroundColor","timeText","loading_var","btn_classname","__html","btn_text","techinicianNumber","totalhours","map","enterprise","user","fullname","info","Date","calendar_events","rendering","center","month","year","hour","minute","meridiem","hour12","label_text","extendedProps","daysOfWeek","startTime","endTime","structuredSelector","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport {csrf, headers, getRandomColor, getTechiniansInfo, getProductsInfo} from \"constants/csrf\"\nimport { flash_alert } from 'components/App';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport Slide from '@material-ui/core/Slide';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Calendar\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timegridPlugin from \"@fullcalendar/timegrid\";\nimport daygridPlugin from \"@fullcalendar/daygrid\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport esLocale from '@fullcalendar/core/locales/es';\n \n// List\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\n\n// Accordeon\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\nconst GET_TECHNICIANS_TAXONS_REQUEST = \"GET_TECHNICIANS_TAXONS_REQUEST\";\nconst GET_TECHNICIANS_TAXONS_SUCCESS = \"GET_TECHNICIANS_TAXONS_SUCCESS\";\n\nfunction getTechnicians(country = \"\", taxons_names=\"\", taxon_type = \"\", zone = \"\") {\n    return dispatch => {\n      dispatch({type: GET_TECHNICIANS_TAXONS_REQUEST});\n      return fetch(`/api/v1/get_technicians_by_taxon?country=${country}&taxons_names=${taxons_names}&taxon_type=${taxon_type}&zone=${zone}`)\n        .then(response => response.json())\n        .then(json => dispatch(getTechniciansSuccess(json)))\n        .catch(error => console.log(error));\n    };\n  };\n  \n  export function getTechniciansSuccess(json) {\n    return {\n      type: GET_TECHNICIANS_TAXONS_SUCCESS,\n      json\n    };\n  };\n\n\nconst GET_CALENDAR_EVENTS_REQUEST = \"GET_CALENDAR_EVENTS_REQUEST\";\nconst GET_CALENDAR_EVENTS_SUCCESS = \"GET_CALENDAR_EVENTS_SUCCESS\";\n\nfunction getCalendarEvents(country_iso) {\n    return dispatch => {\n    dispatch({type: GET_CALENDAR_EVENTS_REQUEST});\n    return fetch(`/api/v1/calendar_events?country=${country_iso}`)\n        .then(response => response.json())\n        .then(json => dispatch(getCalendarEventsSuccess(json)))\n        .catch(error => console.log(error));\n    };\n};\n\nexport function getCalendarEventsSuccess(json) {\n    return {\n    type: GET_CALENDAR_EVENTS_SUCCESS,\n    json\n    };\n};\n    \n  \n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: 'relative',\n      minHeight: \"50px\",\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n      },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    buttonProgressRelative: {\n        position: 'relative',\n        left: '50%',\n        marginTop: 12,\n        marginLeft: -24,\n    },\n  }));\n  \n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction NewScheduleDialog(props){\n    const {t} = useTranslation();\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [current_event, setCurrentEvent] = useState({start: \"\", end: \"\"});\n    const [userLoading, setUserLoading] = useState(false);\n    const [checkedTechnicians, setCheckedTechnicians] = useState([]);\n    const [checkedTechniciansObject, setCheckedTechniciansObject] = useState([]);\n    const [checkedOthersTechnicians, setCheckedOthersTechnicians] = useState([]);\n    const [checkedOthersTechniciansObject, setCheckedOthersTechniciansObject] = useState([]);\n    const [technician_calendar_events, setTechnician_calendar_events] = useState([]);\n    const [eventObject, setEventObject] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [firstLoad, setfirstLoad] = useState(false);\n    \n    const calendarRef = React.createRef(\"\")\n    \n\n    const [expanded, setExpanded] = useState('panel1');\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    useEffect(() => {\n        if(firstLoad){\n            fetch_technician_events(props.technicians_ids, firstLoad)\n            setfirstLoad(false)\n        }\n        if(props.event){\n            if(calendarRef.current != null){\n                let last_event = calendarRef.current.getApi().getEventById(\"service_schedule\")\n                if(last_event == null){\n                    calendarRef.current.getApi().addEvent({\n                        id: \"service_schedule\",\n                        title: `${props.service_type}`,\n                        description: `Producto/s: ${getProductsInfo(props.selectedProductRows)} - Técnico/s: ${getTechiniansInfo(checkedTechniciansObject)}`,\n                        start: props.event.start,\n                        end: props.event.end,\n                        allDay: false,\n                        color: getRandomColor()\n                    });\n                }\n            }\n        }\n        if(props.current_event){\n            if(props.current_event.start != \"\"){\n                if(calendarRef.current != null){\n                    let last_event = calendarRef.current.getApi().getEventById(\"visit_schedule\")\n                    let last_service_event = calendarRef.current.getApi().getEventById(\"service_schedule\")\n                    if(last_service_event){\n                        last_service_event.remove()\n                    }\n                    if(last_event == null){\n                        calendarRef.current.getApi().addEvent({\n                            id: \"visit_schedule\",\n                            title: `${props.service_type}`,\n                            description: `Producto/s: ${getProductsInfo(props.selectedProductRows)} - Técnico/s: ${getTechiniansInfo(checkedTechniciansObject)}`,\n                            start: props.current_event.start,\n                            end: props.current_event.end,\n                            allDay: false,\n                            color: getRandomColor()\n                        });\n                    }\n                    \n                }\n            }\n        }\n    }, [calendarRef]);\n\n    useEffect(() => {\n\n        fetch_technician_events(props.technicians_ids)\n    }, [props.technicians_ids]);\n    \n    useEffect(() => {\n        if(calendarRef.current){\n            fetch_technician_events(props.technicians_ids)\n        }\n    }, []);\n    useEffect(() => {\n        if(open){\n            \n            setfirstLoad(true)\n            //props.technicians_ids.split(\",\").map((technician_id) => (\n                //document.getElementsByClassName(\"technician-check-\"+technician_id)[0].click()\n            //))\n        }\n    }, [open]);\n\n    useEffect(() => {\n        if(props.current_event){\n            if(props.current_event.start != \"\"){\n                if(calendarRef.current != null){\n                    let last_event = calendarRef.current.getApi().getEventById(\"visit_schedule\")\n                    if(last_event == null){\n                        calendarRef.current.getApi().addEvent({\n                            id: \"visit_schedule\",\n                            title: `${props.service_type}`,\n                            description: `Producto/s: ${getProductsInfo(props.selectedProductRows)} - Técnico/s: ${getTechiniansInfo(checkedTechniciansObject)}`,\n                            start: props.current_event.start,\n                            end: props.current_event.end,\n                            allDay: false,\n                            color: getRandomColor()\n                        });\n                    }\n                }\n            }\n        }\n    }, [props.current_event]);\n\n    function fetch_technician_events(technicians_ids_params, firstLoad_t = false){\n        if(calendarRef.current != null && technicians_ids_params != \"\"){\n            setLoading(true)\n            let current_ref = (calendarRef.current);\n            const new_technician_calendar_events = [...technician_calendar_events]\n\n            new_technician_calendar_events.forEach(event_id => {\n                let last_event = current_ref.getApi().getEventById(event_id)\n                if(last_event){\n                    last_event.remove()\n                }\n            });\n\n            fetch(`/api/v1/technician_calendar_events?technician_id=${technicians_ids_params}`)\n                .then(response => response.json())\n                .then(json => {\n                    json.data.forEach(event => {\n                        event.color = getRandomColor()\n                        event.display = \"background\"\n                        event.overlap = true\n                        event.id = \"technician_events\" + new_technician_calendar_events.length\n                        event.groupID = \"technician_events\"\n                        current_ref.getApi().addEvent(event);\n                        new_technician_calendar_events.push(\"technician_events\" + new_technician_calendar_events.length)\n                    });\n                    setTechnician_calendar_events(new_technician_calendar_events)\n                    if(!firstLoad_t){\n                        setCurrentEvent({\n                            start: \"\",\n                            end: \"\",\n                        })\n                        let last_event = current_ref.getApi().getEventById(\"service_schedule\")\n                        if(last_event){\n                            last_event.remove()\n                        }\n                        let last_visit_event = current_ref.getApi().getEventById(\"visit_schedule\")\n                        if(last_visit_event){\n                            last_visit_event.remove()\n                        }\n                    }\n                    setLoading(false)\n                })\n                .catch(error => setLoading(false));\n        }\n    }\n\n\n\tfunction handleClickOpen(e){\n\n        e.preventDefault();\n        if(props.selectedProductRows.length < 1 && props.service_type != 'Póliza de Mantenimiento'){\n            flash_alert(\"Atención\", \"Debe seleccionar al menos 1 producto\" , \"warning\")\n        }else if(props.service_type == \"\"){\n            flash_alert(\"Atención\", \"Debe seleccionar el tipo de servicio a solicitar\" , \"warning\")    \n        }else{\n            var taxons_names = []\n            props.selectedProductRows.forEach(customer_product => {\n                if(customer_product.product != undefined){\n                    if(customer_product.product.taxons.length > 0){\n                        customer_product.product.taxons.forEach(taxon => {\n                            taxons_names.push(taxon.name)\n                        });\n                    }\n                }\n            });\n            let zone = \"\"\n            if(props.country == \"MX\"){\n                zone = props.zipcode\n            }else{\n                zone = props.administrative_demarcation.admin_name_3\n            }\n            props.getTechnicians(props.country, taxons_names.join(','), props.service_type, zone);\n            props.getCalendarEvents(props.country);\n            setOpen(true);\n        }\n\t}\n\n\tfunction handleClose(e){\n\t\te.preventDefault();\n        setOpen(false);\n        //props.setVisit()\n        if(props.scheduleCallBack){\n            props.scheduleCallBack();\n        }\n\t}\n\n\n    const handleDateClick = (arg) => { // bind with an arrow function\n    }\n    \n    \n        \n    const handleDateSelect = (arg) => { // bind with an arrow function\n        let calendarApi = arg.view.calendar\n        if(props.current_event){\n            \n            let last_event = calendarApi.getEventById(\"visit_schedule\")\n            if(last_event){\n                last_event.remove()\n            }\n\n            calendarApi.addEvent({\n                id: \"visit_schedule\",\n                title: `${props.service_type}`,\n                description: `Producto/s: ${getProductsInfo(props.selectedProductRows)} - Técnico/s: ${getTechiniansInfo(checkedTechniciansObject)}`,\n                start: arg.startStr,\n                end: arg.endStr,\n                allDay: arg.allDay,\n                color: getRandomColor()\n            });\n        }else{\n            \n            let last_event = calendarApi.getEventById(\"service_schedule\")\n            if(last_event){\n                last_event.remove()\n            }\n\n            calendarApi.addEvent({\n                id: \"service_schedule\",\n                title: `${props.service_type}`,\n                description: `Producto/s: ${getProductsInfo(props.selectedProductRows)} - Técnico/s: ${getTechiniansInfo(checkedTechniciansObject)}`,\n                start: arg.startStr,\n                end: arg.endStr,\n                allDay: arg.allDay,\n                color: getRandomColor()\n            });\n        }\n\n        if(arg.allDay){\n            setCurrentEvent({\n                start: (arg.startStr + \"T08:00:00\"),\n                end: (arg.startStr + \"T20:00:00\"),\n            })\n        }else{\n            setCurrentEvent({\n                start: arg.startStr,\n                end: arg.endStr,\n            })\n\n        }\n        calendarApi.updateSize();\n    }\n\n    const handleDateUnselect = (arg) => { // bind with an arrow function\n        console.log(arg);\n    }\n    \n\n    const handleEventClick = (clickInfo) => {\n        if(clickInfo.event.title && clickInfo.event.display != \"background\"){\n            if (confirm(`¿Esta seguro que quiere eliminar el evento '${clickInfo.event.title}'?`)) {\n              clickInfo.event.remove()\n              setCurrentEvent({\n                start: \"\",\n                end: \"\",\n                })\n            }\n        }\n    }\n\tasync function handleSchedule(e){\n        e.preventDefault();\n        if(((checkedTechnicians.length + checkedOthersTechnicians.length) < 1) || (checkedTechnicians.length + checkedOthersTechnicians.length) == 0){\n            flash_alert(\"Atención\", `Debe seleccionar al menos ${1} técnico(s)` , \"warning\")\n        }else{\n            props.setEvent(current_event)\n            setOpen(false);\n            let save_function_param = (props.schedule_type == \"visit\" ? props.current_visit : false);\n            if(props.schedule_type == \"visit\"){\n                props.saveService(save_function_param, current_event)\n                console.log(\"Agendar visita\");\n            }else{\n                props.saveService(save_function_param, \"schedule_visit\")\n            }\n        }\n    }\n\n    const handleTechToggle = (value) => () => {\n        const currentIndex = checkedTechnicians.indexOf(value);\n        const newChecked = [...checkedTechnicians];\n        const newCheckedObjects = [...checkedTechniciansObject];\n        \n        const current_techinician = props.technicians.find(function (technician) {\n            return technician.id  == value;\n          }\n        );\n        \n        if (currentIndex === -1) {\n            newChecked.push(value);\n            newCheckedObjects.push(current_techinician)\n        } else {\n            newChecked.splice(currentIndex, 1);\n            newCheckedObjects.splice(currentIndex, 1);\n        }\n        props.setTechniciansIds(newChecked.concat(checkedOthersTechnicians).toString());\n        setCheckedTechnicians(newChecked);\n        setCheckedTechniciansObject(newCheckedObjects);\n        props.setTechnicians(newCheckedObjects.concat(checkedOthersTechniciansObject))\n    };\n\n    const handleOtherTechToggle = (value) => () => {\n        const currentIndex = checkedOthersTechnicians.indexOf(value);\n        const newChecked = [...checkedOthersTechnicians];\n        const newCheckedObjects = [...checkedOthersTechniciansObject];\n        \n        const current_techinician = props.others_technicians.find(function (technician) {\n            return technician.id  == value;\n          }\n        );\n        \n        \n        if (currentIndex === -1) {\n            newChecked.push(value);\n            newCheckedObjects.push(current_techinician)\n        } else {\n            newChecked.splice(currentIndex, 1);\n            newCheckedObjects.splice(currentIndex, 1);\n        }\n        props.setTechniciansIds(newChecked.concat(checkedTechnicians).toString());\n        \n        setCheckedOthersTechnicians(newChecked);\n        setCheckedOthersTechniciansObject(newCheckedObjects);\n        props.setTechnicians(newCheckedObjects.concat(checkedTechniciansObject))\n    };\n\n    function renderInnerContent( innerProps ) {\n        return (\n            <span className=\"fc-daygrid-dot-event\">\n                <div className=\"fc-daygrid-event-dot\" style={{ \"borderColor\": innerProps.backgroundColor }}></div>\n                <div className=\"fc-event-time\">{ innerProps.timeText }</div>\n                <div className=\"fc-event-title\">{ innerProps.event.title || \"\" }</div>\n            </span>\n        );\n    }\n    const { loading_var } = userLoading;\n    return (\n        <React.Fragment>\n            {props.schedule_type == \"visit\" &&\n                <Button className={props.btn_classname + \"customers-scheddule-visit-link\"} color=\"primary\"  onClick={handleClickOpen}>\n                    <Tooltip title={\n                            <React.Fragment>\n                                <div className=\"service-tooltip\" dangerouslySetInnerHTML={{__html: (props.btn_text|| \"\")}} /> \n                            </React.Fragment>} arrow>\n                        { <i className=\"material-icons\">sync</i> }\n                    </Tooltip>\n                </Button>\n            }\n            {props.schedule_type == \"service\" &&\n                <Button variant=\"outlined\" className={props.btn_classname} color=\"primary\"  onClick={handleClickOpen}>\n                    <i className=\"material-icons\">book_online</i>&nbsp;&nbsp;{props.btn_text}\n                </Button>\n            }\n            <Dialog\n                TransitionComponent={Transition}\n                fullScreen\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                >\n                <AppBar className={classes.appBar} color={\"secondary\"}>\n                    <Toolbar className={classes.appBar}>\n                        <IconButton className=\"schedule-back-button\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <i className=\"material-icons\">chevron_left</i>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {t('calendarTechnical.scheduleBackButton')}\n                            </Typography>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                           \n                        </Typography>\n                        <Button autoFocus className=\"schedule-save-buttom\" color=\"primary\" onClick={handleSchedule}>\n                            {t('calendarTechnical.scheduleSaveButton')}\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent>\n                    \n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h3\" className=\"schedule-service-title\">\n                                {t('calendarTechnical.scheduleVisit')}\n                            </Typography>        \n                        </Grid>\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"h6\" className={\"schedule-service-techinicias-available\"}>\n                                {t('calendarTechnical.techniciansAvailable')}\n                            </Typography>\n                            <p className={\"schedule-service-techinicias-available-p mdl-navigation__link\"}>\n                                <i className=\"material-icons schedule-material-icon\">info_outline</i> <span>{t('calendarTechnical.techniciansText#1')} <strong>{props.techinicianNumber} {t('calendarTechnical.techniciansText#2')} </strong></span> {props.totalhours && <span>y <strong>{props.totalhours} hora(s)</strong></span>}\n                            </p>\n\n                            {\n                                !props.technicians && !props.others_technicians &&\n                                    <CircularProgress size={24} className={classes.buttonProgressRelative} />\n                            }\n                            <List>\n                                {props.technicians && props.technicians.map((technician) => (\n                                     <ListItem className=\"schedule-list-technician\" key={technician.id} role={undefined} dense button onClick={handleTechToggle(technician.id)}>\n                                        <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={checkedTechnicians.indexOf(technician.id) !== -1}\n                                            tabIndex={-1}\n                                            disableRipple\n                                            color=\"primary\"\n                                            inputProps={{ 'aria-labelledby':  `checkbox-list-label-${technician.id}` }}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText id={ `checkbox-list-label-${technician.id}`} primary={(technician.enterprise != \"\" && technician.enterprise != null ) ?  technician.user.fullname + \" (\" + technician.enterprise  + \")\" : technician.user.fullname }  />\n                                        <ListItemSecondaryAction>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                ))}\n                                {props.technicians && (props.technicians.length > 0 ? \"\" : <Chip icon={<FaceIcon />} label={t('calendarTechnical.noTechniciansAvailable')} color=\"primary\" variant=\"outlined\" /> )}\n                            </List>\n                            \n\n                            <Accordion className=\"others-tech-accordeon\" expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                                <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1bh-content\"\n                                id=\"panel1bh-header\"\n                                >\n                                <Typography variant=\"h6\" className={\"schedule-service-techinicias-available\"}>{t('calendarTechnical.otherTechnicians')}</Typography>\n                                <Typography className={classes.secondaryHeading}></Typography>\n                                </AccordionSummary>\n                                <AccordionDetails>\n                                    <Typography>\n                                        <List>\n                                            {props.others_technicians && props.others_technicians.map((technician) => (\n                                                <ListItem className=\"schedule-list-technician\" key={technician.id} role={undefined} dense button onClick={handleOtherTechToggle(technician.id)}>\n                                                    <ListItemIcon>\n                                                    <Checkbox\n                                                        edge=\"start\"\n                                                        className={\"technician-check-\"+ technician.id}\n                                                        checked={checkedOthersTechnicians.indexOf(technician.id) !== -1}\n                                                        tabIndex={-1}\n                                                        disableRipple\n                                                        color=\"primary\"\n                                                        inputProps={{ 'aria-labelledby':  `checkbox-list-label-${technician.id}` }}\n                                                        />\n                                                    </ListItemIcon>\n                                                    <ListItemText id={ `checkbox-list-label-${technician.id}`} primary={(technician.enterprise != \"\" && technician.enterprise != null ) ?  technician.user.fullname + \" (\" + technician.enterprise  + \")\" : technician.user.fullname } />\n                                                    <ListItemSecondaryAction>\n                                                    </ListItemSecondaryAction>\n                                                </ListItem>\n                                            ))}\n                                        </List>\n                                    </Typography>\n                                </AccordionDetails>\n                            </Accordion>\n                    \n                            \n                        </Grid>\n                        <Grid item xs={12} sm={9} className=\"technicians-calendar\">\n                            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                            <FullCalendar\n                            timeZone= {'local'}\n                            plugins={[ dayGridPlugin, interactionPlugin,timegridPlugin, daygridPlugin ]}\n                            initialView=\"timeGridWeek\"\n                            selectable={true}\n                            ref={calendarRef}\n                            //weekends={false}\n                            selectAllow={ function(info) {\n                                if (info.start < (new Date()))\n                                    return false;\n                                return true;          \n                            }}\n                            events={\n                                props.calendar_events\n                            }\n                            id={\"initial_events\"}\n                            selectOverlap={function(event) {\n                                return event.rendering === 'background';\n                            }}\n                            headerToolbar={{\n                                start: 'today',\n                                center: 'prevYear,prev,title,next,nextYear',\n                                end: 'dayGridMonth,timeGridWeek,timeGridDay'\n                            }}\n                            slotLabelFormat={  { month: 'long', year: 'numeric' },\n                                                { hour: 'numeric',\n                                                minute: '2-digit', meridiem: 'short', hour12: true }}\n                            slotLabelContent={ ( arg ) => {\n                                let label_text = arg.text; \n                                if(arg.text == \"0:00 p. m.\"){\n                                    label_text = \"12:00 p. m.\"\n                                }\n                                return (\n                                    <>\n                                        {label_text}\n                                    </>\n                                );\n                            }}\n                            locale={esLocale}\n                            slotDuration={\"01:00:00\"}\n                            slotMinTime={\"07:00\"}\n                            slotMaxTime={\"21:00\"}\n                            dateClick={handleDateClick}\n                            select={handleDateSelect}\n                            unselect={handleDateUnselect}\n                            eventClick={handleEventClick}\n                            eventContent={ ( arg ) => {\n                                if( (arg.event.id == \"service_schedule\" || arg.event.id == \"visit_schedule\")){\n                                    return (\n                                        <>\n                                            { renderInnerContent( arg ) }\n                                        </>\n                                    );\n\n\n                                }else{\n                                    return (\n                                        <Tooltip title={<React.Fragment>\n                                            <div className=\"service-tooltip\" dangerouslySetInnerHTML={{__html: (arg.event.extendedProps.description || \"\")}} /> \n                                         </React.Fragment>\n                                         \n                                         } arrow>\n                                            { renderInnerContent( arg ) }\n                                        </Tooltip>\n                                    );\n\n                                }\n                            }}\n                            businessHours= {{\n                                daysOfWeek: [0, 1, 2, 3, 4, 5, 6 ],\n                                startTime: '07:00',\n                                endTime: '21:00',\n                            }}\n                            />\n                        </Grid>\n                    </Grid>\n\n\n                </DialogContent>\n                {\n                    /* \n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            No\n                        </Button>\n                        <Button onClick={handleSchedule} color=\"primary\" autoFocus>\n                            Si\n                        </Button>\n                    </DialogActions>\n                    */\n                }\n\t\t  </Dialog>\n      </React.Fragment>\n  );\n\n}\nconst structuredSelector = createStructuredSelector({\n    technicians: state => state.technicians,\n    calendar_events: state => state.calendar_events,\n    others_technicians: state => state.others_technicians,\n});\nconst mapDispatchToProps = {getTechnicians,getCalendarEvents};\nexport default connect(structuredSelector, mapDispatchToProps)(NewScheduleDialog)\n"]},"metadata":{},"sourceType":"module"}