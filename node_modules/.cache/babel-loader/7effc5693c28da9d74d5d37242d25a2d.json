{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/PaymentEmailDialog.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport { flash_alert } from 'components/App';\n\nfunction PaymentEmailDialog(props) {\n  function handleClickOpen(e) {\n    e.preventDefault();\n    props.setPaymentEmailDialog(true);\n  }\n\n  function handleClose(e) {\n    e.preventDefault();\n    props.setPaymentEmailDialog(false);\n  }\n\n  function handleSendPaymentEmail(_x) {\n    return _handleSendPaymentEmail.apply(this, arguments);\n  }\n\n  function _handleSendPaymentEmail() {\n    _handleSendPaymentEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              props.setIsPaymentEmail(true); //props.editCustomerProduct(props.customer_id, props.customer_product_id, id, tnr, business_unit, family, subfamily, specific, product_name, props.headers);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSendPaymentEmail.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: props.paymentEmailDialog,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    className: \"payment-dialog-title\",\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Â¿Esta seguro que desea enviar las instrucciones de pago a \" + props.email), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"email\",\n    label: \"Enviar copia adicional a:\",\n    name: \"email\",\n    value: props.paymentEmailAdditional,\n    onChange: function onChange(e) {\n      return props.setPaymentEmailAdditional(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSendPaymentEmail,\n    id: \"payment-email-send\",\n    variant: \"contained\",\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Aceptar\"))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(PaymentEmailDialog);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/PaymentEmailDialog.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","TextField","Grid","FormControl","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Link","flash_alert","PaymentEmailDialog","props","handleClickOpen","e","preventDefault","setPaymentEmailDialog","handleClose","handleSendPaymentEmail","setIsPaymentEmail","paymentEmailDialog","email","paymentEmailAdditional","setPaymentEmailAdditional","target","value","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport { flash_alert } from 'components/App';\n\n\nfunction PaymentEmailDialog(props){\n\n    function handleClickOpen(e){\n\t\te.preventDefault();\n\t\tprops.setPaymentEmailDialog(true);\n\t}\n\n\tfunction handleClose(e){\n\t\te.preventDefault();\n\t\tprops.setPaymentEmailDialog(false);\n\t}\n\n\tasync function handleSendPaymentEmail(e){\n\t\te.preventDefault();\n        props.setIsPaymentEmail(true)\n\t\t//props.editCustomerProduct(props.customer_id, props.customer_product_id, id, tnr, business_unit, family, subfamily, specific, product_name, props.headers);\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t  <Dialog\n\t\t\topen={props.paymentEmailDialog}\n\t\t\tfullWidth={true}\n        \tmaxWidth={\"sm\"}\n\t\t    onClose={handleClose}\n\t\t    aria-labelledby=\"alert-dialog-title\"\n\t\t    aria-describedby=\"alert-dialog-description\"\n\t\t  >\n\t\t    <DialogTitle className=\"payment-dialog-title\" id=\"alert-dialog-title\">{\"Â¿Esta seguro que desea enviar las instrucciones de pago a \"+ props.email}</DialogTitle>\n\t\t    <DialogContent>\n\t\t      <DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t<Grid container spacing={1}> \n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField fullWidth variant=\"outlined\" type=\"email\"  label=\"Enviar copia adicional a:\" name=\"email\" value={props.paymentEmailAdditional} onChange={(e) => props.setPaymentEmailAdditional(e.target.value)}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\n\t\t\t\t</Grid>  \n\t\t      </DialogContentText>\n\t\t    </DialogContent>\n\t\t    <DialogActions>\n\t\t      <Button onClick={handleClose} color=\"primary\">\n\t\t        Cancelar\n\t\t      </Button>\n\t\t      <Button onClick={handleSendPaymentEmail} id=\"payment-email-send\"  variant=\"contained\" color=\"primary\" autoFocus>\n\t\t        Aceptar\n\t\t      </Button>\n\t\t    </DialogActions>\n\t\t  </Dialog>\n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({ });\nconst mapDispatchToProps = {};\n\nexport default connect(structuredSelector, mapDispatchToProps)(PaymentEmailDialog)\n"]},"metadata":{},"sourceType":"module"}