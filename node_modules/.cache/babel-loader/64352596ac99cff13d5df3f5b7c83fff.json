{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/complaints/Complaint.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport axios from 'axios';\nimport { csrf, headers, money_format, date_format, date_format_without_time, date_format_without_time_and_zone } from \"constants/csrf\";\nimport Grid from '@material-ui/core/Grid';\nimport { flash_alert } from 'components/App';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputMask from 'react-input-mask';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { country_names_g } from 'components/customers/CustomerForm';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\n\nfunction Complaint(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var complaint_types_g = [\"-\", \"RETRASO EN SERVICIO\", \"TIEMPO DE AGENDAMIENTO\", \"DISPONIBILIDAD DE REFACCIONES\", \"ACTITUD (TECNICO, CONTACT CENTER, VENTAS, ETC)\", \"FALTA DE INFORMACIÓN\", \"COSTO DE REPARACIÓN\", \"SEGUIMIENTO A SERVICIO\", \"PRODUCTO\", \"TIEMPO DE ENTREGA (PRODUCTO)\", \"ATENCION TELEFONICA\", \"SEGUIMIENTO A SOLICITUD\", \"OTROS\"];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      complaintType = _useState2[0],\n      setComplaintType = _useState2[1];\n\n  var channels_g = [\"-\", \"Contact Center\", \"Technical Management\", \"Field service\", \"Gerencia\", \"Otros\"];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      channel = _useState4[0],\n      setChannel = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(\"+52\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phoneCode = _useState8[0],\n      setPhoneCode = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      complaintBackground = _useState10[0],\n      setComplaintBackground = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      compensationProposal = _useState12[0],\n      setCompensationProposal = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      closureDetails = _useState14[0],\n      setClosureDetails = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      compensationProposal2 = _useState16[0],\n      setCompensationProposal2 = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      closureDetails2 = _useState18[0],\n      setClosureDetails2 = _useState18[1];\n\n  var _useState19 = useState(props.selectedServiceObject.id),\n      _useState20 = _slicedToArray(_useState19, 2),\n      service_id = _useState20[0],\n      setServiceID = _useState20[1];\n\n  useEffect(function () {\n    console.log(props.complaint);\n\n    if (props.complaint) {\n      setServiceID(props.complaint.service_id);\n      setChannel(props.complaint.channel);\n      setPhone(props.complaint.phone);\n      setComplaintType(props.complaint.complaint_type);\n      setComplaintBackground(props.complaint.complaint_background);\n      setCompensationProposal(props.complaint.compensation_proposal);\n      setClosureDetails(props.complaint.closure_details);\n      setCompensationProposal2(props.complaint.compensation_proposal_2);\n      setClosureDetails2(props.complaint.closure_details_2);\n    }\n  }, [props.complaint]);\n  useEffect(function () {\n    console.log(props.country);\n\n    if (props.country) {\n      setPhoneCode(country_names_g.find(function (country) {\n        return country[\"iso\"] == props.country;\n      })[\"phone_code\"]);\n    }\n  }, [props.country]);\n\n  function saveComplaint() {\n    var submit_type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"open_complaint\";\n\n    if (checkForm(submit_type)) {\n      var body = new FormData();\n      body.set('id', props.customer_id);\n      body.set('service_id', service_id);\n      body.set('complaint_type', complaintType);\n      body.set('channel', channel);\n      body.set('phone', phone);\n      body.set('complaint_background', complaintBackground);\n      body.set('compensation_proposal', compensationProposal);\n      body.set('closure_details', closureDetails);\n      body.set('compensation_proposal_2', compensationProposal2);\n      body.set('closure_details_2', closureDetails2);\n      body.set('stage', submit_type);\n\n      if (props.complaint) {\n        body.set('complaint_id', props.complaint.id);\n        return axios.patch(\"/api/v1/customers/\".concat(props.customer_id, \"/update_complaint\"), body, {\n          headers: headers\n        }).then(function (response) {\n          props.fetchComplaintData(props.customer_id);\n          flash_alert(t('customer.showCustomer.flashAlert.success'), t('customer.showCustomer.flashAlert.updateService'), \"success\");\n        })[\"catch\"](function (e) {\n          if (e.response.data) {\n            for (var key in e.response.data) {\n              flash_alert(t('globalText.error'), e.response.data[key], \"danger\");\n            }\n          }\n        });\n      } else {\n        return axios.post(\"/api/v1/customers/\".concat(props.customer_id, \"/create_complaint\"), body, {\n          headers: headers\n        }).then(function (response) {\n          props.fetchComplaintData(props.customer_id);\n          setComplaintType(\"\");\n          setChannel(\"\");\n          setPhone(\"\");\n          setComplaintBackground(\"\");\n          flash_alert(t('customer.showCustomer.flashAlert.success'), t('customer.showCustomer.flashAlert.updateService'), \"success\");\n        })[\"catch\"](function (e) {\n          if (e.response.data) {\n            for (var key in e.response.data) {\n              flash_alert(t('globalText.error'), e.response.data[key], \"danger\");\n            }\n          }\n        });\n      }\n    }\n  }\n\n  function checkForm(submit_type) {\n    var check = true;\n\n    if (submit_type == \"open_complaint\") {\n      if (complaintType == \"\") {\n        flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.complaintMessage'), \"error\");\n        check = false;\n      }\n\n      if (channel == \"\") {\n        flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.channelMessage'), \"error\");\n        check = false;\n      }\n\n      if (phone == \"\") {\n        flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.phoneMessage'), \"error\");\n        check = false;\n      }\n\n      if (complaintBackground == \"\") {\n        flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.customerMessage'), \"error\");\n        check = false;\n      }\n    } else if (submit_type == \"first_proposal\") {\n      if (compensationProposal == \"\") {\n        flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.offsetMessage'), \"error\");\n        check = false;\n      }\n    } else if (submit_type == \"scale_complaint\") {\n      if (closureDetails == \"\") {\n        flash_alertflash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.clousureDetails'), \"error\");\n        check = false;\n      }\n    } else if (submit_type == \"second_proposal\") {\n      if (compensationProposal2 == \"\") {\n        flash_alertflash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.offsetMessage'), \"error\");\n        check = false;\n      }\n    } else if (submit_type == \"close_complaint\") {\n      if (closureDetails2 == \"\") {\n        flash_alertflash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.clousureDetails'), \"error\");\n        check = false;\n      }\n    }\n\n    return check;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, props.selectedServiceObject && /*#__PURE__*/React.createElement(Grid, {\n    className: \"complaint-container\",\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"service_type-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, t('customer.showCustomer.complaintType')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"service_type-simple-select-outlined-label\",\n    id: \"service_type-simple-select-outlined\",\n    value: complaintType,\n    onChange: function onChange(e) {\n      return setComplaintType(e.target.value);\n    },\n    label: t('customer.showCustomer.complaintType'),\n    name: \"complaint_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, complaint_types_g.map(function (value) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"service_type-\" + value,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, value);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"service_type-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, t('customer.showCustomer.channel')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"service_type-simple-select-outlined-label\",\n    id: \"service_type-simple-select-outlined\",\n    value: channel,\n    onChange: function onChange(e) {\n      return setChannel(e.target.value);\n    },\n    label: t('customer.showCustomer.channel'),\n    name: \"channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, channels_g.map(function (value) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"service_type-\" + value,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 33\n      }\n    }, value);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    mask: \"(\".concat(phoneCode, \") 9999999999\"),\n    value: phone,\n    disabled: false,\n    maskChar: \" \",\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, function () {\n    return /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: t('customer.showCustomer.phone'),\n      name: \"phone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 32\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    label: t('customer.showCustomer.complaintBackground'),\n    name: \"complaintBackground\",\n    value: complaintBackground,\n    onChange: function onChange(e) {\n      return setComplaintBackground(e.target.value);\n    },\n    disabled: props.complaint && props.complaint.stage != \"open_complaint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"complaint-save\",\n    type: \"submit\",\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return saveComplaint();\n    },\n    disabled: props.complaint && props.complaint.stage != \"open_complaint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, t('customer.showCustomer.submit'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"customer-panel-subtitle proposal-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, t('customer.showCustomer.complaintNegotiation'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    label: t('customer.showCustomer.compensationProposal'),\n    name: \"compensationProposal\",\n    value: compensationProposal,\n    onChange: function onChange(e) {\n      return setCompensationProposal(e.target.value);\n    },\n    disabled: props.type_c != \"edit\" || props.complaint && props.complaint.stage != \"open_complaint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    label: t('customer.showCustomer.closureDetails'),\n    name: \"closureDetails\",\n    value: closureDetails,\n    onChange: function onChange(e) {\n      return setClosureDetails(e.target.value);\n    },\n    disabled: props.type_c != \"edit\" || props.complaint && props.complaint.stage != \"first_proposal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mg-r-20\",\n    item: true,\n    xs: 6,\n    sm: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"complaint-save\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return saveComplaint(\"first_proposal\");\n    },\n    disabled: props.type_c != \"edit\" || props.complaint && props.complaint.stage != \"open_complaint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, t('globalText.save'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"complaint-save\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return saveComplaint(\"scale_complaint\");\n    },\n    disabled: props.type_c != \"edit\" || props.complaint && props.complaint.stage != \"first_proposal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, t('customer.showCustomer.closureDetails'))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"customer-panel-subtitle proposal-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, t('customer.showCustomer.secondComplaintNegotiation'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    label: t('customer.showCustomer.compensationProposal'),\n    name: \"compensationProposal\",\n    value: compensationProposal2,\n    onChange: function onChange(e) {\n      return setCompensationProposal2(e.target.value);\n    },\n    disabled: props.type_c != \"edit\" || props.complaint && props.complaint.stage != \"scale_complaint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    label: t('customer.showCustomer.closureDetails'),\n    name: \"closureDetails\",\n    value: closureDetails2,\n    onChange: function onChange(e) {\n      return setClosureDetails2(e.target.value);\n    },\n    disabled: props.type_c != \"edit\" || props.complaint && props.complaint.stage != \"second_proposal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"mg-r-20\",\n    item: true,\n    xs: 6,\n    sm: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"complaint-save\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return saveComplaint(\"second_proposal\");\n    },\n    disabled: props.type_c != \"edit\" || props.complaint && props.complaint.stage != \"scale_complaint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }\n  }, t('globalText.save'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"complaint-save\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return saveComplaint(\"close_complaint\");\n    },\n    disabled: props.type_c != \"edit\" || props.complaint && props.complaint.stage != \"second_proposal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, t('customer.showCustomer.closeComplaint')))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(Complaint);","map":{"version":3,"sources":["/usr/src/app/javascript/components/complaints/Complaint.jsx"],"names":["React","useState","useEffect","Link","connect","createStructuredSelector","axios","csrf","headers","money_format","date_format","date_format_without_time","date_format_without_time_and_zone","Grid","flash_alert","InputLabel","TextField","InputMask","FormControl","MenuItem","Select","country_names_g","Button","useTranslation","Complaint","props","t","complaint_types_g","complaintType","setComplaintType","channels_g","channel","setChannel","phone","setPhone","phoneCode","setPhoneCode","complaintBackground","setComplaintBackground","compensationProposal","setCompensationProposal","closureDetails","setClosureDetails","compensationProposal2","setCompensationProposal2","closureDetails2","setClosureDetails2","selectedServiceObject","id","service_id","setServiceID","console","log","complaint","complaint_type","complaint_background","compensation_proposal","closure_details","compensation_proposal_2","closure_details_2","country","find","saveComplaint","submit_type","checkForm","body","FormData","set","customer_id","patch","then","response","fetchComplaintData","e","data","key","post","check","flash_alertflash_alert","target","value","map","stage","type_c","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport axios from 'axios';\nimport {csrf, headers,money_format, date_format ,date_format_without_time, date_format_without_time_and_zone} from \"constants/csrf\"\nimport Grid from '@material-ui/core/Grid';\nimport { flash_alert } from 'components/App';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputMask from 'react-input-mask';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {country_names_g} from 'components/customers/CustomerForm';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\n\nfunction Complaint(props){\n    const {t} = useTranslation();\n    const complaint_types_g = [\"-\", \"RETRASO EN SERVICIO\", \"TIEMPO DE AGENDAMIENTO\", \"DISPONIBILIDAD DE REFACCIONES\", \"ACTITUD (TECNICO, CONTACT CENTER, VENTAS, ETC)\", \"FALTA DE INFORMACIÓN\", \"COSTO DE REPARACIÓN\", \"SEGUIMIENTO A SERVICIO\", \"PRODUCTO\", \"TIEMPO DE ENTREGA (PRODUCTO)\", \"ATENCION TELEFONICA\", \"SEGUIMIENTO A SOLICITUD\", \"OTROS\"]\n    const [complaintType, setComplaintType] = useState(\"\");\n    const channels_g = [ \"-\", \"Contact Center\", \"Technical Management\", \"Field service\", \"Gerencia\", \"Otros\"]\n    const [channel, setChannel] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [phoneCode, setPhoneCode] = useState(\"+52\");\n    const [complaintBackground, setComplaintBackground] = useState(\"\");\n    const [compensationProposal, setCompensationProposal] = useState(\"\");\n    const [closureDetails, setClosureDetails] = useState(\"\");  \n  \n    const [compensationProposal2, setCompensationProposal2] = useState(\"\");\n    const [closureDetails2, setClosureDetails2] = useState(\"\");  \n    const [service_id, setServiceID] = useState(props.selectedServiceObject.id)\n    \n    useEffect(() => {\n        console.log(props.complaint)\n\t\tif (props.complaint){\n            setServiceID(props.complaint.service_id)\n            setChannel(props.complaint.channel)\n            setPhone(props.complaint.phone)\n            setComplaintType(props.complaint.complaint_type)\n            setComplaintBackground(props.complaint.complaint_background)\n            setCompensationProposal(props.complaint.compensation_proposal)\n            setClosureDetails(props.complaint.closure_details)\n            setCompensationProposal2(props.complaint.compensation_proposal_2)\n            setClosureDetails2(props.complaint.closure_details_2)\n            \n        }\n\t\t\n    }, [props.complaint]);\n\n    \n    useEffect(() => {\n        console.log(props.country)\n\t\tif (props.country){\n\t\t\tsetPhoneCode(country_names_g.find(country => country[\"iso\"] == props.country)[\"phone_code\"] )\n\t\t}\n\t\t\n    }, [props.country]);\n\n    \n    function saveComplaint(submit_type = \"open_complaint\"){\n        if (checkForm(submit_type)){\n            var body = new FormData();\n            body.set('id', props.customer_id);\n            body.set('service_id', service_id);\n            body.set('complaint_type', complaintType);\n            body.set('channel', channel);\n            body.set('phone', phone);\n            body.set('complaint_background', complaintBackground);\n            body.set('compensation_proposal', compensationProposal);\n            body.set('closure_details', closureDetails);\n            body.set('compensation_proposal_2', compensationProposal2);\n            body.set('closure_details_2', closureDetails2);\n            body.set('stage', submit_type);\n            \n            if(props.complaint){\n                body.set('complaint_id', props.complaint.id);\n                return axios.patch(`/api/v1/customers/${props.customer_id}/update_complaint`, body, { headers: headers})\n                    .then(response => {\n                        props.fetchComplaintData(props.customer_id)\n                        flash_alert(t('customer.showCustomer.flashAlert.success'), t('customer.showCustomer.flashAlert.updateService'), \"success\")\n                    })\n                .catch(e => {\n                    if(e.response.data){\n                        for (var key in e.response.data) {\n                            flash_alert(t('globalText.error'), e.response.data[key], \"danger\")\n                        }\n                    }\n                });\n            }else{\n                return axios.post(`/api/v1/customers/${props.customer_id}/create_complaint`, body, { headers: headers})\n                    .then(response => {\n                        props.fetchComplaintData(props.customer_id)\n                        setComplaintType(\"\")\n                        setChannel(\"\")\n                        setPhone(\"\")\n                        setComplaintBackground(\"\")\n                        flash_alert(t('customer.showCustomer.flashAlert.success'), t('customer.showCustomer.flashAlert.updateService'), \"success\")\n                    })\n                .catch(e => {\n                    if(e.response.data){\n                        for (var key in e.response.data) {\n                            flash_alert(t('globalText.error'), e.response.data[key], \"danger\")\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    function checkForm(submit_type){\n        let check = true;\n        if(submit_type == \"open_complaint\"){\n            if (complaintType == \"\")\n            {\n                flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.complaintMessage'), \"error\")\n                check = false;\n            }    \n            if (channel == \"\")\n            {\n                flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.channelMessage'), \"error\")\n                check = false;\n            }    \n            if (phone == \"\")\n            {\n                flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.phoneMessage'), \"error\")\n                check = false;\n            }    \n            if (complaintBackground == \"\")\n            {\n                flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.customerMessage'), \"error\")\n                check = false;\n            }    \n        }else if(submit_type == \"first_proposal\"){\n            \n            if (compensationProposal == \"\")\n            {\n                flash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.offsetMessage'), \"error\")\n                check = false;\n            } \n        }else if(submit_type == \"scale_complaint\"){\n            \n            if ( closureDetails == \"\")\n            {\n                flash_alertflash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.clousureDetails'), \"error\")\n                check = false;\n            } \n        }else if(submit_type == \"second_proposal\"){\n            \n            if (compensationProposal2 == \"\")\n            {\n                flash_alertflash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.offsetMessage'), \"error\")\n                check = false;\n            } \n        }else if(submit_type == \"close_complaint\"){\n            \n            if ( closureDetails2 == \"\")\n            {\n                flash_alertflash_alert(t('customer.showCustomer.flashAlert.infoRequest'), t('customer.showCustomer.flashAlert.clousureDetails'), \"error\")\n                check = false;\n            } \n        }\n        \n\n\n\n        return check\n        \n    }\n\n    return (\n  \t\t<React.Fragment>\n\n          {props.selectedServiceObject && \n            <Grid className=\"complaint-container\" container spacing={3}>\n                \n                <Grid item xs={12} sm={4}>\n                    <FormControl variant=\"outlined\" className=\"MuiFormControl-fullWidth\" >\n                            <InputLabel id=\"service_type-simple-select-outlined-label\">{t('customer.showCustomer.complaintType')}</InputLabel>\n                            <Select\n                            labelId=\"service_type-simple-select-outlined-label\"\n                            id=\"service_type-simple-select-outlined\"\n                            value={complaintType}\n                            onChange={(e) => setComplaintType(e.target.value)}\n                            label={t('customer.showCustomer.complaintType')}\n                            name=\"complaint_type\"\n                            >\n                            {complaint_types_g.map((value) => (\n                                <MenuItem key={\"service_type-\"+value} value={value}>{value}</MenuItem>\n                            ))}\n                            </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <FormControl variant=\"outlined\" className=\"MuiFormControl-fullWidth\" >\n                            <InputLabel id=\"service_type-simple-select-outlined-label\">{t('customer.showCustomer.channel')}</InputLabel>\n                            <Select\n                            labelId=\"service_type-simple-select-outlined-label\"\n                            id=\"service_type-simple-select-outlined\"\n                            value={channel}\n                            onChange={(e) => setChannel(e.target.value)}\n                            label={t('customer.showCustomer.channel')}\n                            name=\"channel\"\n                            >\n                            {channels_g.map((value) => (\n                                <MenuItem key={\"service_type-\"+value} value={value}>{value}</MenuItem>\n                            ))}\n                            </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <InputMask\n                        mask={ `(${phoneCode}) 9999999999`}\n                        value={phone}\n                        disabled={false}\n                        maskChar=\" \"\n                        onChange={(e) => setPhone(e.target.value)}\n                        >\n                        {() => <TextField fullWidth variant=\"outlined\" label={t('customer.showCustomer.phone')} name=\"phone\" />}\n                    </InputMask> \n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField fullWidth variant=\"outlined\" multiline rows={8} label={t('customer.showCustomer.complaintBackground')} name=\"complaintBackground\" value={complaintBackground} onChange={(e) => setComplaintBackground(e.target.value)} disabled={(props.complaint && props.complaint.stage !=\"open_complaint\")}/>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Button id=\"complaint-save\" type=\"submit\" variant=\"outlined\" color=\"primary\" onClick={() => saveComplaint()} disabled={(props.complaint && props.complaint.stage !=\"open_complaint\")}>\n                        {t('customer.showCustomer.submit')}\n                    </Button>\n                </Grid>\n                \n                <Grid item xs={12}>\n                    <h3 className={\"customer-panel-subtitle proposal-subtitle\"}>\n                        {t('customer.showCustomer.complaintNegotiation')}\n                    </h3>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <TextField fullWidth variant=\"outlined\" multiline rows={8} label={t('customer.showCustomer.compensationProposal')} name=\"compensationProposal\" value={compensationProposal} onChange={(e) => setCompensationProposal(e.target.value)} disabled={props.type_c!=\"edit\" || (props.complaint && props.complaint.stage !=\"open_complaint\")}/>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <TextField fullWidth variant=\"outlined\" multiline rows={8} label={t('customer.showCustomer.closureDetails')} name=\"closureDetails\" value={closureDetails} onChange={(e) => setClosureDetails(e.target.value)} disabled={props.type_c!=\"edit\" || (props.complaint && props.complaint.stage !=\"first_proposal\")}/>\n                </Grid>\n                \n                <Grid item xs={12}>\n                    <Grid container spacing={4}>\n                        <Grid className=\"mg-r-20\"  item xs={6} sm={1}>\n                            <Button id=\"complaint-save\" type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => saveComplaint(\"first_proposal\")} disabled={props.type_c!=\"edit\" || (props.complaint && props.complaint.stage !=\"open_complaint\")} >\n                                {t('globalText.save')}\n                            </Button>\n                        </Grid>\n                        <Grid item xs={6} sm={2}>\n                            <Button id=\"complaint-save\" type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => saveComplaint(\"scale_complaint\")} disabled={props.type_c!=\"edit\" || (props.complaint && props.complaint.stage !=\"first_proposal\")} >\n                                {t('customer.showCustomer.closureDetails')}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <h3 className={\"customer-panel-subtitle proposal-subtitle\"}>\n                        {t('customer.showCustomer.secondComplaintNegotiation')}\n                    </h3>\n                </Grid> \n                \n                <Grid item xs={12} sm={6}>\n                    <TextField fullWidth variant=\"outlined\" multiline rows={8} label={t('customer.showCustomer.compensationProposal')} name=\"compensationProposal\" value={compensationProposal2} onChange={(e) => setCompensationProposal2(e.target.value)} disabled={props.type_c!=\"edit\" || (props.complaint && props.complaint.stage !=\"scale_complaint\")}/>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <TextField fullWidth variant=\"outlined\" multiline rows={8} label={t('customer.showCustomer.closureDetails')} name=\"closureDetails\" value={closureDetails2} onChange={(e) => setClosureDetails2(e.target.value)} disabled={props.type_c!=\"edit\" || (props.complaint && props.complaint.stage !=\"second_proposal\")}/>\n                </Grid>\n\n                \n                <Grid item xs={12}>\n                    <Grid container spacing={4}>\n                        <Grid className=\"mg-r-20\" item xs={6} sm={1}>\n                            <Button  id=\"complaint-save\" type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => saveComplaint(\"second_proposal\")} disabled={props.type_c!=\"edit\"|| (props.complaint && props.complaint.stage !=\"scale_complaint\")} >\n                                {t('globalText.save')}\n                            </Button>\n                        </Grid>\n                        <Grid item xs={6} sm={2}>\n                            <Button id=\"complaint-save\" type=\"submit\" variant=\"contained\" color=\"primary\" onClick={() => saveComplaint(\"close_complaint\")} disabled={props.type_c!=\"edit\" || (props.complaint && props.complaint.stage !=\"second_proposal\")} >\n                                {t('customer.showCustomer.closeComplaint')}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                \n                \n            </Grid>\n          }\n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({});\nconst mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(Complaint)\n"]},"metadata":{},"sourceType":"module"}