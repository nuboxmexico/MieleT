{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/finance/FinanceFilter/filters/CompletedFilter.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, InputLabel, MenuItem, Select, ListItemText, Checkbox } from '@material-ui/core';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { toQueryParams, modifyFilter } from '../../utils';\nimport { useTranslation } from 'react-i18next';\n\nvar CompletedFilter = function CompletedFilter(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var page = props.page,\n      perPage = props.perPage,\n      getServices = props.getServices,\n      setServicesLoading = props.setServicesLoading,\n      options = props.options,\n      modifyFilter = props.modifyFilter,\n      selectedOptions = props.selectedOptions;\n  var completed = selectedOptions.completed;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  function handleChange(event) {\n    modifyFilter(_objectSpread(_objectSpread({}, selectedOptions), {}, {\n      completed: event.target.value\n    }));\n  }\n\n  useEffect(function () {\n    setReady(true);\n  }, []);\n  useEffect(function () {\n    if (!ready) return;\n    setServicesLoading(true);\n    getServices(page, perPage, '', setServicesLoading, toQueryParams(selectedOptions));\n  }, [completed]);\n  var completedStatusLabel = {\n    yes: t('finance.input.yes'),\n    no: t('finance.input.no'),\n    canceled: t('finance.input.canceled')\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"completed-filter-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, t('finance.input.filled')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"completed-filter-label\",\n    id: \"completed-filter\",\n    value: completed,\n    label: t('finance.input.filled'),\n    onChange: handleChange,\n    renderValue: function renderValue() {\n      return completedStatusLabel[completed];\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, options.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      value: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: completedStatusLabel[option],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  }))));\n};\n\nvar structuredSelector = createStructuredSelector({\n  selectedOptions: function selectedOptions(state) {\n    return state.finance_selected_options;\n  },\n  page: function page(state) {\n    return state.services_page;\n  },\n  perPage: function perPage(state) {\n    return state.services_per_page;\n  }\n});\nvar mapDispatchToProps = {\n  modifyFilter: modifyFilter\n};\nexport default connect(structuredSelector, mapDispatchToProps)(CompletedFilter);","map":{"version":3,"sources":["/usr/src/app/javascript/components/finance/FinanceFilter/filters/CompletedFilter.jsx"],"names":["React","useState","useEffect","FormControl","InputLabel","MenuItem","Select","ListItemText","Checkbox","createStructuredSelector","connect","toQueryParams","modifyFilter","useTranslation","CompletedFilter","props","t","page","perPage","getServices","setServicesLoading","options","selectedOptions","completed","ready","setReady","handleChange","event","target","value","completedStatusLabel","yes","no","canceled","map","option","structuredSelector","state","finance_selected_options","services_page","services_per_page","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FormControl, InputLabel, MenuItem, Select, ListItemText, Checkbox } from '@material-ui/core';\nimport { createStructuredSelector } from \"reselect\"\nimport { connect } from \"react-redux\"\nimport { toQueryParams, modifyFilter } from '../../utils'\nimport { useTranslation } from 'react-i18next';\n\nconst CompletedFilter = (props) => {\n  const {t} = useTranslation();\n  const { page, perPage, getServices, setServicesLoading, options, modifyFilter, selectedOptions } = props;\n  const { completed } = selectedOptions;\n  const [ready, setReady] = useState(false)\n\n  function handleChange(event) {\n    modifyFilter({ ...selectedOptions, completed: event.target.value })\n  }\n\n  useEffect(() => {\n    setReady(true)\n  }, [])\n\n  useEffect(() => {\n    if(!ready) return;\n\n    setServicesLoading(true);\n    getServices(page, perPage, '', setServicesLoading, toQueryParams(selectedOptions));\n  }, [completed])\n\n  const completedStatusLabel = {\n    yes: t('finance.input.yes'),\n    no: t('finance.input.no'),\n    canceled: t('finance.input.canceled')\n  }\n\n  return (\n    <>\n      <FormControl variant='outlined' size='small' fullWidth>\n        <InputLabel id=\"completed-filter-label\">{t('finance.input.filled')}</InputLabel>\n        <Select\n          labelId=\"completed-filter-label\"\n          id=\"completed-filter\"\n          value={completed}\n          label={t('finance.input.filled')}\n          onChange={handleChange}\n          renderValue={() => completedStatusLabel[completed]}\n        >\n          {\n            options.map(option => (\n              <MenuItem key={option} value={option}>\n                <ListItemText primary={completedStatusLabel[option]} />\n              </MenuItem>\n            ))\n          }\n\n        </Select>\n      </FormControl>\n    </>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  selectedOptions: state => state.finance_selected_options,\n  page: state => state.services_page,\n  perPage: state => state.services_per_page,\n});\n\nconst mapDispatchToProps = { modifyFilter }\n\nexport default connect(structuredSelector, mapDispatchToProps)(CompletedFilter);\n"]},"metadata":{},"sourceType":"module"}