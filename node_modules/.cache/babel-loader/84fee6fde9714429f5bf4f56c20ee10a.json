{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/finance/FinanceFilter/filters/PaymentFilter.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { FormControl, InputLabel, MenuItem, Select, ListItemText, Checkbox } from '@material-ui/core';\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { toQueryParams, modifyFilter } from '../../utils';\nimport { useTranslation } from 'react-i18next';\n\nvar PaymentFilter = function PaymentFilter(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var page = props.page,\n      perPage = props.perPage,\n      getServices = props.getServices,\n      setServicesLoading = props.setServicesLoading,\n      options = props.options,\n      modifyFilter = props.modifyFilter,\n      selectedOptions = props.selectedOptions;\n  var payment = selectedOptions.payment;\n\n  function handleChange(event) {\n    var value = event.target.value;\n    console.log({\n      value: value\n    });\n\n    if (value[value.length - 1] === \"all\") {\n      var newPayment = payment.length === options.length ? [] : options;\n      modifyFilter(_objectSpread(_objectSpread({}, selectedOptions), {}, {\n        payment: newPayment\n      }));\n      return;\n    }\n\n    modifyFilter(_objectSpread(_objectSpread({}, selectedOptions), {}, {\n      payment: event.target.value\n    }));\n  }\n\n  function handleOnClose() {\n    setServicesLoading(true);\n    getServices(page, perPage, '', setServicesLoading, toQueryParams(selectedOptions));\n  }\n\n  var paymentStatusLabel = {\n    yes: t('finance.input.yes'),\n    no: t('finance.input.no'),\n    unrequired: t('finance.input.unrequiredPay')\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"payment-filter-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, t('finance.input.paid')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"payment-filter-label\",\n    multiple: true,\n    id: \"payment-filter\",\n    value: payment,\n    label: t('finance.input.paid'),\n    onChange: handleChange,\n    onClose: handleOnClose,\n    renderValue: function renderValue() {\n      return payment.map(function (option) {\n        return paymentStatusLabel[option];\n      }).join(', ');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"all\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    color: \"primary\",\n    checked: payment.length == options.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: t('finance.input.all'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), options.map(function (option) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      value: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: payment.indexOf(option) > -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: paymentStatusLabel[option],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }));\n  }))));\n};\n\nvar structuredSelector = createStructuredSelector({\n  selectedOptions: function selectedOptions(state) {\n    return state.finance_selected_options;\n  },\n  page: function page(state) {\n    return state.services_page;\n  },\n  perPage: function perPage(state) {\n    return state.services_per_page;\n  }\n});\nvar mapDispatchToProps = {\n  modifyFilter: modifyFilter\n};\nexport default connect(structuredSelector, mapDispatchToProps)(PaymentFilter);","map":{"version":3,"sources":["/usr/src/app/javascript/components/finance/FinanceFilter/filters/PaymentFilter.jsx"],"names":["React","FormControl","InputLabel","MenuItem","Select","ListItemText","Checkbox","createStructuredSelector","connect","toQueryParams","modifyFilter","useTranslation","PaymentFilter","props","t","page","perPage","getServices","setServicesLoading","options","selectedOptions","payment","handleChange","event","value","target","console","log","length","newPayment","handleOnClose","paymentStatusLabel","yes","no","unrequired","map","option","join","indexOf","structuredSelector","state","finance_selected_options","services_page","services_per_page","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormControl, InputLabel, MenuItem, Select, ListItemText, Checkbox } from '@material-ui/core';\nimport { createStructuredSelector } from \"reselect\"\nimport { connect } from \"react-redux\"\nimport { toQueryParams, modifyFilter } from '../../utils'\nimport { useTranslation } from 'react-i18next';\n\nconst PaymentFilter = (props) => {\n  const {t} = useTranslation();\n  const { page, perPage, getServices, setServicesLoading, options, modifyFilter, selectedOptions } = props;\n  const { payment } = selectedOptions;\n\n  function handleChange(event) {\n    const { target: { value } } = event;\n    console.log({ value });\n    if (value[value.length - 1] === \"all\") {\n      const newPayment = payment.length === options.length ? [] : options\n      modifyFilter({ ...selectedOptions, payment: newPayment });\n      return;\n    }\n    modifyFilter({ ...selectedOptions, payment: event.target.value })\n  }\n\n  function handleOnClose() {\n    setServicesLoading(true);\n    getServices(page, perPage, '', setServicesLoading, toQueryParams(selectedOptions));\n  }\n\n  const paymentStatusLabel = {\n    yes: t('finance.input.yes'),\n    no: t('finance.input.no'),\n    unrequired: t('finance.input.unrequiredPay')\n  }\n\n  return (\n    <>\n      <FormControl variant='outlined' size='small' fullWidth>\n        <InputLabel id=\"payment-filter-label\">{t('finance.input.paid')}</InputLabel>\n        <Select\n          labelId=\"payment-filter-label\"\n          multiple\n          id=\"payment-filter\"\n          value={payment}\n          label={t('finance.input.paid')}\n          onChange={handleChange}\n          onClose={handleOnClose}\n          renderValue={() => payment.map(option => paymentStatusLabel[option]).join(', ')}\n        >\n          <MenuItem value=\"all\" >\n            <Checkbox color=\"primary\" checked={payment.length == options.length} />\n            <ListItemText primary={t('finance.input.all')}/>\n          </MenuItem>\n          {\n            options.map(option => (\n              <MenuItem key={option} value={option}>\n                <Checkbox color='primary' checked={payment.indexOf(option) > -1} />\n                <ListItemText primary={paymentStatusLabel[option]} />\n              </MenuItem>\n            ))\n          }\n\n        </Select>\n      </FormControl>\n    </>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  selectedOptions: state => state.finance_selected_options,\n  page: state => state.services_page,\n  perPage: state => state.services_per_page,\n});\n\nconst mapDispatchToProps = { modifyFilter }\n\nexport default connect(structuredSelector, mapDispatchToProps)(PaymentFilter);\n"]},"metadata":{},"sourceType":"module"}