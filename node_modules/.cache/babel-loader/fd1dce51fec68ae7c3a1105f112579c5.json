{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/site/Searcher.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Autosuggest from 'react-autosuggest';\nimport Grid from '@material-ui/core/Grid';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useTranslation } from 'react-i18next';\nvar GET_CUSTOMERS_REQUEST = \"GET_CUSTOMERS_REQUEST\";\nvar GET_CUSTOMERS_SUCCESS = \"GET_CUSTOMERS_SUCCESS\";\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.email;\n}\n\nfunction renderSuggestion(suggestion) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"\".concat(suggestion.names, \" \").concat(suggestion.lastname, \" \").concat(suggestion.surname, \" (\").concat(suggestion.email, \")\"));\n}\n\nfunction getCustomers() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var per_page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var filterText = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var setter = arguments.length > 3 ? arguments[3] : undefined;\n  return function (dispatch) {\n    dispatch({\n      type: GET_CUSTOMERS_REQUEST\n    });\n    return fetch(\"/api/v1/customers?page=\".concat(page, \"&per_page=\").concat(per_page, \"&keywords=\").concat(filterText)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(getCustomersSuccess(json, setter));\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n}\n\n;\nexport function getCustomersSuccess(json, setter) {\n  setter(json.data);\n  return {\n    type: GET_CUSTOMERS_SUCCESS,\n    json: json\n  };\n}\n;\n\nfunction Searcher(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      suggestions = _useState4[0],\n      setSuggestions = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var _useState7 = useState(t('searcher.loading')),\n      _useState8 = _slicedToArray(_useState7, 2),\n      status = _useState8[0],\n      setStatus = _useState8[1];\n\n  var lastRequestId = null;\n\n  function escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n\n  function getMatchingCustomers(value) {\n    var escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    var regex = new RegExp('^' + escapedValue, 'i');\n    props.getCustomers(\"1\", \"10\", value, setSuggestions);\n    setIsLoading(false);\n    props.setLoading(false);\n  }\n\n  function loadCustomers(value) {\n    console.log(props.customers); // Cancel the previous request\n\n    if (lastRequestId !== null) {\n      clearTimeout(lastRequestId);\n    }\n\n    setIsLoading(true);\n    props.setLoading(true); // Fake request\n\n    lastRequestId = setTimeout(function () {\n      setIsLoading(true);\n      props.setLoading(true);\n      getMatchingCustomers(value);\n    }, 1000);\n  }\n\n  function onChange(event, _ref) {\n    var newValue = _ref.newValue;\n    setValue(newValue);\n  }\n\n  ;\n\n  function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      document.getElementById('global-search-button').click();\n    }\n  }\n\n  ;\n\n  function onSuggestionsFetchRequested(_ref2) {\n    var value = _ref2.value;\n\n    if (value.length >= 3) {\n      loadCustomers(value);\n    }\n  }\n\n  ;\n\n  function onSuggestionsClearRequested() {\n    var search_param = new URLSearchParams(props.history.location.search).get('search');\n\n    if (search_param == null || search_param == \"\") {\n      props.getCustomers(\"1\", \"10\", \"\", setSuggestions);\n    }\n  }\n\n  ;\n\n  function renderSuggestionsContainer(_ref3) {\n    var containerProps = _ref3.containerProps,\n        children = _ref3.children,\n        query = _ref3.query;\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, containerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), children, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"press-enter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, t('searcher.searchEnter'), \"\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 50\n      }\n    }, query)));\n  }\n\n  useEffect(function () {\n    if (!isLoading) {\n      setStatus(t('searcher.searcherText'));\n    }\n  }, []);\n  var no_results_found_check = [];\n\n  if (suggestions.length < 1 && value.length >= 3 && !isLoading) {\n    no_results_found_check.push( /*#__PURE__*/React.createElement(\"div\", {\n      key: \"no_results_found\",\n      role: \"combobox\",\n      \"aria-haspopup\": \"listbox\",\n      \"aria-owns\": \"react-autowhatever-1\",\n      \"aria-expanded\": \"false\",\n      className: \"react-autosuggest__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"react-autowhatever-1\",\n      role: \"listbox\",\n      className: \"react-autosuggest__suggestions-container react-autosuggest__suggestions-container--open react-autosuggest__suggestions-container-no-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"not-found-restults\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, t('searcher.noresults'), \"\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 52\n      }\n    }, value)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"mdl-navigation__link\",\n      to: \"/customers/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, \"person_add\"), \"\\xA0\\xA0\", t('customer.createClientButton'))))))));\n  }\n\n  var inputProps = {\n    placeholder: status,\n    value: value,\n    onChange: onChange,\n    onKeyDown: handleKeyDown\n  };\n  var customers_url = \"/customers?search=\" + value;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    className: \"search-grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Autosuggest, {\n    suggestions: suggestions,\n    onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n    onSuggestionsClearRequested: onSuggestionsClearRequested,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion,\n    renderSuggestionsContainer: renderSuggestionsContainer,\n    inputProps: inputProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"mdl-navigation__link\",\n    id: \"global-search-button\",\n    to: customers_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"search-btn-full-height\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  })), no_results_found_check), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }));\n}\n\nSearcher.propTypes = {\n  customers: PropTypes.array,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number\n};\nvar structuredSelector = createStructuredSelector({\n  customers: function customers(state) {\n    return state.customers;\n  },\n  page: function page(state) {\n    return state.page;\n  },\n  perPage: function perPage(state) {\n    return state.perPage;\n  },\n  total: function total(state) {\n    return state.total;\n  },\n  curent_user: function curent_user(state) {\n    return state.curent_user;\n  }\n});\nvar mapDispatchToProps = {\n  getCustomers: getCustomers\n};\nexport default withRouter(connect(structuredSelector, mapDispatchToProps)(Searcher));","map":{"version":3,"sources":["/usr/src/app/javascript/components/site/Searcher.jsx"],"names":["React","useState","useEffect","ReactDOM","PropTypes","withRouter","connect","createStructuredSelector","Autosuggest","Grid","BrowserRouter","Switch","Route","Link","Button","SearchIcon","useTranslation","GET_CUSTOMERS_REQUEST","GET_CUSTOMERS_SUCCESS","getSuggestionValue","suggestion","email","renderSuggestion","names","lastname","surname","getCustomers","page","per_page","filterText","setter","dispatch","type","fetch","then","response","json","getCustomersSuccess","error","console","log","data","Searcher","props","t","value","setValue","suggestions","setSuggestions","isLoading","setIsLoading","status","setStatus","lastRequestId","escapeRegexCharacters","str","replace","getMatchingCustomers","escapedValue","trim","regex","RegExp","setLoading","loadCustomers","customers","clearTimeout","setTimeout","onChange","event","newValue","handleKeyDown","key","document","getElementById","click","onSuggestionsFetchRequested","length","onSuggestionsClearRequested","search_param","URLSearchParams","history","location","search","get","renderSuggestionsContainer","containerProps","children","query","no_results_found_check","push","inputProps","placeholder","onKeyDown","customers_url","propTypes","array","number","perPage","total","structuredSelector","state","curent_user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from \"prop-types\"\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport Autosuggest from 'react-autosuggest';\nimport Grid from '@material-ui/core/Grid';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useTranslation } from 'react-i18next';\n\n\nconst GET_CUSTOMERS_REQUEST = \"GET_CUSTOMERS_REQUEST\";\nconst GET_CUSTOMERS_SUCCESS = \"GET_CUSTOMERS_SUCCESS\";\n\n  \nfunction getSuggestionValue(suggestion) {\n    return suggestion.email;\n}\n\nfunction renderSuggestion(suggestion) {\n    return (\n        <span>{`${suggestion.names} ${suggestion.lastname} ${suggestion.surname} (${suggestion.email})`}</span>\n    );\n}\n\nfunction getCustomers(page = 1, per_page = 10, filterText = \"\", setter) {\n    return dispatch => {\n      dispatch({type: GET_CUSTOMERS_REQUEST});\n      return fetch(`/api/v1/customers?page=${page}&per_page=${per_page}&keywords=${filterText}`)\n        .then(response => response.json())\n        .then(json => dispatch(getCustomersSuccess(json, setter)))\n        .catch(error => console.log(error));\n    };\n  };\n  \n\n  export function getCustomersSuccess(json, setter) {\n    setter(json.data)\n    return {\n      type: GET_CUSTOMERS_SUCCESS,\n      json\n    };\n  };\n\nfunction Searcher(props){\n    const {t} = useTranslation();\n    const [value, setValue] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [status,setStatus] = useState(t('searcher.loading'))\n\n    let lastRequestId = null;\n    \n    function escapeRegexCharacters(str) {\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    }\n\n    function getMatchingCustomers(value) {\n        const escapedValue = escapeRegexCharacters(value.trim());\n        \n        if (escapedValue === '') {\n            return [];\n        }\n        \n        const regex = new RegExp('^' + escapedValue, 'i');\n        \n        \n        props.getCustomers(\"1\", \"10\", value, setSuggestions);\n        setIsLoading(false);\n        props.setLoading(false);\n    }\n\n    function loadCustomers(value) {\n        console.log(props.customers)\n        // Cancel the previous request\n        if (lastRequestId !== null) {\n          clearTimeout(lastRequestId);\n        }\n        setIsLoading(true);\n        props.setLoading(true);\n        // Fake request\n\n        lastRequestId = setTimeout(() => {\n        setIsLoading(true);\n        props.setLoading(true);\n            getMatchingCustomers(value);\n        }, 1000);\n    }\n        \n    function onChange(event, { newValue }){\n        setValue(newValue);\n    };\n        \n    function handleKeyDown(event){\n      if (event.key === 'Enter') {\n        document.getElementById('global-search-button').click();\n      }\n    };\n\n    function onSuggestionsFetchRequested({ value }){\n        if( value.length >= 3){\n            loadCustomers(value);\n        }\n    };\n    \n    function onSuggestionsClearRequested(){\n        let search_param = (new URLSearchParams(props.history.location.search)).get('search');\n        if( search_param == null || search_param == \"\"){\n          props.getCustomers(\"1\", \"10\", \"\", setSuggestions);\n        }\n    };\n\n    function renderSuggestionsContainer({ containerProps, children, query }) {\n      return (\n        <div {...containerProps}>\n          {children}\n          <div className=\"press-enter\">\n            {t('searcher.searchEnter')}{'\\u00A0'}<strong>{query}</strong>\n          </div>\n        </div>\n      );\n    }\n\n    useEffect(() => {\n      if(!isLoading){\n        setStatus(t('searcher.searcherText'))\n      }\n    }, []);\n\n    let no_results_found_check = []\n\t\tif (suggestions.length < 1 && value.length >= 3 && !isLoading){\n\t\t\tno_results_found_check.push(\n\t\t\t\t<div key=\"no_results_found\" role=\"combobox\" aria-haspopup=\"listbox\" aria-owns=\"react-autowhatever-1\" aria-expanded=\"false\" className=\"react-autosuggest__container\">\n          <div id=\"react-autowhatever-1\" role=\"listbox\" className=\"react-autosuggest__suggestions-container react-autosuggest__suggestions-container--open react-autosuggest__suggestions-container-no-results\">\n            <div className=\"not-found-restults\">\n              <div className=\"flex-center\">\n                {t('searcher.noresults')}{'\\u00A0'}<strong>{value}</strong>\n              </div>\n              <br/>\n              <div className=\"flex-center\">\n                <Link className=\"mdl-navigation__link\" to=\"/customers/new\">\n                  <Button variant=\"outlined\" color=\"primary\">\n                    <i className=\"material-icons\">person_add</i>&nbsp;&nbsp;{t('customer.createClientButton')}\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\t\t\t);\n\t\t}\n\n    const inputProps = {\n      placeholder: status,\n      value,\n      onChange: onChange,\n      onKeyDown: handleKeyDown\n    };\n    const customers_url = \"/customers?search=\"+value;\n  \treturn (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} md={3}></Grid>\n            <Grid item xs={12} md={6} className=\"search-grid-container\">\n                <Autosuggest \n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={renderSuggestion}\n                    renderSuggestionsContainer={renderSuggestionsContainer}\n                    inputProps={inputProps} />\n                  <Link className=\"mdl-navigation__link\" id=\"global-search-button\" to={customers_url}>\n                    <Button\n                      className=\"search-btn-full-height\"\n                      startIcon={<SearchIcon />}\n                    ></Button>\n                  </Link>  \n                {no_results_found_check}             \n            </Grid>\n            <Grid item xs={12} md={3}></Grid>\n            \n        </Grid>\n\t)\n}\n\nSearcher.propTypes = {\n  customers: PropTypes.array,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number\n};\n\nconst structuredSelector = createStructuredSelector({\n  customers: state => state.customers,\n  page: state => state.page,\n  perPage: state => state.perPage,\n  total: state => state.total,\n  curent_user: state => state.curent_user\n});\nconst mapDispatchToProps = {getCustomers};\nexport default withRouter(connect(structuredSelector, mapDispatchToProps)(Searcher));\n\n"]},"metadata":{},"sourceType":"module"}