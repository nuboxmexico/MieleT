{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/customers/AdditionalForm.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { flash_alert } from 'components/App';\nimport ShowCustomer from \"components/customers/ShowCustomer\";\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport InputMask from 'react-input-mask';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { country_names_g } from 'components/customers/CustomerForm';\nimport { useTranslation } from 'react-i18next';\n\nfunction AdditionalForm(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneCode = _useState2[0],\n      setPhoneCode = _useState2[1];\n\n  useEffect(function () {\n    setPhoneCode(country_names_g.find(function (country) {\n      return country[\"iso\"] == props.country;\n    })[\"phone_code\"]);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"custom-form\",\n    onSubmit: props.handleSubmit,\n    onKeyPress: function onKeyPress(e) {\n      e.key === 'Enter' && e.preventDefault();\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: t('globalEditForm.name'),\n    name: \"firstname\",\n    value: props.names,\n    onChange: function onChange(e) {\n      return props.setFirstname(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: t('globalEditForm.lastName'),\n    name: \"lastname\",\n    value: props.lastname,\n    onChange: function onChange(e) {\n      return props.setLastname(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: t('globalEditForm.surName'),\n    name: \"surname\",\n    value: props.surname,\n    onChange: function onChange(e) {\n      return props.setSurname(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"email\",\n    label: t('globalEditForm.email'),\n    name: \"email\",\n    value: props.email,\n    onChange: function onChange(e) {\n      return props.setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    mask: \"(\".concat(phoneCode, \") 9999999999\"),\n    value: props.phone,\n    disabled: false,\n    maskChar: \" \",\n    onChange: function onChange(e) {\n      return props.setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, function () {\n    return /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: t('globalEditForm.phone'),\n      name: \"phone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 40\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    mask: \"(\".concat(phoneCode, \") 9999999999\"),\n    value: props.cellphone,\n    disabled: false,\n    maskChar: \" \",\n    onChange: function onChange(e) {\n      return props.setCellphone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, function () {\n    return /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: t('globalEditForm.cellPhone'),\n      name: \"cellphone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"additional-save\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 35\n    }\n  }, t('globalText.save')))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(AdditionalForm);","map":{"version":3,"sources":["/usr/src/app/javascript/components/customers/AdditionalForm.jsx"],"names":["React","useState","useEffect","ReactDOM","connect","createStructuredSelector","flash_alert","ShowCustomer","OutlinedInput","InputLabel","FormControl","IconButton","Input","TextField","InputMask","Button","Grid","country_names_g","useTranslation","AdditionalForm","props","t","phoneCode","setPhoneCode","find","country","handleSubmit","e","key","preventDefault","names","setFirstname","target","value","lastname","setLastname","surname","setSurname","email","setEmail","phone","setPhone","cellphone","setCellphone","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport { flash_alert } from 'components/App';\nimport ShowCustomer from \"components/customers/ShowCustomer\";\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport InputMask from 'react-input-mask';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {country_names_g} from 'components/customers/CustomerForm';\nimport {useTranslation} from 'react-i18next';\n\nfunction AdditionalForm(props){\n    const {t} = useTranslation();\n    const [phoneCode, setPhoneCode] = useState(\"\");\n    useEffect(() => {\n\t\tsetPhoneCode(country_names_g.find(country => country[\"iso\"] == props.country)[\"phone_code\"] )\n\t});\n\n    return (\n        <React.Fragment>\n              <form className=\"custom-form\" onSubmit={props.handleSubmit} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} autoComplete=\"off\">\n                  \n                  <Grid container spacing={3}>\n\n                      <Grid item xs={12} sm={6}>\n                          <TextField fullWidth variant=\"outlined\" label={t('globalEditForm.name')} name=\"firstname\" value={props.names} onChange={(e) => props.setFirstname(e.target.value)}/>\n                      </Grid>\n\n                      <Grid item xs={12} sm={6}>\n                          <TextField fullWidth variant=\"outlined\" label={t('globalEditForm.lastName')} name=\"lastname\" value={props.lastname} onChange={(e) => props.setLastname(e.target.value)}/>\n                      </Grid>\n\n                      <Grid item xs={12} sm={6}>\n                          <TextField fullWidth variant=\"outlined\" label={t('globalEditForm.surName')}name=\"surname\" value={props.surname} onChange={(e) => props.setSurname(e.target.value)}/>\n                      </Grid>\n\n                      <Grid item xs={12} sm={6}>\n                          <TextField fullWidth variant=\"outlined\" type=\"email\" label={t('globalEditForm.email')} name=\"email\" value={props.email} onChange={(e) => props.setEmail(e.target.value)}/>\n                      </Grid>\n\n                      <Grid item xs={12} sm={6}>\n                            <InputMask\n                                mask={ `(${phoneCode}) 9999999999`}\n                                value={props.phone}\n                                disabled={false}\n                                maskChar=\" \"\n                                onChange={(e) => props.setPhone(e.target.value)}\n                                >\n                                {() => <TextField fullWidth variant=\"outlined\" label={t('globalEditForm.phone')} name=\"phone\" />}\n                            </InputMask>\n                      </Grid>\n\n                      <Grid item xs={12} sm={6}>\n                            <InputMask\n                                mask={ `(${phoneCode}) 9999999999`}\n                                value={props.cellphone}\n                                disabled={false}\n                                maskChar=\" \"\n                                onChange={(e) => props.setCellphone(e.target.value)}\n                                >\n                                {() => <TextField fullWidth variant=\"outlined\" label={t('globalEditForm.cellPhone')} name=\"cellphone\" />}\n                            </InputMask>\n                      </Grid>\n                      \n                      <Grid item xs={12} container\n                              direction=\"row\"\n                              justify=\"flex-end\"\n                              alignItems=\"center\">\n                              <FormControl>\n                                  <Button id=\"additional-save\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                                  {t('globalText.save')}\n                                  </Button>\n                              </FormControl>\n                      </Grid>\t\n                  </Grid>\n              </form>\n      </React.Fragment>\n  );\n\n}\n\nconst structuredSelector = createStructuredSelector({});\nconst mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(AdditionalForm)\n"]},"metadata":{},"sourceType":"module"}