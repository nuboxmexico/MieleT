{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from './utils';\nvar ColumnGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var header = props.header,\n      className = props.className,\n      children = props.children,\n      classPrefix = props.classPrefix,\n      headerHeight = props.headerHeight,\n      verticalAlign = props.verticalAlign,\n      align = props.align,\n      width = props.width,\n      groupHeightProp = props.groupHeaderHeight,\n      rest = _objectWithoutPropertiesLoose(props, [\"header\", \"className\", \"children\", \"classPrefix\", \"headerHeight\", \"verticalAlign\", \"align\", \"width\", \"groupHeaderHeight\"]);\n\n  var hasGroupHeight = typeof groupHeightProp !== 'undefined';\n  var groupHeight = hasGroupHeight ? groupHeightProp : headerHeight / 2;\n  var restHeight = hasGroupHeight ? headerHeight - groupHeightProp : headerHeight / 2;\n  var styles = {\n    height: groupHeight,\n    width: width\n  };\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix());\n\n  var contentStyles = _extends({}, styles, {\n    textAlign: align,\n    verticalAlign: verticalAlign\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: classes\n  }, rest), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('header'),\n    style: styles\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('header-content'),\n    style: contentStyles\n  }, header)), React.Children.map(children, function (node) {\n    return /*#__PURE__*/React.cloneElement(node, {\n      className: prefix('cell'),\n      predefinedStyle: {\n        height: restHeight,\n        top: styles.height\n      },\n      headerHeight: restHeight,\n      verticalAlign: node.props.verticalAlign || verticalAlign,\n      children: /*#__PURE__*/React.createElement(\"span\", {\n        className: prefix('cell-content')\n      }, node.props.children)\n    });\n  }));\n});\nColumnGroup.displayName = 'Table.ColumnGroup';\nColumnGroup.defaultProps = {\n  headerHeight: 80,\n  classPrefix: 'column-group'\n};\nColumnGroup.propTypes = {\n  header: PropTypes.node,\n  classPrefix: PropTypes.string,\n  groupHeaderHeight: PropTypes.number,\n  verticalAlign: PropTypes.oneOf(['top', 'middle', 'bottom'])\n};\nexport default ColumnGroup;","map":null,"metadata":{},"sourceType":"module"}