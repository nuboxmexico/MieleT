{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/customers/CustomerDetails.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ReactCountryFlag from \"react-country-flag\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport DeleteAdditionalAddressDialog from \"components/customers/DeleteAdditionalAddressDialog\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction CustomerDetails(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, !props.no_customer_data && /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, t('services.dataCustomer.data'))), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: \"show-customer-edit-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"mdl-navigation__link brand-primary-link customers-edit-link\",\n    to: \"/customers/\".concat(props.customer_id, \"/edit\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }\n  }, \"edit\"), \" \", t('globalText.edit'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, t('services.dataCustomer.country')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ReactCountryFlag, {\n    countryCode: props.country,\n    svg: true,\n    style: {\n      width: '2em',\n      height: '2em',\n      marginRight: \"15px\"\n    },\n    title: props.country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }), props.country_names.find(function (object) {\n    return object[\"iso\"] === props.country;\n  }).name)), /*#__PURE__*/React.createElement(Grid, {\n    className: props.personCheck,\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, t('services.dataCustomer.type')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, props.selectedPerson == \"person_p\" ? \"FÃ­sica\" : \"Moral\")), /*#__PURE__*/React.createElement(Grid, {\n    className: props.RUTCheck,\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, t('services.dataCustomer.rut')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, props.rut))))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, t('services.customerAddress.title'))), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: \"show-customer-edit-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"mdl-navigation__link brand-primary-link customers-edit-link\",\n    to: \"/customers/\".concat(props.customer_id, \"/edit\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"edit\"), \" \", t('globalText.edit'))), /*#__PURE__*/React.createElement(Grid, {\n    className: props.zipcodeCheck,\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.zipcodeCheck')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, props.zipcode && props.zipcode || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.StreetType')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, props.street_type && props.street_type || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.streetName')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, props.street_name && props.street_name || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.extNumber')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, props.ext_number && props.ext_number || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.intNumber')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, props.int_number && props.int_number || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    className: props.delegationCheck,\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.delegation')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, props.delegation && props.delegation || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    className: props.colonyCheck,\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.colony')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, props.colony && props.colony || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, props.stateLabel), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, props.administrative_demarcation && (props.administrative_demarcation != null ? props.administrative_demarcation.admin3_admin1 : props.state) || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.references')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, props.reference && props.reference || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"light-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, t('services.customerAddress.phone')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"normal-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, props.phone && props.phone || t('globalText.noInfo'))), props.additionalsAddresses.map(function (additionalsAddress) {\n    var labelId = \"additionalsAddress-element-\".concat(additionalsAddress.id);\n    return /*#__PURE__*/React.createElement(Grid, {\n      id: labelId,\n      key: \"customer-additional-\" + additionalsAddress.id,\n      item: true,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MuiButtonBase-root Mui-expanded\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MuiAccordionSummary-content Mui-expanded\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"panel-custom-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 41\n      }\n    }, \"Direcci\\xF3n adicional\"))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"show-customer-edit-link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"mdl-navigation__link brand-primary-link additionalsAddress-edit-link  mg-r-5\",\n      to: \"/customers/\".concat(props.customer_id, \"/additional_address/\").concat(additionalsAddress.id, \"/edit\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 45\n      }\n    }, \"edit\"), \" \", t('globalText.edit')), /*#__PURE__*/React.createElement(DeleteAdditionalAddressDialog, {\n      key: \"customer-additional-delete-\" + additionalsAddress.id,\n      additional_address_id: additionalsAddress.id,\n      name: additionalsAddress.name,\n      headers: props.headers,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      className: props.zipcodeCheck,\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 41\n      }\n    }, t('services.customerAddress.zipcodeCheck')), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 41\n      }\n    }, additionalsAddress.zipcode && additionalsAddress.zipcode || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 41\n      }\n    }, t('services.customerAddress.StreetType')), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 41\n      }\n    }, additionalsAddress.street_type && additionalsAddress.street_type || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 41\n      }\n    }, t('services.customerAddress.streetName')), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 41\n      }\n    }, additionalsAddress.street_name && additionalsAddress.street_name || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 41\n      }\n    }, props.extNumberLabel), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }\n    }, additionalsAddress.ext_number && additionalsAddress.ext_number || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    }, props.intNumberLabel), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 41\n      }\n    }, additionalsAddress.int_number && additionalsAddress.int_number || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n      className: props.delegationCheck,\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 41\n      }\n    }, t('services.customerAddress.delegation')), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 41\n      }\n    }, additionalsAddress.delegation && additionalsAddress.delegation || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n      className: props.colonyCheck,\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 41\n      }\n    }, t('services.customerAddress.colony')), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    }, additionalsAddress.colony && additionalsAddress.colony || t('globalText.noInfo'))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, props.stateLabel), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 41\n      }\n    }, additionalsAddress.administrative_demarcation && (additionalsAddress.administrative_demarcation != null ? additionalsAddress.administrative_demarcation.admin3_admin1 : additionalsAddress.state) || t('globalText.noInfo')))));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"mdl-navigation__link brand-primary-link add-additionaladdress-link\",\n    to: \"/customers/\".concat(props.customer_id, \"/additional_address\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }, \"home\"), \"\\xA0\\xA0\", t('services.customerAddress.additionalAddress'))))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(CustomerDetails);","map":{"version":3,"sources":["/usr/src/app/javascript/components/customers/CustomerDetails.jsx"],"names":["React","useState","useEffect","Link","connect","createStructuredSelector","Grid","Accordion","AccordionSummary","AccordionDetails","ReactCountryFlag","ExpandMoreIcon","Button","DeleteAdditionalAddressDialog","useTranslation","CustomerDetails","props","t","no_customer_data","customer_id","country","width","height","marginRight","country_names","find","object","name","personCheck","selectedPerson","RUTCheck","rut","zipcodeCheck","zipcode","street_type","street_name","ext_number","int_number","delegationCheck","delegation","colonyCheck","colony","stateLabel","administrative_demarcation","admin3_admin1","state","reference","phone","additionalsAddresses","map","additionalsAddress","labelId","id","headers","extNumberLabel","intNumberLabel","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ReactCountryFlag from \"react-country-flag\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport DeleteAdditionalAddressDialog from \"components/customers/DeleteAdditionalAddressDialog\"\nimport {useTranslation} from \"react-i18next\"\n\nfunction CustomerDetails(props){\n    const {t} = useTranslation();\n\n  \treturn (\n  \t\t<React.Fragment>\n            { !props.no_customer_data &&\n                <Accordion>\n                    <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                    >\n                    <h1 className=\"panel-custom-title\">{t('services.dataCustomer.data')}</h1>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} className=\"show-customer-edit-link\">\n                                <Link className=\"mdl-navigation__link brand-primary-link customers-edit-link\" to={`/customers/${props.customer_id}/edit`}>\n                                    <i className=\"material-icons\">edit</i> {t('globalText.edit')}\n                                </Link>\n                            </Grid>\n                            <Grid item xs={12} sm={3}>\n                                <p className=\"light-label\">\n                                    {t('services.dataCustomer.country')}\n                                </p>\n                                <p className=\"normal-label\">\n                                    <ReactCountryFlag\n                                        countryCode={props.country}\n                                        svg\n                                        style={{\n                                            width: '2em',\n                                            height: '2em',\n                                            marginRight: \"15px\",\n                                        }}\n                                        title={props.country}\n                                    />\n                                    {props.country_names.find(object => object[\"iso\"] ===  props.country).name}\n                                </p>\n                            </Grid>\n                            <Grid className={props.personCheck} item xs={12} sm={3}>\n                                <p className=\"light-label\">\n                                    {t('services.dataCustomer.type')}\n                                </p>\n                                <p className=\"normal-label\">\n                                    {props.selectedPerson == \"person_p\" ? \"FÃ­sica\" : \"Moral\" }\n                                </p>\n                            </Grid>\n                            <Grid className={props.RUTCheck} item xs={12} sm={3}>\n                                <p className=\"light-label\">\n                                    {t('services.dataCustomer.rut')}\n                                </p>\n                                <p className=\"normal-label\">\n                                    {props.rut}\n                                </p>\n                            </Grid>\n                        </Grid>\t\n                    </AccordionDetails>\n                </Accordion>\n             }\n            <Accordion>\n                <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header-address\"\n                >\n                <h1 className=\"panel-custom-title\">{t('services.customerAddress.title')}</h1>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} className=\"show-customer-edit-link\">\n                            <Link className=\"mdl-navigation__link brand-primary-link customers-edit-link\" to={`/customers/${props.customer_id}/edit`}>\n                                <i className=\"material-icons\">edit</i> {t('globalText.edit')}\n                            </Link>\n                        </Grid>\n                        <Grid className={props.zipcodeCheck} item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.zipcodeCheck')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.zipcode && props.zipcode || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n                        <Grid item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.StreetType')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.street_type && props.street_type || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n                        <Grid item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.streetName')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.street_name && props.street_name || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.extNumber')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.ext_number && props.ext_number || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.intNumber')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.int_number && props.int_number || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n                        <Grid className={props.delegationCheck}  item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.delegation')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.delegation && props.delegation || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n                        <Grid className={props.colonyCheck} item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.colony')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.colony && props.colony || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {props.stateLabel}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.administrative_demarcation && (props.administrative_demarcation != null ?  props.administrative_demarcation.admin3_admin1 : props.state) || t('globalText.noInfo')}      \n                            </p>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.references')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.reference && props.reference || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <p className=\"light-label\">\n                                {t('services.customerAddress.phone')}\n                            </p>\n                            <p className=\"normal-label\">\n                                {props.phone && props.phone || t('globalText.noInfo')}\n                            </p>\n                        </Grid>\n                        {props.additionalsAddresses.map((additionalsAddress) => {\n                            const labelId = `additionalsAddress-element-${additionalsAddress.id}`;\n\n                            return (\n                            <Grid  id={labelId} key={\"customer-additional-\"+additionalsAddress.id} item xs={12}>\n                                <div className=\"MuiButtonBase-root Mui-expanded\">\n                                    <div className=\"MuiAccordionSummary-content Mui-expanded\">\n                                        <h1 className=\"panel-custom-title\">DirecciÃ³n adicional</h1>\n                                    </div>\n                                </div>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12} className=\"show-customer-edit-link\">\n                                        <Link className=\"mdl-navigation__link brand-primary-link additionalsAddress-edit-link  mg-r-5\" to={`/customers/${props.customer_id}/additional_address/${additionalsAddress.id}/edit`}>\n                                            <i className=\"material-icons\">edit</i> {t('globalText.edit')}\n                                        </Link>\n                                        <DeleteAdditionalAddressDialog key={\"customer-additional-delete-\"+additionalsAddress.id} additional_address_id={additionalsAddress.id} name={additionalsAddress.name} headers={props.headers} />\n                                    </Grid>\n\n                                    <Grid className={props.zipcodeCheck} item xs={12} sm={3}>\n                                        <p className=\"light-label\">\n                                            {t('services.customerAddress.zipcodeCheck')}\n                                        </p>\n                                        <p className=\"normal-label\">\n                                            {additionalsAddress.zipcode && additionalsAddress.zipcode || t('globalText.noInfo')}\n                                        </p>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={3}>\n                                        <p className=\"light-label\">\n                                            {t('services.customerAddress.StreetType')}\n                                        </p>\n                                        <p className=\"normal-label\">\n                                            {additionalsAddress.street_type && additionalsAddress.street_type || t('globalText.noInfo')}\n                                        </p>\n                                    </Grid>\n                                    <Grid item xs={12} sm={3}>\n                                        <p className=\"light-label\">\n                                            {t('services.customerAddress.streetName')}\n                                        </p>\n                                        <p className=\"normal-label\">\n                                            {additionalsAddress.street_name && additionalsAddress.street_name || t('globalText.noInfo')}\n                                        </p>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={3}>\n                                        <p className=\"light-label\">\n                                            {props.extNumberLabel}\n                                        </p>\n                                        <p className=\"normal-label\">\n                                            {additionalsAddress.ext_number && additionalsAddress.ext_number || t('globalText.noInfo')}\n                                        </p>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={3}>\n                                        <p className=\"light-label\">\n                                            {props.intNumberLabel}\n                                        </p>\n                                        <p className=\"normal-label\">\n                                            {additionalsAddress.int_number && additionalsAddress.int_number || t('globalText.noInfo')}\n                                        </p>\n                                    </Grid>\n\n                                    <Grid className={props.delegationCheck}  item xs={12} sm={3}>\n                                        <p className=\"light-label\">\n                                            {t('services.customerAddress.delegation')}\n                                        </p>\n                                        <p className=\"normal-label\">\n                                            {additionalsAddress.delegation && additionalsAddress.delegation || t('globalText.noInfo')}\n                                        </p>\n                                    </Grid>\n                                    <Grid className={props.colonyCheck} item xs={12} sm={3}>\n                                        <p className=\"light-label\">\n                                            {t('services.customerAddress.colony')}\n                                        </p>\n                                        <p className=\"normal-label\">\n                                            {additionalsAddress.colony && additionalsAddress.colony || t('globalText.noInfo')}\n                                        </p>\n                                    </Grid>\n                                    \n                                    \n                                    <Grid item xs={12} sm={3}>\n                                        <p className=\"light-label\">\n                                            {props.stateLabel}\n                                        </p>\n                                        <p className=\"normal-label\">\n                                            {additionalsAddress.administrative_demarcation && (additionalsAddress.administrative_demarcation != null ?  additionalsAddress.administrative_demarcation.admin3_admin1 : additionalsAddress.state) || t('globalText.noInfo')}\n                                        </p>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            );\n                        })}\n                        <Grid item xs={12}>\n                            <Button variant=\"outlined\" color=\"primary\">\n                                <Link className=\"mdl-navigation__link brand-primary-link add-additionaladdress-link\" to={`/customers/${props.customer_id}/additional_address`}>\n                                    <i className=\"material-icons\">home</i>&nbsp;&nbsp;{t('services.customerAddress.additionalAddress')}</Link>\n                            </Button>\n                        </Grid>\n                        \n                    </Grid>\t\n                </AccordionDetails>\n            </Accordion>\n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({});\nconst mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(CustomerDetails)\n"]},"metadata":{},"sourceType":"module"}