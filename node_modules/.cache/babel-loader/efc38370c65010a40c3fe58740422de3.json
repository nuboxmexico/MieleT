{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/calendars/TechnicianFilter.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { FormControl, InputLabel, Select, MenuItem, ListItemText, OutlinedInput, Checkbox } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nexport default function TechnicianFilter(_ref) {\n  var _this = this;\n\n  var setTecnicos = _ref.setTecnicos,\n      country = _ref.country,\n      getCalendarEvents = _ref.getCalendarEvents,\n      calendar_start_date = _ref.calendar_start_date,\n      calendar_finish_date = _ref.calendar_finish_date,\n      loading = _ref.loading,\n      setLoading = _ref.setLoading;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var MenuProps = {\n    PaperProps: {\n      style: {\n        width: 300\n      }\n    }\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      technicians = _useState2[0],\n      setTechnicians = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      technicianIds = _useState4[0],\n      setTechnicianIds = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setLoad = _useState6[1];\n\n  function handleTechnicianChange(event) {\n    var value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setTechnicianIds(technicianIds.length === technicians.length ? [] : technicians.map(function (technician) {\n        return technician.id;\n      }));\n      return;\n    }\n\n    setTechnicianIds(value);\n  }\n\n  function handleOnClose(_event) {\n    getCalendarEvents(country, technicianIds.join(','), calendar_start_date, calendar_finish_date, setLoading);\n  }\n\n  useEffect(function () {\n    if (load) {\n      handleOnClose();\n    }\n  }, [calendar_start_date, calendar_finish_date]);\n\n  function getTechniciansByCountry(_x) {\n    return _getTechniciansByCountry.apply(this, arguments);\n  }\n\n  function _getTechniciansByCountry() {\n    _getTechniciansByCountry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(country) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"api/v1/all_technicians?country=\".concat(country));\n\n            case 3:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              setTechnicians(data);\n              setTecnicos(data);\n              setTechnicianIds(data.map(function (technician) {\n                return technician.id;\n              }));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _getTechniciansByCountry.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (technicianIds.length != 0) {\n      setLoad(true);\n    }\n  }, [technicianIds]);\n  useEffect(function () {\n    if (country != \"\") {\n      setLoad(false);\n      setTechnicians([]);\n      getTechniciansByCountry(country);\n    }\n  }, [country]);\n  useEffect(function () {\n    if (load) {\n      handleOnClose();\n    }\n  }, [load]);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: \"white-bg padding-sides-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, t('technicians.selectTechnician')), /*#__PURE__*/React.createElement(Select, {\n    multiple: true,\n    value: technicianIds,\n    onClose: handleOnClose,\n    onChange: handleTechnicianChange,\n    MenuProps: MenuProps,\n    disabled: loading,\n    renderValue: function renderValue(selected) {\n      if (technicianIds.length !== technicians.length) {\n        return selected.map(function (selected) {\n          var _technicians$find, _technicians$find$use;\n\n          return (_technicians$find = technicians.find(function (tecnico) {\n            return selected == tecnico.id;\n          })) === null || _technicians$find === void 0 ? void 0 : (_technicians$find$use = _technicians$find.user) === null || _technicians$find$use === void 0 ? void 0 : _technicians$find$use.fullname;\n        }).join(', ');\n      }\n\n      return 'Todos';\n    },\n    input: /*#__PURE__*/React.createElement(OutlinedInput, {\n      style: {\n        height: '41px',\n        width: '300px'\n      },\n      label: t('technicians.techniciansTech'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    color: \"primary\",\n    checked: technicianIds.length === technicians.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Todos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), technicians.map(function (tecnico) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: tecnico.id,\n      value: tecnico.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: technicianIds.indexOf(tecnico.id) > -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: tecnico.user.fullname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["/usr/src/app/javascript/components/calendars/TechnicianFilter.jsx"],"names":["React","useState","useEffect","axios","FormControl","InputLabel","Select","MenuItem","ListItemText","OutlinedInput","Checkbox","useTranslation","TechnicianFilter","setTecnicos","country","getCalendarEvents","calendar_start_date","calendar_finish_date","loading","setLoading","t","MenuProps","PaperProps","style","width","technicians","setTechnicians","technicianIds","setTechnicianIds","load","setLoad","handleTechnicianChange","event","value","target","length","map","technician","id","handleOnClose","_event","join","getTechniciansByCountry","get","data","console","log","selected","find","tecnico","user","fullname","height","indexOf"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport axios from 'axios'\n\nimport {FormControl, InputLabel, Select, MenuItem, ListItemText, OutlinedInput, Checkbox} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nexport default function TechnicianFilter({setTecnicos, country, getCalendarEvents, calendar_start_date, calendar_finish_date, loading, setLoading}) {\n  const {t} = useTranslation();\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        width: 300,\n      },\n    },\n  };\n\n  const [technicians, setTechnicians] = useState([])\n  const [technicianIds, setTechnicianIds] = useState([])\n  const [load, setLoad] = useState(false)\n  function handleTechnicianChange(event) {\n    const {target: {value}} = event;\n    if (value[value.length - 1] === \"all\") {\n      setTechnicianIds(technicianIds.length === technicians.length ? [] : technicians.map(technician => technician.id));\n      return;\n    }\n    setTechnicianIds(value)\n  }\n\n  function handleOnClose(_event) {\n    getCalendarEvents(country, technicianIds.join(','), calendar_start_date, calendar_finish_date, setLoading)\n  }\n  \n  useEffect(() => {\n    if (load){\n      handleOnClose()\n    }\n  }, [calendar_start_date, calendar_finish_date])\n\n  async function getTechniciansByCountry(country) {\n    try {\n      const {data} = await axios.get(`api/v1/all_technicians?country=${country}`)\n      setTechnicians(data)\n      setTecnicos(data)\n      setTechnicianIds(data.map(technician => technician.id))\n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  \n  useEffect(() => {\n    if (technicianIds.length != 0) {\n      setLoad(true)\n    }\n\n  }, [technicianIds])\n\n  useEffect(() => {\n    if(country != \"\"){\n      setLoad(false)\n      setTechnicians([])\n      getTechniciansByCountry(country)\n    }\n  }, [country])\n\n  useEffect(() => {\n    if (load) {\n      handleOnClose()\n    }\n\n  }, [load])\n\n  return (\n    <FormControl variant=\"outlined\" size=\"small\">\n      <InputLabel className=\"white-bg padding-sides-5\">{t('technicians.selectTechnician')}</InputLabel>\n      <Select\n        multiple\n        value={technicianIds}\n        onClose={handleOnClose}\n        onChange={handleTechnicianChange}\n        MenuProps={MenuProps}\n        disabled={loading}\n        renderValue={(selected) => {\n          if (technicianIds.length !== technicians.length) {\n            return selected.map(selected => {\n              return technicians.find(tecnico => selected == tecnico.id)?.user?.fullname\n            }).join(', ')\n          }\n          return 'Todos'\n        }}\n        input={<OutlinedInput style={{height: '41px', width: '300px'}} label={t('technicians.techniciansTech')} />}\n      >\n        <MenuItem value=\"all\" >\n          <Checkbox color=\"primary\" checked={technicianIds.length === technicians.length} />\n          <ListItemText primary=\"Todos\" />\n        </MenuItem>\n\n        {technicians.map((tecnico) => (\n          <MenuItem key={tecnico.id} value={tecnico.id} >\n            <Checkbox color=\"primary\" checked={technicianIds.indexOf(tecnico.id) > -1} />\n            <ListItemText primary={tecnico.user.fullname} />\n          </MenuItem>\n        ))\n        }\n      </Select>\n    </FormControl>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}