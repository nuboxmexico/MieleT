{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/customers/EditCustomer.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { flash_alert } from 'components/App';\nimport Customers from \"components/customers/Customers\";\nimport CustomerForm from \"components/customers/CustomerForm\";\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\n\nfunction EditCustomer(props) {\n  var _React$createElement;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      names = _useState2[0],\n      setFirstname = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastname = _useState4[0],\n      setLastname = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      surname = _useState6[0],\n      setSurname = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      zipcode = _useState10[0],\n      setZipcode = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      state = _useState12[0],\n      setState = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      delegation = _useState14[0],\n      setDelegation = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      colony = _useState16[0],\n      setColony = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      street_type = _useState18[0],\n      setStreettype = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      street_name = _useState20[0],\n      setStreetName = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      ext_number = _useState22[0],\n      setExtNumber = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      int_number = _useState24[0],\n      setIntNumber = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      phone = _useState26[0],\n      setPhone = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      cellphone = _useState28[0],\n      setCellphone = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      reference = _useState30[0],\n      setReference = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      business_name = _useState32[0],\n      setBusinessName = _useState32[1];\n\n  var _useState33 = useState(\"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      rfc = _useState34[0],\n      setRFC = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      _useState36 = _slicedToArray(_useState35, 2),\n      email_fn = _useState36[0],\n      setEmailFn = _useState36[1];\n\n  var _useState37 = useState(\"\"),\n      _useState38 = _slicedToArray(_useState37, 2),\n      zipcode_fn = _useState38[0],\n      setZipcodeFn = _useState38[1];\n\n  var _useState39 = useState(\"\"),\n      _useState40 = _slicedToArray(_useState39, 2),\n      state_fn = _useState40[0],\n      setStateFn = _useState40[1];\n\n  var _useState41 = useState(\"\"),\n      _useState42 = _slicedToArray(_useState41, 2),\n      delegation_fn = _useState42[0],\n      setDelegationFn = _useState42[1];\n\n  var _useState43 = useState(\"\"),\n      _useState44 = _slicedToArray(_useState43, 2),\n      colony_fn = _useState44[0],\n      setColonyFn = _useState44[1];\n\n  var _useState45 = useState(\"\"),\n      _useState46 = _slicedToArray(_useState45, 2),\n      street_type_fn = _useState46[0],\n      setStreettypeFn = _useState46[1];\n\n  var _useState47 = useState(\"\"),\n      _useState48 = _slicedToArray(_useState47, 2),\n      street_name_fn = _useState48[0],\n      setStreetNameFn = _useState48[1];\n\n  var _useState49 = useState(\"\"),\n      _useState50 = _slicedToArray(_useState49, 2),\n      ext_number_fn = _useState50[0],\n      setExtNumberFn = _useState50[1];\n\n  var _useState51 = useState(\"\"),\n      _useState52 = _slicedToArray(_useState51, 2),\n      int_number_fn = _useState52[0],\n      setIntNumberFn = _useState52[1];\n\n  var _useState53 = useState(\"\"),\n      _useState54 = _slicedToArray(_useState53, 2),\n      phone_fn = _useState54[0],\n      setPhoneFn = _useState54[1];\n\n  var _useState55 = useState(\"person_p\"),\n      _useState56 = _slicedToArray(_useState55, 2),\n      selectedPerson = _useState56[0],\n      setSelectedPerson = _useState56[1];\n\n  var _useState57 = useState(false),\n      _useState58 = _slicedToArray(_useState57, 2),\n      redirect = _useState58[0],\n      setRedirect = _useState58[1];\n\n  var _useState59 = useState(\"MX\"),\n      _useState60 = _slicedToArray(_useState59, 2),\n      country = _useState60[0],\n      setCountry = _useState60[1];\n\n  var _useState61 = useState(\"\"),\n      _useState62 = _slicedToArray(_useState61, 2),\n      rut = _useState62[0],\n      setRut = _useState62[1];\n\n  var _useState63 = useState(\"\"),\n      _useState64 = _slicedToArray(_useState63, 2),\n      email2 = _useState64[0],\n      setEmail2 = _useState64[1];\n\n  var _useState65 = useState(\"\"),\n      _useState66 = _slicedToArray(_useState65, 2),\n      commercial_business = _useState66[0],\n      setCommercialBusiness = _useState66[1];\n\n  var _useState67 = useState(\"\"),\n      _useState68 = _slicedToArray(_useState67, 2),\n      tradename = _useState68[0],\n      setTradename = _useState68[1]; // administrative_demarcations\n\n\n  var _useState69 = useState([{\n    value: \"\",\n    label: \"\"\n  }]),\n      _useState70 = _slicedToArray(_useState69, 2),\n      administrativeDemarcations = _useState70[0],\n      setAdministrativeDemarcations = _useState70[1];\n\n  var _useState71 = useState([{\n    value: \"\",\n    label: \"\"\n  }]),\n      _useState72 = _slicedToArray(_useState71, 2),\n      administrativeDemarcationsFN = _useState72[0],\n      setAdministrativeDemarcationsFN = _useState72[1];\n\n  var _useState73 = useState({\n    value: \"\",\n    label: \"\"\n  }),\n      _useState74 = _slicedToArray(_useState73, 2),\n      administrativeDemarcationsValue = _useState74[0],\n      setAdministrativeDemarcationsValue = _useState74[1];\n\n  var _useState75 = useState({\n    value: \"\",\n    label: \"\"\n  }),\n      _useState76 = _slicedToArray(_useState75, 2),\n      administrativeDemarcationsFNValue = _useState76[0],\n      setAdministrativeDemarcationsFNValue = _useState76[1]; // colonies\n\n\n  var _useState77 = useState([{\n    value: \"\",\n    label: \"\"\n  }]),\n      _useState78 = _slicedToArray(_useState77, 2),\n      colonies = _useState78[0],\n      setColonies = _useState78[1];\n\n  var _useState79 = useState([{\n    value: \"\",\n    label: \"\"\n  }]),\n      _useState80 = _slicedToArray(_useState79, 2),\n      coloniesFN = _useState80[0],\n      setColoniesFN = _useState80[1];\n\n  var _useState81 = useState({\n    value: \"\",\n    label: \"\"\n  }),\n      _useState82 = _slicedToArray(_useState81, 2),\n      coloniesValue = _useState82[0],\n      setColoniesValue = _useState82[1];\n\n  var _useState83 = useState({\n    value: \"\",\n    label: \"\"\n  }),\n      _useState84 = _slicedToArray(_useState83, 2),\n      coloniesFNValue = _useState84[0],\n      setColoniesFNValue = _useState84[1];\n\n  var _useState85 = useState(false),\n      _useState86 = _slicedToArray(_useState85, 2),\n      zipcodeParentRequired = _useState86[0],\n      setZipcodeParentRequired = _useState86[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _useState87 = useState(false),\n      _useState88 = _slicedToArray(_useState87, 2),\n      admDemloading = _useState88[0],\n      setAdmDemloading = _useState88[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var userId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = props.match.params.id;\n                return _context.abrupt(\"return\", fetch(\"/api/v1/customers/\".concat(userId)).then(function (response) {\n                  return response.json();\n                }).then(function (json) {\n                  console.log(json);\n                  setFirstname(json.data.names);\n                  setLastname(json.data.lastname);\n                  setSurname(json.data.surname);\n                  setEmail(json.data.email);\n                  setZipcode(json.data.zipcode);\n                  setState(json.data.state);\n                  setDelegation(json.data.delegation);\n                  setColony(json.data.colony);\n                  setStreettype(json.data.street_type);\n                  setStreetName(json.data.street_name);\n                  setExtNumber(json.data.ext_number);\n                  setIntNumber(json.data.int_number);\n                  setPhone(json.data.phone);\n                  setCellphone(json.data.cellphone);\n                  setReference(json.data.reference);\n                  setBusinessName(json.data.business_name);\n                  setRFC(json.data.rfc);\n                  setEmailFn(json.data.email_fn);\n                  setZipcodeFn(json.data.zipcode_fn);\n                  setStateFn(json.data.state_fn);\n                  setDelegationFn(json.data.delegation_fn);\n                  setColonyFn(json.data.colony_fn);\n                  setStreettypeFn(json.data.street_type_fn);\n                  setStreetNameFn(json.data.street_name_fn);\n                  setExtNumberFn(json.data.ext_number_fn);\n                  setIntNumberFn(json.data.int_number_fn);\n                  setPhoneFn(json.data.phone_fn);\n                  setSelectedPerson(json.data.person_type);\n\n                  if (json.data.country != null) {\n                    setCountry(json.data.country.iso);\n                  }\n\n                  setRut(json.data.rut);\n                  setEmail2(json.data.email2);\n                  setCommercialBusiness(json.data.commercial_business);\n                  setTradename(json.data.tradename); // administrative Demarcations Data\n\n                  // administrative Demarcations Data\n                  fetchadministrativeDemarcationsData(json.data.country.iso, json.data.state, json.data.state_fn, json.data.zipcode, json.data.zipcode_fn, json.data.colony, json.data.colony_fn);\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  function fetchadministrativeDemarcationsData(country_code, state_code, state_code_fn, zipcode_params, zipcodefn_params, colony_code, colony_code_fn) {\n    setAdmDemloading(true);\n    var zipcode_t = zipcode_params != \"\" && zipcode_params != \"null\" ? zipcode_params : zipcodefn_params;\n    return fetch(\"/api/v1/administrative_demarcations?keywords=\".concat(country_code, \"&zipcode=\").concat(zipcode_t)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log(json);\n      var new_admin_data = json.data.map(function (administrativeDemarcation) {\n        var place_name = administrativeDemarcation.admin3_admin1;\n\n        if (administrativeDemarcation.country_code != \"CL\") {\n          place_name = administrativeDemarcation.admin_name_3 != null ? administrativeDemarcation.admin_name_3 : administrativeDemarcation.admin_name_1;\n\n          if (zipcode_params != \"\") {\n            setState(administrativeDemarcation.id);\n            setAdministrativeDemarcationsValue({\n              value: administrativeDemarcation.id,\n              label: place_name\n            });\n            setDelegation(administrativeDemarcation.admin_name_2); //setColony(administrativeDemarcation.place_name)\n          }\n\n          if (zipcodefn_params != \"\") {\n            setStateFn(administrativeDemarcation.id);\n            setAdministrativeDemarcationsFNValue({\n              value: administrativeDemarcation.id,\n              label: place_name\n            });\n            setDelegationFn(administrativeDemarcation.admin_name_2); //setColonyFn(administrativeDemarcation.place_name)\n          }\n        }\n\n        if (state_code == administrativeDemarcation.id) {\n          setAdministrativeDemarcationsValue({\n            value: administrativeDemarcation.id,\n            label: place_name\n          });\n        }\n\n        if (state_code_fn == administrativeDemarcation.id) {\n          setAdministrativeDemarcationsFNValue({\n            value: administrativeDemarcation.id,\n            label: place_name\n          });\n        }\n\n        if (colony_code == administrativeDemarcation.place_name) {\n          setColoniesValue({\n            value: administrativeDemarcation.id,\n            label: administrativeDemarcation.place_name\n          });\n        }\n\n        if (colony_code_fn == administrativeDemarcation.place_name) {\n          setColoniesFNValue({\n            value: administrativeDemarcation.id,\n            label: administrativeDemarcation.place_name\n          });\n        }\n\n        return {\n          value: administrativeDemarcation.id,\n          label: place_name\n        };\n      });\n      var unique_new_admin_data = new_admin_data.filter(function (v, i, a) {\n        return a.findIndex(function (t) {\n          return t.label === v.label;\n        }) === i;\n      });\n      setAdministrativeDemarcations(unique_new_admin_data);\n      setAdministrativeDemarcationsFN(unique_new_admin_data);\n\n      if (country_code != \"CL\") {\n        var colonies_data = json.data.map(function (administrativeDemarcation) {\n          var place_name = administrativeDemarcation.place_name;\n\n          if (colony == administrativeDemarcation.place_name) {\n            setColoniesValue({\n              value: administrativeDemarcation.id,\n              label: place_name\n            });\n          }\n\n          if (colony_fn == administrativeDemarcation.place_name) {\n            setColoniesFNValue({\n              value: administrativeDemarcation.id,\n              label: place_name\n            });\n          }\n\n          return {\n            value: administrativeDemarcation.id,\n            label: place_name\n          };\n        });\n\n        if (zipcode_params != \"\") {\n          setColonies(colonies_data);\n        }\n\n        if (zipcodefn_params != \"\") {\n          setColoniesFN(colonies_data);\n        }\n      }\n\n      setAdmDemloading(false);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    var body = new FormData();\n    body.set('names', names);\n    body.set('lastname', lastname);\n    body.set('surname', surname);\n    body.set('email', email);\n    body.set('zipcode', zipcode);\n    body.set('state', state);\n    body.set('delegation', delegation);\n    body.set('colony', colony);\n    body.set('street_type', street_type);\n    body.set('street_name', street_name);\n    body.set('ext_number', ext_number);\n    body.set('int_number', int_number);\n    body.set('phone', phone);\n    body.set('cellphone', cellphone);\n    body.set('reference', reference);\n    body.set('business_name', business_name);\n    body.set('rfc', rfc);\n    body.set('email_fn', email_fn);\n    body.set('zipcode_fn', zipcode_fn);\n    body.set('state_fn', state_fn);\n    body.set('delegation_fn', delegation_fn);\n    body.set('colony_fn', colony_fn);\n    body.set('street_type_fn', street_type_fn);\n    body.set('street_name_fn', street_name_fn);\n    body.set('ext_number_fn', ext_number_fn);\n    body.set('int_number_fn', int_number_fn);\n    body.set('phone_fn', phone_fn);\n    body.set('person_type', selectedPerson);\n    body.set('country', country);\n    body.set('rut', rut);\n    body.set('email2', email2);\n    body.set('commercial_business', commercial_business);\n    body.set('tradename', tradename);\n    return axios.patch(\"/api/v1/customers/\".concat(props.match.params.id), body, {\n      headers: props.headers\n    }).then(function (response) {\n      flash_alert(\"Actualizado!\", \"El cliente se ha actualizado correctamente\", \"success\");\n      setRedirect(true);\n    })[\"catch\"](function (e) {\n      console.log(e.response.data);\n      setLoading(false);\n\n      if (e.response.data) {\n        for (var key in e.response.data) {\n          flash_alert(\"Error\", e.response.data[key], \"danger\");\n        }\n      }\n    });\n  }\n\n  var redirect_check = [];\n\n  if (redirect) {\n    redirect_check.push( /*#__PURE__*/React.createElement(Redirect, {\n      key: \"redirect-to-customers\",\n      to: \"/customers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Customers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 58\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 3\n    }\n  }, redirect_check, /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, t('globalEditForm.title')), /*#__PURE__*/React.createElement(CustomerForm, (_React$createElement = {\n    admDemloading: admDemloading,\n    match: props.match,\n    handleSubmit: handleSubmit,\n    setRedirect: setRedirect,\n    redirect: redirect,\n    names: names,\n    lastname: lastname,\n    surname: surname,\n    email: email,\n    zipcode: zipcode,\n    state: state,\n    delegation: delegation,\n    colony: colony,\n    street_type: street_type,\n    street_name: street_name,\n    ext_number: ext_number,\n    int_number: int_number,\n    phone: phone,\n    cellphone: cellphone,\n    reference: reference,\n    business_name: business_name,\n    rfc: rfc,\n    email_fn: email_fn,\n    zipcode_fn: zipcode_fn,\n    state_fn: state_fn,\n    delegation_fn: delegation_fn,\n    colony_fn: colony_fn,\n    street_type_fn: street_type_fn,\n    street_name_fn: street_name_fn,\n    ext_number_fn: ext_number_fn,\n    int_number_fn: int_number_fn,\n    phone_fn: phone_fn,\n    selectedPerson: selectedPerson,\n    country: country,\n    rut: rut,\n    email2: email2,\n    commercial_business: commercial_business,\n    tradename: tradename,\n    setFirstname: setFirstname,\n    setLastname: setLastname,\n    setSurname: setSurname,\n    setEmail: setEmail,\n    setZipcode: setZipcode,\n    setState: setState,\n    setDelegation: setDelegation,\n    setColony: setColony,\n    setStreettype: setStreettype,\n    setStreetName: setStreetName,\n    setExtNumber: setExtNumber,\n    setIntNumber: setIntNumber,\n    setPhone: setPhone,\n    setCellphone: setCellphone,\n    setReference: setReference,\n    setBusinessName: setBusinessName,\n    setRFC: setRFC\n  }, _defineProperty(_React$createElement, \"setCellphone\", setCellphone), _defineProperty(_React$createElement, \"setEmailFn\", setEmailFn), _defineProperty(_React$createElement, \"setZipcodeFn\", setZipcodeFn), _defineProperty(_React$createElement, \"setStateFn\", setStateFn), _defineProperty(_React$createElement, \"setDelegationFn\", setDelegationFn), _defineProperty(_React$createElement, \"setColonyFn\", setColonyFn), _defineProperty(_React$createElement, \"setStreettypeFn\", setStreettypeFn), _defineProperty(_React$createElement, \"setStreetNameFn\", setStreetNameFn), _defineProperty(_React$createElement, \"setExtNumberFn\", setExtNumberFn), _defineProperty(_React$createElement, \"setIntNumberFn\", setIntNumberFn), _defineProperty(_React$createElement, \"setPhoneFn\", setPhoneFn), _defineProperty(_React$createElement, \"setSelectedPerson\", setSelectedPerson), _defineProperty(_React$createElement, \"setCountry\", setCountry), _defineProperty(_React$createElement, \"setRut\", setRut), _defineProperty(_React$createElement, \"setEmail2\", setEmail2), _defineProperty(_React$createElement, \"setCommercialBusiness\", setCommercialBusiness), _defineProperty(_React$createElement, \"setTradename\", setTradename), _defineProperty(_React$createElement, \"administrativeDemarcations\", administrativeDemarcations), _defineProperty(_React$createElement, \"administrativeDemarcationsFN\", administrativeDemarcationsFN), _defineProperty(_React$createElement, \"administrativeDemarcationsValue\", administrativeDemarcationsValue), _defineProperty(_React$createElement, \"administrativeDemarcationsFNValue\", administrativeDemarcationsFNValue), _defineProperty(_React$createElement, \"setAdministrativeDemarcations\", setAdministrativeDemarcations), _defineProperty(_React$createElement, \"setAdministrativeDemarcationsFN\", setAdministrativeDemarcationsFN), _defineProperty(_React$createElement, \"setAdministrativeDemarcationsValue\", setAdministrativeDemarcationsValue), _defineProperty(_React$createElement, \"setAdministrativeDemarcationsFNValue\", setAdministrativeDemarcationsFNValue), _defineProperty(_React$createElement, \"fetchadministrativeDemarcationsData\", fetchadministrativeDemarcationsData), _defineProperty(_React$createElement, \"colonies\", colonies), _defineProperty(_React$createElement, \"setColonies\", setColonies), _defineProperty(_React$createElement, \"coloniesFN\", coloniesFN), _defineProperty(_React$createElement, \"setColoniesFN\", setColoniesFN), _defineProperty(_React$createElement, \"coloniesValue\", coloniesValue), _defineProperty(_React$createElement, \"setColoniesValue\", setColoniesValue), _defineProperty(_React$createElement, \"coloniesFNValue\", coloniesFNValue), _defineProperty(_React$createElement, \"setColoniesFNValue\", setColoniesFNValue), _defineProperty(_React$createElement, \"zipcodeParentRequired\", zipcodeParentRequired), _defineProperty(_React$createElement, \"setZipcodeParentRequired\", setZipcodeParentRequired), _defineProperty(_React$createElement, \"loading\", loading), _defineProperty(_React$createElement, \"setLoading\", setLoading), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }), _React$createElement))));\n}\n\nvar structuredSelector = createStructuredSelector({\n  customer: function customer(state) {\n    return state.customer;\n  }\n});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(EditCustomer);","map":{"version":3,"sources":["/usr/src/app/javascript/components/customers/EditCustomer.jsx"],"names":["React","useState","useEffect","ReactDOM","PropTypes","axios","Redirect","connect","createStructuredSelector","flash_alert","Customers","CustomerForm","Container","Paper","useTranslation","EditCustomer","props","t","names","setFirstname","lastname","setLastname","surname","setSurname","email","setEmail","zipcode","setZipcode","state","setState","delegation","setDelegation","colony","setColony","street_type","setStreettype","street_name","setStreetName","ext_number","setExtNumber","int_number","setIntNumber","phone","setPhone","cellphone","setCellphone","reference","setReference","business_name","setBusinessName","rfc","setRFC","email_fn","setEmailFn","zipcode_fn","setZipcodeFn","state_fn","setStateFn","delegation_fn","setDelegationFn","colony_fn","setColonyFn","street_type_fn","setStreettypeFn","street_name_fn","setStreetNameFn","ext_number_fn","setExtNumberFn","int_number_fn","setIntNumberFn","phone_fn","setPhoneFn","selectedPerson","setSelectedPerson","redirect","setRedirect","country","setCountry","rut","setRut","email2","setEmail2","commercial_business","setCommercialBusiness","tradename","setTradename","value","label","administrativeDemarcations","setAdministrativeDemarcations","administrativeDemarcationsFN","setAdministrativeDemarcationsFN","administrativeDemarcationsValue","setAdministrativeDemarcationsValue","administrativeDemarcationsFNValue","setAdministrativeDemarcationsFNValue","colonies","setColonies","coloniesFN","setColoniesFN","coloniesValue","setColoniesValue","coloniesFNValue","setColoniesFNValue","zipcodeParentRequired","setZipcodeParentRequired","loading","setLoading","admDemloading","setAdmDemloading","fetchData","userId","match","params","id","fetch","then","response","json","console","log","data","person_type","iso","fetchadministrativeDemarcationsData","error","country_code","state_code","state_code_fn","zipcode_params","zipcodefn_params","colony_code","colony_code_fn","zipcode_t","new_admin_data","map","administrativeDemarcation","place_name","admin3_admin1","admin_name_3","admin_name_1","admin_name_2","unique_new_admin_data","filter","v","i","a","findIndex","colonies_data","handleSubmit","event","preventDefault","body","FormData","set","patch","headers","e","key","redirect_check","push","structuredSelector","customer","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,cAAR,QAA6B,eAA7B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC5B,wBAAYF,cAAc,EAA1B;AAAA,MAAOG,CAAP,mBAAOA,CAAP;;AACA,kBAA8BhB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOiB,KAAP;AAAA,MAAcC,YAAd;;AACA,mBAAgClB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOmB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8BpB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOqB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0BtB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOuB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BxB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOyB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAA0B1B,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAO2B,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAoC5B,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAO6B,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAA4B9B,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAO+B,MAAP;AAAA,MAAeC,SAAf;;AACA,oBAAqChC,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOiC,WAAP;AAAA,MAAoBC,aAApB;;AACA,oBAAqClC,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOmC,WAAP;AAAA,MAAoBC,aAApB;;AACA,oBAAmCpC,QAAQ,CAAC,EAAD,CAA3C;AAAA;AAAA,MAAOqC,UAAP;AAAA,MAAmBC,YAAnB;;AACA,oBAAmCtC,QAAQ,CAAC,EAAD,CAA3C;AAAA;AAAA,MAAOuC,UAAP;AAAA,MAAmBC,YAAnB;;AACA,oBAA0BxC,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOyC,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAkC1C,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAO2C,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAAkC5C,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAO6C,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAAyC9C,QAAQ,CAAC,EAAD,CAAjD;AAAA;AAAA,MAAO+C,aAAP;AAAA,MAAsBC,eAAtB;;AACA,oBAAsBhD,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOiD,GAAP;AAAA,MAAYC,MAAZ;;AACA,oBAA+BlD,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOmD,QAAP;AAAA,MAAiBC,UAAjB;;AACA,oBAAmCpD,QAAQ,CAAC,EAAD,CAA3C;AAAA;AAAA,MAAOqD,UAAP;AAAA,MAAmBC,YAAnB;;AACA,oBAA+BtD,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOuD,QAAP;AAAA,MAAiBC,UAAjB;;AACA,oBAAyCxD,QAAQ,CAAC,EAAD,CAAjD;AAAA;AAAA,MAAOyD,aAAP;AAAA,MAAsBC,eAAtB;;AACA,oBAAiC1D,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAO2D,SAAP;AAAA,MAAkBC,WAAlB;;AACA,oBAA0C5D,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAO6D,cAAP;AAAA,MAAuBC,eAAvB;;AACA,oBAA0C9D,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAO+D,cAAP;AAAA,MAAuBC,eAAvB;;AACA,oBAAwChE,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOiE,aAAP;AAAA,MAAsBC,cAAtB;;AACA,oBAAwClE,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOmE,aAAP;AAAA,MAAsBC,cAAtB;;AACA,oBAA+BpE,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOqE,QAAP;AAAA,MAAiBC,UAAjB;;AACA,oBAA4CtE,QAAQ,CAAC,UAAD,CAApD;AAAA;AAAA,MAAOuE,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,oBAAgCxE,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOyE,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAA8B1E,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAO2E,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAAsB5E,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAO6E,GAAP;AAAA,MAAYC,MAAZ;;AACA,oBAA4B9E,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAO+E,MAAP;AAAA,MAAeC,SAAf;;AACA,oBAAqDhF,QAAQ,CAAC,EAAD,CAA7D;AAAA;AAAA,MAAOiF,mBAAP;AAAA,MAA4BC,qBAA5B;;AACA,oBAAkClF,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOmF,SAAP;AAAA,MAAkBC,YAAlB,kBAnC4B,CAqC5B;;;AACA,oBAAoEpF,QAAQ,CAAC,CAAC;AAACqF,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAD,CAA5E;AAAA;AAAA,MAAOC,0BAAP;AAAA,MAAmCC,6BAAnC;;AACA,oBAAwExF,QAAQ,CAAC,CAAC;AAACqF,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAD,CAAhF;AAAA;AAAA,MAAOG,4BAAP;AAAA,MAAqCC,+BAArC;;AACA,oBAA8E1F,QAAQ,CAAC;AAACqF,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAtF;AAAA;AAAA,MAAOK,+BAAP;AAAA,MAAwCC,kCAAxC;;AACA,oBAAkF5F,QAAQ,CAAC;AAACqF,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAA1F;AAAA;AAAA,MAAOO,iCAAP;AAAA,MAA0CC,oCAA1C,kBAzC4B,CA2C5B;;;AACA,oBAAgC9F,QAAQ,CAAC,CAAC;AAACqF,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAAoChG,QAAQ,CAAC,CAAC;AAACqF,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAD,CAA5C;AAAA;AAAA,MAAOW,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAA0ClG,QAAQ,CAAC;AAACqF,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAlD;AAAA;AAAA,MAAOa,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAA8CpG,QAAQ,CAAC;AAACqF,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAtD;AAAA;AAAA,MAAOe,eAAP;AAAA,MAAwBC,kBAAxB;;AAGA,oBAA0DtG,QAAQ,CAAC,KAAD,CAAlE;AAAA;AAAA,MAAOuG,qBAAP;AAAA,MAA8BC,wBAA9B;;AAEA,wBAA8BzG,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOyG,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,oBAA0C1G,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAO2G,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA3G,EAAAA,SAAS,CAAC,YAAM;AAAA,aAEA4G,SAFA;AAAA;AAAA;;AAAA;AAAA,4EAEf;AAAA;AAAA;AAAA;AAAA;AAAA;AACKC,gBAAAA,MADL,GACc/F,KAAK,CAACgG,KAAN,CAAYC,MAAZ,CAAmBC,EADjC;AAAA,iDAEQC,KAAK,6BAAsBJ,MAAtB,EAAL,CACLK,IADK,CACA,UAAAC,QAAQ;AAAA,yBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,iBADR,EAELF,IAFK,CAEA,UAAAE,IAAI,EAAI;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAnG,kBAAAA,YAAY,CAACmG,IAAI,CAACG,IAAL,CAAUvG,KAAX,CAAZ;AACAG,kBAAAA,WAAW,CAACiG,IAAI,CAACG,IAAL,CAAUrG,QAAX,CAAX;AACAG,kBAAAA,UAAU,CAAC+F,IAAI,CAACG,IAAL,CAAUnG,OAAX,CAAV;AACAG,kBAAAA,QAAQ,CAAC6F,IAAI,CAACG,IAAL,CAAUjG,KAAX,CAAR;AACAG,kBAAAA,UAAU,CAAC2F,IAAI,CAACG,IAAL,CAAU/F,OAAX,CAAV;AACAG,kBAAAA,QAAQ,CAACyF,IAAI,CAACG,IAAL,CAAU7F,KAAX,CAAR;AACAG,kBAAAA,aAAa,CAACuF,IAAI,CAACG,IAAL,CAAU3F,UAAX,CAAb;AACAG,kBAAAA,SAAS,CAACqF,IAAI,CAACG,IAAL,CAAUzF,MAAX,CAAT;AACAG,kBAAAA,aAAa,CAACmF,IAAI,CAACG,IAAL,CAAUvF,WAAX,CAAb;AACAG,kBAAAA,aAAa,CAACiF,IAAI,CAACG,IAAL,CAAUrF,WAAX,CAAb;AACAG,kBAAAA,YAAY,CAAC+E,IAAI,CAACG,IAAL,CAAUnF,UAAX,CAAZ;AACAG,kBAAAA,YAAY,CAAC6E,IAAI,CAACG,IAAL,CAAUjF,UAAX,CAAZ;AACAG,kBAAAA,QAAQ,CAAC2E,IAAI,CAACG,IAAL,CAAU/E,KAAX,CAAR;AACAG,kBAAAA,YAAY,CAACyE,IAAI,CAACG,IAAL,CAAU7E,SAAX,CAAZ;AACAG,kBAAAA,YAAY,CAACuE,IAAI,CAACG,IAAL,CAAU3E,SAAX,CAAZ;AACAG,kBAAAA,eAAe,CAACqE,IAAI,CAACG,IAAL,CAAUzE,aAAX,CAAf;AACAG,kBAAAA,MAAM,CAACmE,IAAI,CAACG,IAAL,CAAUvE,GAAX,CAAN;AACAG,kBAAAA,UAAU,CAACiE,IAAI,CAACG,IAAL,CAAUrE,QAAX,CAAV;AACAG,kBAAAA,YAAY,CAAC+D,IAAI,CAACG,IAAL,CAAUnE,UAAX,CAAZ;AACAG,kBAAAA,UAAU,CAAC6D,IAAI,CAACG,IAAL,CAAUjE,QAAX,CAAV;AACAG,kBAAAA,eAAe,CAAC2D,IAAI,CAACG,IAAL,CAAU/D,aAAX,CAAf;AACAG,kBAAAA,WAAW,CAACyD,IAAI,CAACG,IAAL,CAAU7D,SAAX,CAAX;AACAG,kBAAAA,eAAe,CAACuD,IAAI,CAACG,IAAL,CAAU3D,cAAX,CAAf;AACAG,kBAAAA,eAAe,CAACqD,IAAI,CAACG,IAAL,CAAUzD,cAAX,CAAf;AACAG,kBAAAA,cAAc,CAACmD,IAAI,CAACG,IAAL,CAAUvD,aAAX,CAAd;AACAG,kBAAAA,cAAc,CAACiD,IAAI,CAACG,IAAL,CAAUrD,aAAX,CAAd;AACAG,kBAAAA,UAAU,CAAC+C,IAAI,CAACG,IAAL,CAAUnD,QAAX,CAAV;AACAG,kBAAAA,iBAAiB,CAAC6C,IAAI,CAACG,IAAL,CAAUC,WAAX,CAAjB;;AACA,sBAAGJ,IAAI,CAACG,IAAL,CAAU7C,OAAV,IAAqB,IAAxB,EAA6B;AAC5BC,oBAAAA,UAAU,CAACyC,IAAI,CAACG,IAAL,CAAU7C,OAAV,CAAkB+C,GAAnB,CAAV;AACA;;AACD5C,kBAAAA,MAAM,CAACuC,IAAI,CAACG,IAAL,CAAU3C,GAAX,CAAN;AACAG,kBAAAA,SAAS,CAACqC,IAAI,CAACG,IAAL,CAAUzC,MAAX,CAAT;AACAG,kBAAAA,qBAAqB,CAACmC,IAAI,CAACG,IAAL,CAAUvC,mBAAX,CAArB;AACAG,kBAAAA,YAAY,CAACiC,IAAI,CAACG,IAAL,CAAUrC,SAAX,CAAZ,CApCa,CAsCb;;AAAA;AACAwC,kBAAAA,mCAAmC,CAClCN,IAAI,CAACG,IAAL,CAAU7C,OAAV,CAAkB+C,GADgB,EAElCL,IAAI,CAACG,IAAL,CAAU7F,KAFwB,EAGlC0F,IAAI,CAACG,IAAL,CAAUjE,QAHwB,EAIlC8D,IAAI,CAACG,IAAL,CAAU/F,OAJwB,EAKlC4F,IAAI,CAACG,IAAL,CAAUnE,UALwB,EAMlCgE,IAAI,CAACG,IAAL,CAAUzF,MANwB,EAOlCsF,IAAI,CAACG,IAAL,CAAU7D,SAPwB,CAAnC;AASA,iBAlDK,WAmDC,UAAAiE,KAAK;AAAA,yBAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CAAJ;AAAA,iBAnDN,CAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFe;AAAA;AAAA;;AAyDff,IAAAA,SAAS;AACT,GA1DQ,EA0DN,EA1DM,CAAT;;AA6DA,WAASc,mCAAT,CAA6CE,YAA7C,EAA2DC,UAA3D,EAAuEC,aAAvE,EAAsFC,cAAtF,EAAsGC,gBAAtG,EAAwHC,WAAxH,EAAqIC,cAArI,EAAoJ;AACnJvB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,QAAIwB,SAAS,GAAKJ,cAAc,IAAI,EAAlB,IAAwBA,cAAc,IAAI,MAA3C,GAAqDA,cAArD,GAAsEC,gBAAvF;AACA,WAAOf,KAAK,wDAAiDW,YAAjD,sBAAyEO,SAAzE,EAAL,CACJjB,IADI,CACC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADT,EAEJF,IAFI,CAEC,UAAAE,IAAI,EAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAIgB,cAAc,GAAGhB,IAAI,CAACG,IAAL,CAAUc,GAAV,CACnB,UAASC,yBAAT,EAAoC;AACrC,YAAIC,UAAU,GAAGD,yBAAyB,CAACE,aAA3C;;AACA,YAAIF,yBAAyB,CAACV,YAA1B,IAA0C,IAA9C,EAAmD;AACjDW,UAAAA,UAAU,GAAID,yBAAyB,CAACG,YAA1B,IAA0C,IAA1C,GAAiDH,yBAAyB,CAACG,YAA3E,GAA0FH,yBAAyB,CAACI,YAAlI;;AAEA,cAAIX,cAAc,IAAI,EAAtB,EAAyB;AAC1BpG,YAAAA,QAAQ,CAAC2G,yBAAyB,CAACtB,EAA3B,CAAR;AACArB,YAAAA,kCAAkC,CAAC;AAAEP,cAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,cAAAA,KAAK,EAAEkD;AAA9C,aAAD,CAAlC;AACA1G,YAAAA,aAAa,CAACyG,yBAAyB,CAACK,YAA3B,CAAb,CAH0B,CAI1B;AACE;;AACD,cAAIX,gBAAgB,IAAI,EAAxB,EAA2B;AAC5BzE,YAAAA,UAAU,CAAC+E,yBAAyB,CAACtB,EAA3B,CAAV;AACAnB,YAAAA,oCAAoC,CAAC;AAAET,cAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,cAAAA,KAAK,EAAEkD;AAA9C,aAAD,CAApC;AACA9E,YAAAA,eAAe,CAAC6E,yBAAyB,CAACK,YAA3B,CAAf,CAH4B,CAI5B;AACE;AACF;;AACD,YAAGd,UAAU,IAAIS,yBAAyB,CAACtB,EAA3C,EAA8C;AAC5CrB,UAAAA,kCAAkC,CAAC;AAAEP,YAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,YAAAA,KAAK,EAAEkD;AAA9C,WAAD,CAAlC;AACD;;AACD,YAAGT,aAAa,IAAIQ,yBAAyB,CAACtB,EAA9C,EAAiD;AAC/CnB,UAAAA,oCAAoC,CAAC;AAAET,YAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,YAAAA,KAAK,EAAEkD;AAA9C,WAAD,CAApC;AACD;;AAED,YAAGN,WAAW,IAAIK,yBAAyB,CAACC,UAA5C,EAAuD;AACtDpC,UAAAA,gBAAgB,CAAC;AAAEf,YAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,YAAAA,KAAK,EAAEiD,yBAAyB,CAACC;AAAxE,WAAD,CAAhB;AACA;;AACD,YAAGL,cAAc,IAAII,yBAAyB,CAACC,UAA/C,EAA0D;AACzDlC,UAAAA,kBAAkB,CAAC;AAAEjB,YAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,YAAAA,KAAK,EAAEiD,yBAAyB,CAACC;AAAxE,WAAD,CAAlB;AACA;;AACD,eAAO;AAAEnD,UAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,UAAAA,KAAK,EAAEkD;AAA9C,SAAP;AACE,OAjCkB,CAArB;AAmCA,UAAMK,qBAAqB,GAAGR,cAAc,CAACS,MAAf,CAAsB,UAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL;AAAA,eAASA,CAAC,CAACC,SAAF,CAAY,UAAAlI,CAAC;AAAA,iBAAGA,CAAC,CAACsE,KAAF,KAAYyD,CAAC,CAACzD,KAAjB;AAAA,SAAb,MAAwC0D,CAAjD;AAAA,OAAtB,CAA9B;AAEAxD,MAAAA,6BAA6B,CAACqD,qBAAD,CAA7B;AACAnD,MAAAA,+BAA+B,CAACmD,qBAAD,CAA/B;;AAEA,UAAIhB,YAAY,IAAI,IAApB,EAAyB;AACvB,YAAIsB,aAAa,GAAG9B,IAAI,CAACG,IAAL,CAAUc,GAAV,CACrB,UAASC,yBAAT,EAAoC;AAClC,cAAIC,UAAU,GAAGD,yBAAyB,CAACC,UAA3C;;AAEA,cAAGzG,MAAM,IAAIwG,yBAAyB,CAACC,UAAvC,EAAkD;AACnDpC,YAAAA,gBAAgB,CAAC;AAAEf,cAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,cAAAA,KAAK,EAAEkD;AAA9C,aAAD,CAAhB;AACE;;AACD,cAAG7E,SAAS,IAAI4E,yBAAyB,CAACC,UAA1C,EAAqD;AACtDlC,YAAAA,kBAAkB,CAAC;AAAEjB,cAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,cAAAA,KAAK,EAAEkD;AAA9C,aAAD,CAAlB;AACE;;AACD,iBAAO;AAAEnD,YAAAA,KAAK,EAAEkD,yBAAyB,CAACtB,EAAnC;AAAuC3B,YAAAA,KAAK,EAAEkD;AAA9C,WAAP;AACD,SAXoB,CAApB;;AAaA,YAAIR,cAAc,IAAI,EAAtB,EAAyB;AAC1BhC,UAAAA,WAAW,CAACmD,aAAD,CAAX;AACE;;AACD,YAAIlB,gBAAgB,IAAI,EAAxB,EAA2B;AAC5B/B,UAAAA,aAAa,CAACiD,aAAD,CAAb;AACE;AACF;;AACDvC,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAEE,KAnEI,WAoEE,UAAAgB,KAAK;AAAA,aAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CAAJ;AAAA,KApEP,CAAP;AAqEE;;AAGH,WAASwB,YAAT,CAAsBC,KAAtB,EAA6B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,GAAL,CAAS,OAAT,EAAkBxI,KAAlB;AACAsI,IAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBtI,QAArB;AACAoI,IAAAA,IAAI,CAACE,GAAL,CAAS,SAAT,EAAoBpI,OAApB;AACAkI,IAAAA,IAAI,CAACE,GAAL,CAAS,OAAT,EAAkBlI,KAAlB;AACAgI,IAAAA,IAAI,CAACE,GAAL,CAAS,SAAT,EAAoBhI,OAApB;AACA8H,IAAAA,IAAI,CAACE,GAAL,CAAS,OAAT,EAAkB9H,KAAlB;AACA4H,IAAAA,IAAI,CAACE,GAAL,CAAS,YAAT,EAAuB5H,UAAvB;AACA0H,IAAAA,IAAI,CAACE,GAAL,CAAS,QAAT,EAAmB1H,MAAnB;AACAwH,IAAAA,IAAI,CAACE,GAAL,CAAS,aAAT,EAAwBxH,WAAxB;AACAsH,IAAAA,IAAI,CAACE,GAAL,CAAS,aAAT,EAAwBtH,WAAxB;AACAoH,IAAAA,IAAI,CAACE,GAAL,CAAS,YAAT,EAAuBpH,UAAvB;AACAkH,IAAAA,IAAI,CAACE,GAAL,CAAS,YAAT,EAAuBlH,UAAvB;AACAgH,IAAAA,IAAI,CAACE,GAAL,CAAS,OAAT,EAAkBhH,KAAlB;AACA8G,IAAAA,IAAI,CAACE,GAAL,CAAS,WAAT,EAAsB9G,SAAtB;AACA4G,IAAAA,IAAI,CAACE,GAAL,CAAS,WAAT,EAAsB5G,SAAtB;AACA0G,IAAAA,IAAI,CAACE,GAAL,CAAS,eAAT,EAA0B1G,aAA1B;AACAwG,IAAAA,IAAI,CAACE,GAAL,CAAS,KAAT,EAAgBxG,GAAhB;AACAsG,IAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBtG,QAArB;AACAoG,IAAAA,IAAI,CAACE,GAAL,CAAS,YAAT,EAAuBpG,UAAvB;AACAkG,IAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBlG,QAArB;AACAgG,IAAAA,IAAI,CAACE,GAAL,CAAS,eAAT,EAA0BhG,aAA1B;AACA8F,IAAAA,IAAI,CAACE,GAAL,CAAS,WAAT,EAAsB9F,SAAtB;AACA4F,IAAAA,IAAI,CAACE,GAAL,CAAS,gBAAT,EAA2B5F,cAA3B;AACA0F,IAAAA,IAAI,CAACE,GAAL,CAAS,gBAAT,EAA2B1F,cAA3B;AACAwF,IAAAA,IAAI,CAACE,GAAL,CAAS,eAAT,EAA0BxF,aAA1B;AACAsF,IAAAA,IAAI,CAACE,GAAL,CAAS,eAAT,EAA0BtF,aAA1B;AACAoF,IAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBpF,QAArB;AACAkF,IAAAA,IAAI,CAACE,GAAL,CAAS,aAAT,EAAwBlF,cAAxB;AACAgF,IAAAA,IAAI,CAACE,GAAL,CAAS,SAAT,EAAoB9E,OAApB;AACA4E,IAAAA,IAAI,CAACE,GAAL,CAAS,KAAT,EAAgB5E,GAAhB;AACA0E,IAAAA,IAAI,CAACE,GAAL,CAAS,QAAT,EAAmB1E,MAAnB;AACAwE,IAAAA,IAAI,CAACE,GAAL,CAAS,qBAAT,EAAgCxE,mBAAhC;AACAsE,IAAAA,IAAI,CAACE,GAAL,CAAS,WAAT,EAAsBtE,SAAtB;AAEA,WAAO/E,KAAK,CAACsJ,KAAN,6BAAiC3I,KAAK,CAACgG,KAAN,CAAYC,MAAZ,CAAmBC,EAApD,GAA0DsC,IAA1D,EAAgE;AAAEI,MAAAA,OAAO,EAAE5I,KAAK,CAAC4I;AAAjB,KAAhE,EACLxC,IADK,CACA,UAAAC,QAAQ,EAAI;AACjB5G,MAAAA,WAAW,CAAC,cAAD,EAAiB,4CAAjB,EAA+D,SAA/D,CAAX;AACAkE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA,KAJK,WAKC,UAAAkF,CAAC,EAAI;AACXtC,MAAAA,OAAO,CAACC,GAAR,CAAYqC,CAAC,CAACxC,QAAF,CAAWI,IAAvB;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAIkD,CAAC,CAACxC,QAAF,CAAWI,IAAf,EAAqB;AACpB,aAAK,IAAIqC,GAAT,IAAgBD,CAAC,CAACxC,QAAF,CAAWI,IAA3B,EAAiC;AAChChH,UAAAA,WAAW,CAAC,OAAD,EAAUoJ,CAAC,CAACxC,QAAF,CAAWI,IAAX,CAAgBqC,GAAhB,CAAV,EAAgC,QAAhC,CAAX;AACA;AACD;AACD,KAbK,CAAP;AAcA;;AAED,MAAIC,cAAc,GAAG,EAArB;;AACA,MAAIrF,QAAJ,EAAa;AACZqF,IAAAA,cAAc,CAACC,IAAf,eACC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAC,uBAAd;AAAsC,MAAA,EAAE,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsD,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD,CADD;AAGA;;AAED,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,cADF,eAEC,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK9I,CAAC,CAAC,sBAAD,CAAN,CADD,eAEC,oBAAC,YAAD;AACC,IAAA,aAAa,EAAE2F,aADhB;AAEC,IAAA,KAAK,EAAE5F,KAAK,CAACgG,KAFd;AAIC,IAAA,YAAY,EAAIqC,YAJjB;AAKC,IAAA,WAAW,EAAI1E,WALhB;AAMC,IAAA,QAAQ,EAAED,QANX;AAOC,IAAA,KAAK,EAAExD,KAPR;AAQC,IAAA,QAAQ,EAAEE,QARX;AASC,IAAA,OAAO,EAAEE,OATV;AAUC,IAAA,KAAK,EAAEE,KAVR;AAWC,IAAA,OAAO,EAAEE,OAXV;AAYC,IAAA,KAAK,EAAEE,KAZR;AAaC,IAAA,UAAU,EAAEE,UAbb;AAcC,IAAA,MAAM,EAAEE,MAdT;AAeC,IAAA,WAAW,EAAEE,WAfd;AAgBC,IAAA,WAAW,EAAEE,WAhBd;AAiBC,IAAA,UAAU,EAAEE,UAjBb;AAkBC,IAAA,UAAU,EAAEE,UAlBb;AAmBC,IAAA,KAAK,EAAEE,KAnBR;AAoBC,IAAA,SAAS,EAAEE,SApBZ;AAqBC,IAAA,SAAS,EAAEE,SArBZ;AAsBC,IAAA,aAAa,EAAEE,aAtBhB;AAuBC,IAAA,GAAG,EAAEE,GAvBN;AAwBC,IAAA,QAAQ,EAAEE,QAxBX;AAyBC,IAAA,UAAU,EAAEE,UAzBb;AA0BC,IAAA,QAAQ,EAAEE,QA1BX;AA2BC,IAAA,aAAa,EAAEE,aA3BhB;AA4BC,IAAA,SAAS,EAAEE,SA5BZ;AA6BC,IAAA,cAAc,EAAEE,cA7BjB;AA8BC,IAAA,cAAc,EAAEE,cA9BjB;AA+BC,IAAA,aAAa,EAAEE,aA/BhB;AAgCC,IAAA,aAAa,EAAEE,aAhChB;AAiCC,IAAA,QAAQ,EAAEE,QAjCX;AAkCC,IAAA,cAAc,EAAEE,cAlCjB;AAmCC,IAAA,OAAO,EAAEI,OAnCV;AAoCC,IAAA,GAAG,EAAEE,GApCN;AAqCC,IAAA,MAAM,EAAEE,MArCT;AAsCC,IAAA,mBAAmB,EAAEE,mBAtCtB;AAuCC,IAAA,SAAS,EAAEE,SAvCZ;AAwCC,IAAA,YAAY,EAAEjE,YAxCf;AAyCC,IAAA,WAAW,EAAEE,WAzCd;AA0CC,IAAA,UAAU,EAAEE,UA1Cb;AA2CC,IAAA,QAAQ,EAAEE,QA3CX;AA4CC,IAAA,UAAU,EAAEE,UA5Cb;AA6CC,IAAA,QAAQ,EAAEE,QA7CX;AA8CC,IAAA,aAAa,EAAEE,aA9ChB;AA+CC,IAAA,SAAS,EAAEE,SA/CZ;AAgDC,IAAA,aAAa,EAAEE,aAhDhB;AAiDC,IAAA,aAAa,EAAEE,aAjDhB;AAkDC,IAAA,YAAY,EAAEE,YAlDf;AAmDC,IAAA,YAAY,EAAEE,YAnDf;AAoDC,IAAA,QAAQ,EAAEE,QApDX;AAqDC,IAAA,YAAY,EAAEE,YArDf;AAsDC,IAAA,YAAY,EAAEE,YAtDf;AAuDC,IAAA,eAAe,EAAEE,eAvDlB;AAwDC,IAAA,MAAM,EAAEE;AAxDT,2DAyDeN,YAzDf,uDA0DaQ,UA1Db,yDA2DeE,YA3Df,uDA4DaE,UA5Db,4DA6DkBE,eA7DlB,wDA8DcE,WA9Dd,4DA+DkBE,eA/DlB,4DAgEkBE,eAhElB,2DAiEiBE,cAjEjB,2DAkEiBE,cAlEjB,uDAmEaE,UAnEb,8DAoEoBE,iBApEpB,uDAqEaI,UArEb,mDAsESE,MAtET,sDAuEYE,SAvEZ,kEAwEwBE,qBAxExB,yDAyEeE,YAzEf,uEA4E6BG,0BA5E7B,yEA6E+BE,4BA7E/B,4EA8EkCE,+BA9ElC,8EA+EoCE,iCA/EpC,0EAgFgCL,6BAhFhC,4EAiFkCE,+BAjFlC,+EAkFqCE,kCAlFrC,iFAmFuCE,oCAnFvC,gFAoFsC6B,mCApFtC,qDAsFW5B,QAtFX,wDAuFcC,WAvFd,uDAwFaC,UAxFb,0DAyFgBC,aAzFhB,0DA0FgBC,aA1FhB,6DA2FmBC,gBA3FnB,4DA4FkBC,eA5FlB,+DA6FqBC,kBA7FrB,kEAgGwBC,qBAhGxB,qEAiG2BC,wBAjG3B,oDAqGUC,OArGV,uDAsGaC,UAtGb;AAAA;AAAA;AAAA;AAAA,4BAFD,CAFD,CADD;AAgHA;;AAGD,IAAMsD,kBAAkB,GAAGzJ,wBAAwB,CAAC;AACnD0J,EAAAA,QAAQ,EAAE,kBAAAtI,KAAK;AAAA,WAAIA,KAAK,CAACsI,QAAV;AAAA;AADoC,CAAD,CAAnD;AAGA,IAAMC,kBAAkB,GAAG,EAA3B;AAEA,eAAe5J,OAAO,CAAC0J,kBAAD,EAAqBE,kBAArB,CAAP,CAAgDpJ,YAAhD,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'\nimport PropTypes from \"prop-types\"\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport { flash_alert } from 'components/App';\nimport Customers from \"components/customers/Customers\"\nimport CustomerForm from \"components/customers/CustomerForm\"\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useTranslation} from \"react-i18next\"\n\nfunction EditCustomer(props) {\n\tconst {t} = useTranslation();\n\tconst [names, setFirstname] = useState(\"\");\n\tconst [lastname, setLastname] = useState(\"\");\n\tconst [surname, setSurname] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [zipcode, setZipcode] = useState(\"\");\n\tconst [state, setState] = useState(\"\");\n\tconst [delegation, setDelegation] = useState(\"\");\n\tconst [colony, setColony] = useState(\"\");\n\tconst [street_type, setStreettype] = useState(\"\");\n\tconst [street_name, setStreetName] = useState(\"\");\n\tconst [ext_number, setExtNumber] = useState(\"\");\n\tconst [int_number, setIntNumber] = useState(\"\");\n\tconst [phone, setPhone] = useState(\"\");\n\tconst [cellphone, setCellphone] = useState(\"\");\n\tconst [reference, setReference] = useState(\"\");\n\tconst [business_name, setBusinessName] = useState(\"\");\n\tconst [rfc, setRFC] = useState(\"\");\n\tconst [email_fn, setEmailFn] = useState(\"\");\n\tconst [zipcode_fn, setZipcodeFn] = useState(\"\");\n\tconst [state_fn, setStateFn] = useState(\"\");\n\tconst [delegation_fn, setDelegationFn] = useState(\"\");\n\tconst [colony_fn, setColonyFn] = useState(\"\");\n\tconst [street_type_fn, setStreettypeFn] = useState(\"\");\n\tconst [street_name_fn, setStreetNameFn] = useState(\"\");\n\tconst [ext_number_fn, setExtNumberFn] = useState(\"\");\n\tconst [int_number_fn, setIntNumberFn] = useState(\"\");\n\tconst [phone_fn, setPhoneFn] = useState(\"\");\n\tconst [selectedPerson, setSelectedPerson] = useState(\"person_p\");\n\tconst [redirect, setRedirect] = useState(false);\n\tconst [country, setCountry] = useState(\"MX\");\n\tconst [rut, setRut] = useState(\"\");\n\tconst [email2, setEmail2] = useState(\"\");\n\tconst [commercial_business, setCommercialBusiness] = useState(\"\");\n\tconst [tradename, setTradename] = useState(\"\");\n\n\t// administrative_demarcations\n\tconst [administrativeDemarcations, setAdministrativeDemarcations] = useState([{value: \"\", label: \"\"}]);\n\tconst [administrativeDemarcationsFN, setAdministrativeDemarcationsFN] = useState([{value: \"\", label: \"\"}]);\n\tconst [administrativeDemarcationsValue, setAdministrativeDemarcationsValue] = useState({value: \"\", label: \"\"});\n\tconst [administrativeDemarcationsFNValue, setAdministrativeDemarcationsFNValue] = useState({value: \"\", label: \"\"});\n\n\t// colonies\n\tconst [colonies, setColonies] = useState([{value: \"\", label: \"\"}]);\n\tconst [coloniesFN, setColoniesFN] = useState([{value: \"\", label: \"\"}]);\n\tconst [coloniesValue, setColoniesValue] = useState({value: \"\", label: \"\"});\n\tconst [coloniesFNValue, setColoniesFNValue] = useState({value: \"\", label: \"\"});\n\t\n\t\n\tconst [zipcodeParentRequired, setZipcodeParentRequired] = useState(false);\n\n\tconst [loading, setLoading] = React.useState(false);\n\n\tconst [admDemloading, setAdmDemloading] = useState(false);\n\n\tuseEffect(() => {\n\n\t\tasync function fetchData() {\n\t\t\tlet userId = props.match.params.id;\n\t\t\treturn fetch(`/api/v1/customers/${userId}`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(json => {\n\t\t\t\t\tconsole.log(json)\n\t\t\t\t\tsetFirstname(json.data.names)\n\t\t\t\t\tsetLastname(json.data.lastname)\n\t\t\t\t\tsetSurname(json.data.surname)\n\t\t\t\t\tsetEmail(json.data.email)\n\t\t\t\t\tsetZipcode(json.data.zipcode)\n\t\t\t\t\tsetState(json.data.state)\n\t\t\t\t\tsetDelegation(json.data.delegation)\n\t\t\t\t\tsetColony(json.data.colony)\n\t\t\t\t\tsetStreettype(json.data.street_type)\n\t\t\t\t\tsetStreetName(json.data.street_name)\n\t\t\t\t\tsetExtNumber(json.data.ext_number)\n\t\t\t\t\tsetIntNumber(json.data.int_number)\n\t\t\t\t\tsetPhone(json.data.phone)\n\t\t\t\t\tsetCellphone(json.data.cellphone)\n\t\t\t\t\tsetReference(json.data.reference)\n\t\t\t\t\tsetBusinessName(json.data.business_name)\n\t\t\t\t\tsetRFC(json.data.rfc)\n\t\t\t\t\tsetEmailFn(json.data.email_fn)\n\t\t\t\t\tsetZipcodeFn(json.data.zipcode_fn)\n\t\t\t\t\tsetStateFn(json.data.state_fn)\n\t\t\t\t\tsetDelegationFn(json.data.delegation_fn)\n\t\t\t\t\tsetColonyFn(json.data.colony_fn)\n\t\t\t\t\tsetStreettypeFn(json.data.street_type_fn)\n\t\t\t\t\tsetStreetNameFn(json.data.street_name_fn)\n\t\t\t\t\tsetExtNumberFn(json.data.ext_number_fn)\n\t\t\t\t\tsetIntNumberFn(json.data.int_number_fn)\n\t\t\t\t\tsetPhoneFn(json.data.phone_fn)\n\t\t\t\t\tsetSelectedPerson(json.data.person_type)\n\t\t\t\t\tif(json.data.country != null){\n\t\t\t\t\t\tsetCountry(json.data.country.iso)\n\t\t\t\t\t}\n\t\t\t\t\tsetRut(json.data.rut)\n\t\t\t\t\tsetEmail2(json.data.email2)\n\t\t\t\t\tsetCommercialBusiness(json.data.commercial_business)\n\t\t\t\t\tsetTradename(json.data.tradename)\n\n\t\t\t\t\t// administrative Demarcations Data\n\t\t\t\t\tfetchadministrativeDemarcationsData(\n\t\t\t\t\t\tjson.data.country.iso,\n\t\t\t\t\t\tjson.data.state,\n\t\t\t\t\t\tjson.data.state_fn,\n\t\t\t\t\t\tjson.data.zipcode,\n\t\t\t\t\t\tjson.data.zipcode_fn,\n\t\t\t\t\t\tjson.data.colony,\n\t\t\t\t\t\tjson.data.colony_fn\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t\t.catch(error => console.log(error));\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\n\tfunction fetchadministrativeDemarcationsData(country_code, state_code, state_code_fn, zipcode_params, zipcodefn_params, colony_code, colony_code_fn){\n\t\tsetAdmDemloading(true);\n\t\tvar zipcode_t = ((zipcode_params != \"\" && zipcode_params != \"null\") ? zipcode_params : zipcodefn_params)\n\t\treturn fetch(`/api/v1/administrative_demarcations?keywords=${country_code}&zipcode=${zipcode_t}`)\n\t\t  .then(response => response.json())\n\t\t  .then(json => {\n\t\t\tconsole.log(json);\n\t\t\tvar new_admin_data = json.data.map(\n\t\t\t  function(administrativeDemarcation) {\n\t\t\t\tvar place_name = administrativeDemarcation.admin3_admin1\n\t\t\t\tif (administrativeDemarcation.country_code != \"CL\"){\n\t\t\t\t  place_name = (administrativeDemarcation.admin_name_3 != null ? administrativeDemarcation.admin_name_3 : administrativeDemarcation.admin_name_1)\n              \n\t\t\t\t  if (zipcode_params != \"\"){\n\t\t\t\t\tsetState(administrativeDemarcation.id)\n\t\t\t\t\tsetAdministrativeDemarcationsValue({ value: administrativeDemarcation.id, label: place_name })\n\t\t\t\t\tsetDelegation(administrativeDemarcation.admin_name_2)\n\t\t\t\t\t//setColony(administrativeDemarcation.place_name)\n\t\t\t\t  }\n\t\t\t\t  if (zipcodefn_params != \"\"){\n\t\t\t\t\tsetStateFn(administrativeDemarcation.id)\n\t\t\t\t\tsetAdministrativeDemarcationsFNValue({ value: administrativeDemarcation.id, label: place_name })\n\t\t\t\t\tsetDelegationFn(administrativeDemarcation.admin_name_2)\n\t\t\t\t\t//setColonyFn(administrativeDemarcation.place_name)\n\t\t\t\t  }  \n\t\t\t\t}\n\t\t\t\tif(state_code == administrativeDemarcation.id){\n\t\t\t\t  setAdministrativeDemarcationsValue({ value: administrativeDemarcation.id, label: place_name })\n\t\t\t\t}\n\t\t\t\tif(state_code_fn == administrativeDemarcation.id){\n\t\t\t\t  setAdministrativeDemarcationsFNValue({ value: administrativeDemarcation.id, label: place_name })\n\t\t\t\t}\n\n\t\t\t\tif(colony_code == administrativeDemarcation.place_name){\n\t\t\t\t\tsetColoniesValue({ value: administrativeDemarcation.id, label: administrativeDemarcation.place_name })\n\t\t\t\t}\n\t\t\t\tif(colony_code_fn == administrativeDemarcation.place_name){\n\t\t\t\t\tsetColoniesFNValue({ value: administrativeDemarcation.id, label: administrativeDemarcation.place_name })\n\t\t\t\t}\n\t\t\t\treturn { value: administrativeDemarcation.id, label: place_name };\n\t\t\t  }\n\t\t\t);\n\t\t\tconst unique_new_admin_data = new_admin_data.filter((v,i,a)=>a.findIndex(t=>(t.label === v.label))===i)\n\t\t\t\n\t\t\tsetAdministrativeDemarcations(unique_new_admin_data)\n\t\t\tsetAdministrativeDemarcationsFN(unique_new_admin_data)\n\t\n\t\t\tif (country_code != \"CL\"){\n\t\t\t  var colonies_data = json.data.map(\n\t\t\t\tfunction(administrativeDemarcation) {\n\t\t\t\t  var place_name = administrativeDemarcation.place_name\n\t\n\t\t\t\t  if(colony == administrativeDemarcation.place_name){\n\t\t\t\t\tsetColoniesValue({ value: administrativeDemarcation.id, label: place_name })\n\t\t\t\t  }\n\t\t\t\t  if(colony_fn == administrativeDemarcation.place_name){\n\t\t\t\t\tsetColoniesFNValue({ value: administrativeDemarcation.id, label: place_name })\n\t\t\t\t  }\n\t\t\t\t  return { value: administrativeDemarcation.id, label: place_name };\n\t\t\t\t}\n\t\t\t  );\n\t\t\t  if (zipcode_params != \"\"){\n\t\t\t\tsetColonies(colonies_data);\n\t\t\t  }\n\t\t\t  if (zipcodefn_params != \"\"){\n\t\t\t\tsetColoniesFN(colonies_data)\n\t\t\t  }\n\t\t\t}\n\t\t\tsetAdmDemloading(false);\n\t\t\n\t\t  })\n\t\t  .catch(error => console.log(error));\n\t  }\n\n\n\tfunction handleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tvar body = new FormData();\n\t\tbody.set('names', names);\n\t\tbody.set('lastname', lastname);\n\t\tbody.set('surname', surname);\n\t\tbody.set('email', email);\n\t\tbody.set('zipcode', zipcode);\n\t\tbody.set('state', state);\n\t\tbody.set('delegation', delegation);\n\t\tbody.set('colony', colony);\n\t\tbody.set('street_type', street_type);\n\t\tbody.set('street_name', street_name);\n\t\tbody.set('ext_number', ext_number);\n\t\tbody.set('int_number', int_number);\n\t\tbody.set('phone', phone);\n\t\tbody.set('cellphone', cellphone);\n\t\tbody.set('reference', reference);\n\t\tbody.set('business_name', business_name);\n\t\tbody.set('rfc', rfc);\n\t\tbody.set('email_fn', email_fn);\n\t\tbody.set('zipcode_fn', zipcode_fn);\n\t\tbody.set('state_fn', state_fn);\n\t\tbody.set('delegation_fn', delegation_fn);\n\t\tbody.set('colony_fn', colony_fn);\n\t\tbody.set('street_type_fn', street_type_fn);\n\t\tbody.set('street_name_fn', street_name_fn);\n\t\tbody.set('ext_number_fn', ext_number_fn);\n\t\tbody.set('int_number_fn', int_number_fn);\n\t\tbody.set('phone_fn', phone_fn);\n\t\tbody.set('person_type', selectedPerson);\n\t\tbody.set('country', country);\n\t\tbody.set('rut', rut);\n\t\tbody.set('email2', email2);\n\t\tbody.set('commercial_business', commercial_business);\n\t\tbody.set('tradename', tradename);\n\n\t\treturn axios.patch(`/api/v1/customers/${props.match.params.id}`, body, { headers: props.headers })\n\t\t\t.then(response => {\n\t\t\t\tflash_alert(\"Actualizado!\", \"El cliente se ha actualizado correctamente\", \"success\")\n\t\t\t\tsetRedirect(true);\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tconsole.log(e.response.data);\n\t\t\t\tsetLoading(false)\n\t\t\t\tif (e.response.data) {\n\t\t\t\t\tfor (var key in e.response.data) {\n\t\t\t\t\t\tflash_alert(\"Error\", e.response.data[key], \"danger\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tlet redirect_check = []\n\tif (redirect){\n\t\tredirect_check.push(\n\t\t\t<Redirect key=\"redirect-to-customers\" to=\"/customers\"><Customers /></Redirect>\n\t\t);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{redirect_check}\n\t\t\t<Paper className=\"custom-paper\">\n\t\t\t\t<h1>{t('globalEditForm.title')}</h1>\n\t\t\t\t<CustomerForm\n\t\t\t\t\tadmDemloading={admDemloading}\n\t\t\t\t\tmatch={props.match}\n\t\t\t\t\t\n\t\t\t\t\thandleSubmit = {handleSubmit}\n\t\t\t\t\tsetRedirect = {setRedirect}\n\t\t\t\t\tredirect={redirect}\n\t\t\t\t\tnames={names}\n\t\t\t\t\tlastname={lastname}\n\t\t\t\t\tsurname={surname}\n\t\t\t\t\temail={email}\n\t\t\t\t\tzipcode={zipcode}\n\t\t\t\t\tstate={state}\n\t\t\t\t\tdelegation={delegation}\n\t\t\t\t\tcolony={colony}\n\t\t\t\t\tstreet_type={street_type}\n\t\t\t\t\tstreet_name={street_name}\n\t\t\t\t\text_number={ext_number}\n\t\t\t\t\tint_number={int_number}\n\t\t\t\t\tphone={phone}\n\t\t\t\t\tcellphone={cellphone}\n\t\t\t\t\treference={reference}\n\t\t\t\t\tbusiness_name={business_name}\n\t\t\t\t\trfc={rfc}\n\t\t\t\t\temail_fn={email_fn}\n\t\t\t\t\tzipcode_fn={zipcode_fn}\n\t\t\t\t\tstate_fn={state_fn}\n\t\t\t\t\tdelegation_fn={delegation_fn}\n\t\t\t\t\tcolony_fn={colony_fn}\n\t\t\t\t\tstreet_type_fn={street_type_fn}\n\t\t\t\t\tstreet_name_fn={street_name_fn}\n\t\t\t\t\text_number_fn={ext_number_fn}\n\t\t\t\t\tint_number_fn={int_number_fn}\n\t\t\t\t\tphone_fn={phone_fn}\n\t\t\t\t\tselectedPerson={selectedPerson}\n\t\t\t\t\tcountry={country}\n\t\t\t\t\trut={rut}\n\t\t\t\t\temail2={email2}\n\t\t\t\t\tcommercial_business={commercial_business}\n\t\t\t\t\ttradename={tradename}\n\t\t\t\t\tsetFirstname={setFirstname}\n\t\t\t\t\tsetLastname={setLastname}\n\t\t\t\t\tsetSurname={setSurname}\n\t\t\t\t\tsetEmail={setEmail}\n\t\t\t\t\tsetZipcode={setZipcode}\n\t\t\t\t\tsetState={setState}\n\t\t\t\t\tsetDelegation={setDelegation}\n\t\t\t\t\tsetColony={setColony}\n\t\t\t\t\tsetStreettype={setStreettype}\n\t\t\t\t\tsetStreetName={setStreetName}\n\t\t\t\t\tsetExtNumber={setExtNumber}\n\t\t\t\t\tsetIntNumber={setIntNumber}\n\t\t\t\t\tsetPhone={setPhone}\n\t\t\t\t\tsetCellphone={setCellphone}\n\t\t\t\t\tsetReference={setReference}\n\t\t\t\t\tsetBusinessName={setBusinessName}\n\t\t\t\t\tsetRFC={setRFC}\n\t\t\t\t\tsetCellphone={setCellphone}\n\t\t\t\t\tsetEmailFn={setEmailFn}\n\t\t\t\t\tsetZipcodeFn={setZipcodeFn}\n\t\t\t\t\tsetStateFn={setStateFn}\n\t\t\t\t\tsetDelegationFn={setDelegationFn}\n\t\t\t\t\tsetColonyFn={setColonyFn}\n\t\t\t\t\tsetStreettypeFn={setStreettypeFn}\n\t\t\t\t\tsetStreetNameFn={setStreetNameFn}\n\t\t\t\t\tsetExtNumberFn={setExtNumberFn}\n\t\t\t\t\tsetIntNumberFn={setIntNumberFn}\n\t\t\t\t\tsetPhoneFn={setPhoneFn}\n\t\t\t\t\tsetSelectedPerson={setSelectedPerson}\n\t\t\t\t\tsetCountry={setCountry}\n\t\t\t\t\tsetRut={setRut}\n\t\t\t\t\tsetEmail2={setEmail2}\n\t\t\t\t\tsetCommercialBusiness={setCommercialBusiness}\n\t\t\t\t\tsetTradename={setTradename}\n\n\t\t\t\t\t// administrative_demarcations\n\t\t\t\t\tadministrativeDemarcations={administrativeDemarcations}\n\t\t\t\t\tadministrativeDemarcationsFN={administrativeDemarcationsFN}\n\t\t\t\t\tadministrativeDemarcationsValue={administrativeDemarcationsValue}\n\t\t\t\t\tadministrativeDemarcationsFNValue={administrativeDemarcationsFNValue}\n\t\t\t\t\tsetAdministrativeDemarcations={setAdministrativeDemarcations}\n\t\t\t\t\tsetAdministrativeDemarcationsFN={setAdministrativeDemarcationsFN}\n\t\t\t\t\tsetAdministrativeDemarcationsValue={setAdministrativeDemarcationsValue}\n\t\t\t\t\tsetAdministrativeDemarcationsFNValue={setAdministrativeDemarcationsFNValue}\n\t\t\t\t\tfetchadministrativeDemarcationsData={fetchadministrativeDemarcationsData}\n\t\t\t\t\t// colonies\n\t\t\t\t\tcolonies={colonies}\n\t\t\t\t\tsetColonies={setColonies}\n\t\t\t\t\tcoloniesFN={coloniesFN}\n\t\t\t\t\tsetColoniesFN={setColoniesFN}\n\t\t\t\t\tcoloniesValue={coloniesValue}\n\t\t\t\t\tsetColoniesValue={setColoniesValue}\n\t\t\t\t\tcoloniesFNValue={coloniesFNValue}\n\t\t\t\t\tsetColoniesFNValue={setColoniesFNValue}\n\n\n\t\t\t\t\tzipcodeParentRequired={zipcodeParentRequired}\n\t\t\t\t\tsetZipcodeParentRequired={setZipcodeParentRequired}\n\n\n\t\t\t\t\t// loading\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tsetLoading={setLoading}\n\t\t\t\t/>\n\t\t\t</Paper>\n\t\t</React.Fragment>\n\t);\n}\n\n\nconst structuredSelector = createStructuredSelector({\n\tcustomer: state => state.customer\n});\nconst mapDispatchToProps = {};\n\nexport default connect(structuredSelector, mapDispatchToProps)(EditCustomer)\n"]},"metadata":{},"sourceType":"module"}