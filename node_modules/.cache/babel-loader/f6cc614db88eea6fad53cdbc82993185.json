{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/policies/PolicyForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { flash_alert } from 'components/App';\nimport ShowCustomer from \"components/customers/ShowCustomer\";\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MaterialTable from 'react-data-table-component';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { country_names_g } from 'components/customers/CustomerForm';\nimport { money_format, isFloat, isInt } from \"constants/csrf\";\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nvar product_columns = [{\n  name: i18next.t('globalTables.productsColumns.model'),\n  selector: 'product.product_type',\n  sortable: true\n}, {\n  name: i18next.t('globalTables.productsColumns.tnr'),\n  selector: 'product.tnr',\n  sortable: true,\n  hide: 'sm'\n}, {\n  name: i18next.t('globalTables.productsColumns.name'),\n  selector: 'product.name',\n  sortable: true,\n  hide: 'md'\n}, {\n  name: i18next.t('globalTables.productsColumns.policy'),\n  selector: 'policy',\n  sortable: true,\n  hide: 'md'\n}, {\n  name: i18next.t('globalTables.productsColumns.status'),\n  selector: 'status',\n  sortable: true,\n  hide: 'md'\n}];\n\nfunction PolicyForm(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var handleAddressToggle = function handleAddressToggle(value) {\n    return function () {\n      props.setCheckedAddress(value);\n      handleAddressChange(value);\n    };\n  };\n\n  useEffect(function () {\n    if (props.customer) {\n      console.log(props.customer);\n\n      if (props.customer.address != \"\") {\n        handleAddressChange(props.customer.address);\n      } else {\n        if (props.customer.administrative_demarcation) {\n          var zone_name = props.customer.zipcode;\n\n          if (props.customer.country.iso == \"CL\") {\n            zone_name = props.customer.administrative_demarcation.admin_name_3;\n          }\n\n          fetchViatics(props.customer.country.iso, zone_name);\n        }\n      }\n    }\n  }, [props.customer]);\n  useEffect(function () {\n    getTotalPrice();\n  }, [props.laborPrice]);\n  useEffect(function () {\n    getTotalPrice();\n  }, [props.itemsPrice]);\n  useEffect(function () {\n    getTotalPrice();\n  }, [props.viaticPrice]);\n\n  function getTotalPrice() {\n    var total_price = 0;\n\n    if (isFloat(props.laborPrice) || isInt(props.laborPrice)) {\n      total_price = total_price + props.laborPrice;\n    }\n\n    if (isFloat(props.itemsPrice) || isInt(props.itemsPrice)) {\n      total_price = total_price + props.itemsPrice;\n    }\n\n    if (isFloat(props.viaticPrice) || isInt(props.viaticPrice)) {\n      total_price = total_price + props.viaticPrice;\n    }\n\n    props.setSubTotalPrice(total_price);\n    props.setIVAAmount(total_price * props.countryIVA);\n    props.setTotalPrice(total_price * (props.countryIVA + 1));\n  }\n\n  function handleProductRowChange(state) {\n    props.setSelectedProductRows(state.selectedRows);\n\n    if (props.customer) {\n      fetchLaborPrices(props.customer.country.iso, state.selectedRows.length);\n      fetchConsumables(props.customer.country.iso, state.selectedRows.map(function (product_row) {\n        return product_row.id;\n      }).join(\",\"));\n    }\n  }\n\n  function handleAddressChange(value) {\n    if (props.customer) {\n      if (value == \"principal\") {\n        if (props.customer.administrative_demarcation) {\n          var zone_name = props.customer.zipcode;\n\n          if (props.customer.country.iso == \"CL\") {\n            zone_name = props.customer.administrative_demarcation.admin_name_3;\n          }\n\n          fetchViatics(props.customer.country.iso, zone_name);\n        }\n      } else {\n        if (props.customer.additional_addresses) {\n          var addresss_t = props.customer.additional_addresses.find(function (additional_address) {\n            return additional_address.id == value;\n          });\n\n          if (addresss_t) {\n            var zone_name = addresss_t.zipcode;\n\n            if (props.customer.country.iso == \"CL\") {\n              zone_name = addresss_t.administrative_demarcation.admin_name_3;\n            }\n\n            fetchViatics(addresss_t.country.iso, zone_name);\n          }\n        }\n      }\n    }\n  }\n\n  function fetchViatics(country_code, zone) {\n    return fetch(\"/api/v1/viatic_values?country=\".concat(country_code, \"&zone=\").concat(zone)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log(json);\n\n      if (json.data.length > 0) {\n        props.setViaticPrice(json.data[0].amount);\n      } else {\n        props.setViaticPrice(\"Indefinido\");\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }\n\n  function fetchLaborPrices(country_code, units) {\n    return fetch(\"/api/v1/labor_prices?country=\".concat(country_code, \"&units=\").concat(units)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      if (json.data.length > 0) {\n        props.setlaborPrice(json.data[0].amount);\n      } else {\n        props.setlaborPrice(\"Indefinido\");\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }\n\n  function fetchConsumables(country_code, products_ids) {\n    return fetch(\"/api/v1/consumables?products_ids=\".concat(products_ids, \"&country=\").concat(country_code)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      props.setItemsPrice(json.data.total_consumable_amount);\n      props.setPolicyItemsRows(json.data.items);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"custom-form\",\n    onSubmit: props.handleSubmit,\n    onKeyPress: function onKeyPress(e) {\n      e.key === 'Enter' && e.preventDefault();\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, t('customer.newPolicy.addressPolicy')), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    key: \"principal\",\n    role: undefined,\n    dense: true,\n    button: true,\n    onClick: handleAddressToggle(\"principal\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: \"service-address-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"principal\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 82\n      }\n    }),\n    label: \"\",\n    checked: props.checkedAddress == \"principal\",\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    id: \"radio-address-list-label-principal\",\n    primary: \"Principal\",\n    secondary: \"\".concat(props.customer.street_type, \" \").concat(props.customer.street_name, \", \").concat(props.customer.ext_number, \" \").concat(props.customer.int_number, \", \").concat(props.customer.administrative_demarcation != null ? props.customer.administrative_demarcation.admin3_admin1 : props.customer.state).concat(props.customer.zipcode != \"\" ? \", CÃ³digo Postal: \" + props.customer.zipcode : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 37\n    }\n  })), props.customer.additional_addresses && props.customer.additional_addresses.map(function (additional_address) {\n    var labelId = \"radio-address-list-label-\".concat(additional_address.id);\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: additional_address.id,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleAddressToggle(additional_address.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      className: \"service-address-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: additional_address.id,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 98\n        }\n      }),\n      label: \"\",\n      checked: props.checkedAddress == additional_address.id,\n      tabIndex: -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: additional_address.name,\n      secondary: \"\".concat(additional_address.street_type, \" \").concat(additional_address.street_name, \", \").concat(additional_address.ext_number, \" \").concat(additional_address.int_number, \", \").concat(additional_address.administrative_demarcation != null ? additional_address.administrative_demarcation.admin3_admin1 : additional_address.state).concat(additional_address.zipcode != \"\" ? \", CÃ³digo Postal: \" + additional_address.zipcode : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 41\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }, t('customer.newPolicy.addProductPolicy')), props.customer && /*#__PURE__*/React.createElement(MaterialTable, {\n    className: \"customer-products-table\",\n    title: \"\",\n    columns: product_columns,\n    data: props.products,\n    responsive: true,\n    onSelectedRowsChange: handleProductRowChange,\n    highlightOnHover: true,\n    striped: true,\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    selectableRows: true,\n    selectableRowsComponent: Checkbox,\n    selectableRowSelected: function selectableRowSelected(row) {\n      return props.selectedProductRows.find(function (product) {\n        return product.id === row.id;\n      }) != undefined;\n    },\n    selectableRowsComponentProps: {\n      color: \"primary\"\n    },\n    contextMessage: {\n      singular: 'producto',\n      plural: 'productos',\n      message: 'seleccionados'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"policy-custom-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }, t('customer.newPolicy.consumableList')), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"policy-item-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, props.policyItemsRows && props.policyItemsRows.map(function (policy_item) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: policy_item.consumable.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 41\n      }\n    }, policy_item.consumable.name, \" x \", policy_item.total_boxes);\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"policy-table-container\",\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"policy-custom-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 37\n    }\n  }, t('customer.newPolicy.policyDetails')), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"policy-item-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 49\n    }\n  }, t('customer.newService.paymentService.serviceDetails.laborAmount')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 49\n    }\n  }, money_format(props.country, props.laborPrice))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 49\n    }\n  }, t('customer.newService.paymentService.serviceDetails.consumables')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 49\n    }\n  }, money_format(props.country, props.itemsPrice))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 49\n    }\n  }, t('customer.newService.paymentService.serviceDetails.viaticAmount')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 49\n    }\n  }, money_format(props.country, props.viaticPrice))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 49\n    }\n  }, t('customer.newService.paymentService.serviceDetails.laborAmount')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 49\n    }\n  }, money_format(props.country, props.subtotalPrice))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 49\n    }\n  }, t('customer.newService.paymentService.serviceDetails.ivaAmount')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 49\n    }\n  }, money_format(props.country, props.ivaAmount))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 49\n    }\n  }, t('customer.newService.paymentService.serviceDetails.totalAmount')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 49\n    }\n  }, money_format(props.country, props.totalPrice)))))), /*#__PURE__*/React.createElement(Grid, {\n    className: \"policy-table-buttons\",\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"policy-save\",\n    type: \"submit\",\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 41\n    }\n  }, t('customer.newPolicy.createPolicyButton')))))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(PolicyForm);","map":{"version":3,"sources":["/usr/src/app/javascript/components/policies/PolicyForm.jsx"],"names":["React","useState","useEffect","ReactDOM","connect","createStructuredSelector","flash_alert","ShowCustomer","OutlinedInput","InputLabel","FormControl","IconButton","Input","TextField","Button","Grid","Checkbox","MaterialTable","Radio","RadioGroup","FormControlLabel","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","country_names_g","money_format","isFloat","isInt","useTranslation","i18next","product_columns","name","t","selector","sortable","hide","PolicyForm","props","handleAddressToggle","value","setCheckedAddress","handleAddressChange","customer","console","log","address","administrative_demarcation","zone_name","zipcode","country","iso","admin_name_3","fetchViatics","getTotalPrice","laborPrice","itemsPrice","viaticPrice","total_price","setSubTotalPrice","setIVAAmount","countryIVA","setTotalPrice","handleProductRowChange","state","setSelectedProductRows","selectedRows","fetchLaborPrices","length","fetchConsumables","map","product_row","id","join","additional_addresses","addresss_t","find","additional_address","country_code","zone","fetch","then","response","json","data","setViaticPrice","amount","error","units","setlaborPrice","products_ids","setItemsPrice","total_consumable_amount","setPolicyItemsRows","items","handleSubmit","e","key","preventDefault","undefined","checkedAddress","street_type","street_name","ext_number","int_number","admin3_admin1","labelId","products","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","row","selectedProductRows","product","color","singular","plural","message","policyItemsRows","policy_item","consumable","total_boxes","subtotalPrice","ivaAmount","totalPrice","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport { flash_alert } from 'components/App';\nimport ShowCustomer from \"components/customers/ShowCustomer\";\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MaterialTable from 'react-data-table-component';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {country_names_g} from 'components/customers/CustomerForm';\nimport {money_format, isFloat, isInt} from \"constants/csrf\"\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nconst product_columns = [\n    {\n      name: i18next.t('globalTables.productsColumns.model'),\n      selector: 'product.product_type',\n      sortable: true\n    },\n    {\n      name: i18next.t('globalTables.productsColumns.tnr'),\n      selector: 'product.tnr',\n      sortable: true,\n      hide: 'sm',\n    },\n    {\n      name: i18next.t('globalTables.productsColumns.name'),\n      selector: 'product.name',\n      sortable: true,\n      hide: 'md',\n    },\n    {\n      name: i18next.t('globalTables.productsColumns.policy'),\n      selector: 'policy',\n      sortable: true,\n      hide: 'md',\n    },\n    {\n      name: i18next.t('globalTables.productsColumns.status'),\n      selector: 'status',\n      sortable: true,\n      hide: 'md',\n    }\n];\n\n\nfunction PolicyForm(props){\n    const {t} = useTranslation();\n    const handleAddressToggle = (value) => () => {\n      props.setCheckedAddress(value);\n      handleAddressChange(value);\n    };\n\n    useEffect(() => {\n        if(props.customer){\n            console.log(props.customer)\n            if(props.customer.address != \"\"){\n                handleAddressChange(props.customer.address)\n\n            }else{\n                if(props.customer.administrative_demarcation){\n                    var zone_name = props.customer.zipcode\n                    if(props.customer.country.iso == \"CL\"){\n                        zone_name =  props.customer.administrative_demarcation.admin_name_3\n                    }\n                    fetchViatics(props.customer.country.iso, zone_name)\n                }\n            }\n        }\n    }, [props.customer]);\n\n\n    useEffect(() => {\n        getTotalPrice();\n    }, [props.laborPrice]);\n\n\n    useEffect(() => {\n        getTotalPrice();\n    }, [props.itemsPrice]);\n\n    useEffect(() => {\n        getTotalPrice();\n    }, [props.viaticPrice]);\n\n    function getTotalPrice(){\n        let total_price = 0;\n        \n        if(isFloat(props.laborPrice) || isInt(props.laborPrice)) {\n            total_price = total_price + props.laborPrice\n        }\n\n        if(isFloat(props.itemsPrice) || isInt(props.itemsPrice)) {\n            total_price = total_price + props.itemsPrice\n        }\n\n        if(isFloat(props.viaticPrice) || isInt(props.viaticPrice)) {\n            total_price = total_price + props.viaticPrice\n        }\n        props.setSubTotalPrice(total_price)\n        props.setIVAAmount(total_price*props.countryIVA)\n        props.setTotalPrice(total_price*(props.countryIVA + 1))\n    }\n\n\n    function handleProductRowChange(state){\n        \n        props.setSelectedProductRows(state.selectedRows);\n        if(props.customer){\n            fetchLaborPrices(props.customer.country.iso, state.selectedRows.length)\n            fetchConsumables(props.customer.country.iso, state.selectedRows.map(function(product_row){return (product_row.id)}).join(\",\"))\n        }\n    }\n\n    function handleAddressChange(value){\n        if(props.customer){\n            if(value == \"principal\"){\n                if(props.customer.administrative_demarcation){\n                    var zone_name = props.customer.zipcode\n                    if(props.customer.country.iso == \"CL\"){\n                        zone_name =  props.customer.administrative_demarcation.admin_name_3\n                    }\n                    fetchViatics(props.customer.country.iso, zone_name)\n                }\n            }else{\n                if(props.customer.additional_addresses){\n                    var addresss_t = props.customer.additional_addresses.find(additional_address => additional_address.id == value);\n                    if(addresss_t){\n                        var zone_name = addresss_t.zipcode\n                        if(props.customer.country.iso == \"CL\"){\n                            zone_name =  addresss_t.administrative_demarcation.admin_name_3\n                        }\n                        fetchViatics(addresss_t.country.iso, zone_name)\n                    }\n                }\n            }\n\n        }\n    }\n     \n\n    function fetchViatics(country_code, zone){\n        return fetch(`/api/v1/viatic_values?country=${country_code}&zone=${zone}`)\n          .then(response => response.json())\n          .then(json => {\n            console.log(json)\n            if(json.data.length > 0){\n                props.setViaticPrice(json.data[0].amount)\n            }else{\n                props.setViaticPrice(\"Indefinido\")\n            }\n          })\n          .catch(error => console.log(error));\n    }\n\n    function fetchLaborPrices(country_code, units){\n        return fetch(`/api/v1/labor_prices?country=${country_code}&units=${units}`)\n          .then(response => response.json())\n          .then(json => {\n            if(json.data.length > 0){\n                props.setlaborPrice(json.data[0].amount)\n            }else{\n                props.setlaborPrice(\"Indefinido\")\n            }\n          })\n          .catch(error => console.log(error));\n    }\n\n    function fetchConsumables(country_code, products_ids){\n        return fetch(`/api/v1/consumables?products_ids=${products_ids}&country=${country_code}`)\n          .then(response => response.json())\n          .then(json => {\n            props.setItemsPrice(json.data.total_consumable_amount)\n            props.setPolicyItemsRows(json.data.items)\n          })\n          .catch(error => console.log(error));\n    }\n\n\n    return (\n        <React.Fragment>\n              <form className=\"custom-form\" onSubmit={props.handleSubmit} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} autoComplete=\"off\">\n                  \n                  <Grid container spacing={3}>\n\n\n                        <Grid item xs={12}>\n                            <p className=\"service-p\">{t('customer.newPolicy.addressPolicy')}</p>\n\n                            <List>\n                                <ListItem key=\"principal\" role={undefined} dense button onClick={handleAddressToggle(\"principal\")}>\n                                    <ListItemIcon className=\"service-address-label\">\n                                    <FormControlLabel value=\"principal\" control={<Radio color=\"primary\"/>} label=\"\" checked={props.checkedAddress == \"principal\"}\n                                        tabIndex={-1}\n                                    />\n                                    \n                                    </ListItemIcon>\n                                    <ListItemText \n                                        id={\"radio-address-list-label-principal\"} \n                                        primary= {\"Principal\"}\n                                        secondary={`${props.customer.street_type} ${props.customer.street_name}, ${props.customer.ext_number} ${props.customer.int_number}, ${props.customer.administrative_demarcation != null ?  props.customer.administrative_demarcation.admin3_admin1 : props.customer.state}${props.customer.zipcode != \"\" ? (\", CÃ³digo Postal: \" + props.customer.zipcode) : \"\" }`}\n                                    />\n                                    <ListItemSecondaryAction>\n                                    \n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                                {props.customer.additional_addresses && props.customer.additional_addresses.map((additional_address) => {\n                                    const labelId = `radio-address-list-label-${additional_address.id}`;\n                                    return (\n                                    <ListItem key={additional_address.id} role={undefined} dense button onClick={handleAddressToggle(additional_address.id)}>\n                                        <ListItemIcon className=\"service-address-label\">\n                                        <FormControlLabel value={additional_address.id} control={<Radio color=\"primary\"/>} label=\"\" checked={props.checkedAddress == additional_address.id}\n                                            tabIndex={-1}\n                                        />\n                                        \n                                        </ListItemIcon>\n                                        <ListItemText \n                                            id={labelId}\n                                            primary={additional_address.name}\n                                            secondary={`${additional_address.street_type} ${additional_address.street_name}, ${additional_address.ext_number} ${additional_address.int_number}, ${additional_address.administrative_demarcation != null ?  additional_address.administrative_demarcation.admin3_admin1 : additional_address.state}${additional_address.zipcode != \"\" ? (\", CÃ³digo Postal: \" + additional_address.zipcode) : \"\" }`} \n                                        />\n                                        <ListItemSecondaryAction>\n                                        \n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    );\n                                })}\n                                </List>\n\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <p className=\"service-p\">{t('customer.newPolicy.addProductPolicy')}</p>\n                            {props.customer && <MaterialTable\n                                className=\"customer-products-table\"\n                                title=\"\"\n                                columns={product_columns}\n                                data={props.products}\n                                responsive={true}\n                                onSelectedRowsChange={handleProductRowChange}\n                                highlightOnHover={true}\n                                striped={true}\n                                noDataComponent={i18next.t('globalText.NoDataComponent')}\n                                paginationComponentOptions={{rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n                                selectableRows\n                                selectableRowsComponent={Checkbox}\n                                selectableRowSelected={row => (props.selectedProductRows.find(product => product.id === row.id) != undefined) }\n                                selectableRowsComponentProps={{ color: \"primary\" }}\n                                contextMessage={{ singular: 'producto', plural: 'productos', message: 'seleccionados' }}\n                            />\n                            }\n                        </Grid>\n\n                        <Grid item xs={12} sm={4}>\n                            <h2 className=\"policy-custom-subtitle\">{t('customer.newPolicy.consumableList')}</h2>\n                            <ul className=\"policy-item-list\">\n                            \n                                {props.policyItemsRows && props.policyItemsRows.map((policy_item) => {\n                                    return (\n                                        <li key={policy_item.consumable.id} >{policy_item.consumable.name} x {policy_item.total_boxes}</li>\n                                    );\n                                })}\n                            </ul>\n                        </Grid>\n\n                        <Grid item xs={12} sm={8} container>\n                            <Grid container spacing={3}>\n                                <Grid className=\"policy-table-container\" item xs={12}>\n                                    <h2 className=\"policy-custom-subtitle\">{t('customer.newPolicy.policyDetails')}</h2>\n                                    \n                                    <table className=\"policy-item-table\">\n                                        <tbody>   \n                                            <tr>\n                                                <td>{t('customer.newService.paymentService.serviceDetails.laborAmount')}</td>\n                                                <td>{money_format(props.country,props.laborPrice)}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>{t('customer.newService.paymentService.serviceDetails.consumables')}</td>\n                                                <td>{money_format(props.country,props.itemsPrice)}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>{t('customer.newService.paymentService.serviceDetails.viaticAmount')}</td>\n                                                <td>{money_format(props.country,props.viaticPrice)}</td>\n                                            </tr>\n                                            \n                                            <tr>\n                                                <td>{t('customer.newService.paymentService.serviceDetails.laborAmount')}</td>\n                                                <td>{money_format(props.country,props.subtotalPrice)}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>{t('customer.newService.paymentService.serviceDetails.ivaAmount')}</td>\n                                                <td>{money_format(props.country,props.ivaAmount)}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>{t('customer.newService.paymentService.serviceDetails.totalAmount')}</td>\n                                                <td>{money_format(props.country,props.totalPrice)}</td>\n                                            </tr>\n                                            \n                                        </tbody>\n                                    </table>\n                                </Grid>\n                                <Grid className=\"policy-table-buttons\" item xs={12}>\n                                    <FormControl>\n                                        <Button id=\"policy-save\" type=\"submit\" variant=\"outlined\" color=\"primary\">\n                                            {t('customer.newPolicy.createPolicyButton')}\n                                        </Button>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Grid>\t\n                  </Grid>\n              </form>\n      </React.Fragment>\n  );\n\n}\n\nconst structuredSelector = createStructuredSelector({});\nconst mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(PolicyForm)\n"]},"metadata":{},"sourceType":"module"}