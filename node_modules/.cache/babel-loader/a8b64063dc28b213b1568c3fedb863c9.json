{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/users/UserForm.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport TextField from '@material-ui/core/TextField';\nimport InputMask from 'react-input-mask';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport ReactCountryFlag from \"react-country-flag\";\nimport { country_names_g } from 'components/customers/CustomerForm'; // Button loading\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useCountries from 'hooks/useCountries';\nimport { useTranslation } from 'react-i18next';\nvar names = ['Administrador', 'Contact Center', 'Technical Management', 'Field Service', 'TÃ©cnico', 'Cliente', 'Entregas/Despacho', 'Home Program', 'Finanzas'];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative'\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    }\n  };\n});\n\nfunction UserForm(props) {\n  var _this = this;\n\n  var _useCountries = useCountries(),\n      countries = _useCountries.data,\n      loadingCountries = _useCountries.loading;\n\n  var _useState = useState(\"+52\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneCode = _useState2[0],\n      setPhoneCode = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Button loading\n\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      countryIsos = _useState4[0],\n      setCountryIsos = _useState4[1];\n\n  useEffect(function () {\n    if (loadingCountries) return;\n    setCountryIsos(countries.map(function (country) {\n      return country.iso;\n    }));\n  }, [loadingCountries]);\n\n  var handleSubmitButtonClick = function handleSubmitButtonClick(e) {\n    if (!loading) {\n      setLoading(true);\n      props.handleSubmit(e, setLoading);\n    }\n  };\n\n  function handleDisabledChange(e) {\n    props.setDisabled(!props.disabled);\n  }\n\n  useEffect(function () {\n    if (loadingCountries) return;\n\n    if (props.country[0]) {\n      setPhoneCode(countries.find(function (country) {\n        return country[\"iso\"] == props.country[0];\n      }).phone_code);\n    }\n  });\n\n  function handleCountryInputs(e) {\n    props.setCountry(e.target.value);\n\n    if (e.target.value.length > 0) {\n      setPhoneCode(countries.find(function (country) {\n        return country[\"iso\"] == e.target.value[0];\n      })[\"phone_code\"]);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"custom-form\",\n    onSubmit: props.handleSubmit,\n    onKeyPress: function onKeyPress(e) {\n      e.key === 'Enter' && e.preventDefault();\n    },\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    className: \"MuiFormControl-fullWidth Mui-MultiSelect\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: \"white-bg padding-sides-5\",\n    htmlFor: \"select-multiple-chip-country\",\n    id: \"country-chip-multiple-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 8\n    }\n  }, \"Pa\\xEDs\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"country-chip-multiple\",\n    multiple: true,\n    value: props.country,\n    onChange: function onChange(e) {\n      return handleCountryInputs(e);\n    },\n    input: /*#__PURE__*/React.createElement(OutlinedInput, {\n      id: \"select-multiple-chip-country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }),\n    renderValue: function renderValue(selected) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, !loadingCountries && selected.map(function (value) {\n        return /*#__PURE__*/React.createElement(Chip, {\n          key: value,\n          label: /*#__PURE__*/React.createElement(MenuItem, {\n            key: value,\n            value: value,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(ReactCountryFlag, {\n            countryCode: value,\n            svg: true,\n            style: {\n              width: '2em',\n              height: '2em',\n              marginRight: \"15px\"\n            },\n            title: value,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 10\n            }\n          }), /*#__PURE__*/React.createElement(ListItemText, {\n            primary: countries.find(function (object) {\n              return object[\"iso\"] === value;\n            }).name,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 11\n            }\n          })),\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 10\n          }\n        });\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }\n  }, !loadingCountries && countryIsos.map(function (name) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: props.country.indexOf(name) > -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(ReactCountryFlag, {\n      countryCode: name,\n      svg: true,\n      style: {\n        width: '2em',\n        height: '2em',\n        marginRight: \"15px\"\n      },\n      title: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: countries.find(function (country) {\n        return country.iso === name;\n      }).name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 10\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    variant: \"outlined\",\n    label: t('users.globalUserForm.firstname'),\n    name: \"firstname\",\n    value: props.firstname,\n    onChange: function onChange(e) {\n      return props.setFirstname(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    variant: \"outlined\",\n    label: t('users.globalUserForm.lastName'),\n    name: \"lastname\",\n    value: props.lastname,\n    onChange: function onChange(e) {\n      return props.setLastname(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    variant: \"outlined\",\n    label: t('users.globalUserForm.surName'),\n    name: \"surname\",\n    value: props.surname,\n    onChange: function onChange(e) {\n      return props.setSurname(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    value: props.email,\n    onChange: function onChange(e) {\n      return props.setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    mask: \"(\".concat(phoneCode, \") 9999999999\"),\n    value: props.phone,\n    disabled: false,\n    maskChar: \" \",\n    onChange: function onChange(e) {\n      return props.setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 8\n    }\n  }, function () {\n    return /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: t('users.globalUserForm.phone'),\n      name: \"phone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 40\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InputMask, {\n    mask: \"(\".concat(phoneCode, \") 9999999999\"),\n    value: props.cellphone,\n    disabled: false,\n    maskChar: \" \",\n    onChange: function onChange(e) {\n      return props.setCellphone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 8\n    }\n  }, function () {\n    return /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      label: t('users.globalUserForm.mobile'),\n      name: \"cellphone\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 40\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"center-cost-select\",\n    options: props.costCenters,\n    value: props.costCenterValue,\n    onChange: function onChange(event, newValue) {\n      props.setCostCenter(newValue.value);\n      props.setCostCenterValue(newValue);\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.label;\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        fullWidth: true,\n        label: t('users.globalUserForm.costCenter'),\n        variant: \"outlined\",\n        name: \"costCenter\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 32\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    required: true,\n    id: \"roleId-select\",\n    options: props.userUniqueiIds,\n    value: props.uniqueiIdsValue,\n    onChange: function onChange(event, newValue) {\n      props.setRoleId(newValue.value);\n      props.setUniqueiIdsValue(newValue);\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.label;\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        fullWidth: true,\n        label: t('users.globalUserForm.roleId'),\n        variant: \"outlined\",\n        name: \"roleId\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 8\n    }\n  }, t('users.globalUserForm.workingDay')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-outlined-label\",\n    id: \"demo-simple-select-outlined\",\n    value: props.worktime,\n    onChange: function onChange(e) {\n      return props.setWorktime(e.target.value);\n    },\n    label: \"Jornada\",\n    name: \"worktime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Full-Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 8\n    }\n  }, \"Full-Time\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Part-Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 8\n    }\n  }, \"Part-Time\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    className: \"MuiFormControl-fullWidth Mui-MultiSelect\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: \"white-bg padding-sides-5\",\n    htmlFor: \"select-multiple-chip\",\n    id: \"role-chip-multiple-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 8\n    }\n  }, \"Rol\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"role-chip-multiple\",\n    multiple: true,\n    value: props.roleName,\n    onChange: function onChange(e) {\n      return props.setRoleName(e.target.value);\n    },\n    input: /*#__PURE__*/React.createElement(OutlinedInput, {\n      id: \"select-multiple-chip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }),\n    renderValue: function renderValue(selected) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }\n      }, selected.map(function (value) {\n        return /*#__PURE__*/React.createElement(Chip, {\n          key: value,\n          label: value,\n          className: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 10\n          }\n        });\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 8\n    }\n  }, names.map(function (name) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: props.roleName.indexOf(name) > -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 10\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"MuiFormControl-fullWidth custom-from-password \" + props.passwordClass,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 8\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: props.showPassword ? 'text' : 'password',\n    value: props.password,\n    onChange: function onChange(e) {\n      return props.setPassword(e.target.value);\n    },\n    name: \"password\",\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: props.handleClickShowPassword,\n      onMouseDown: props.handleMouseDownPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 10\n      }\n    }, props.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 32\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 49\n      }\n    }))),\n    labelWidth: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mdl-navigation__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    color: \"primary\",\n    checked: props.disabled,\n    onClick: function onClick(e) {\n      return handleDisabledChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 8\n    }\n  }), \"\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quotation-product-name quotation-product-labor-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 8\n    }\n  }, t('users.globalUserForm.disabledCheckButtonP1'), \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 129\n    }\n  }, t('users.globalUserForm.disabledCheckButtonP2')), \"?\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"user-save\",\n    disabled: loading,\n    onClick: handleSubmitButtonClick,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 8\n    }\n  }, t('globalText.save')), loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 20\n    }\n  }))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(UserForm);","map":{"version":3,"sources":["/usr/src/app/javascript/components/users/UserForm.jsx"],"names":["React","useState","useEffect","ReactDOM","PropTypes","connect","createStructuredSelector","TextField","InputMask","OutlinedInput","Visibility","VisibilityOff","InputLabel","InputAdornment","FormHelperText","FormControl","IconButton","Input","Button","Autocomplete","MenuItem","ListItemText","Select","Checkbox","Chip","Grid","ReactCountryFlag","country_names_g","makeStyles","CircularProgress","useCountries","useTranslation","names","useStyles","theme","wrapper","margin","spacing","position","buttonProgress","top","left","marginTop","marginLeft","UserForm","props","countries","data","loadingCountries","loading","phoneCode","setPhoneCode","t","classes","setLoading","countryIsos","setCountryIsos","map","country","iso","handleSubmitButtonClick","e","handleSubmit","handleDisabledChange","setDisabled","disabled","find","phone_code","handleCountryInputs","setCountry","target","value","length","key","preventDefault","selected","width","height","marginRight","object","name","indexOf","firstname","setFirstname","lastname","setLastname","surname","setSurname","email","setEmail","phone","setPhone","cellphone","setCellphone","costCenters","costCenterValue","event","newValue","setCostCenter","setCostCenterValue","option","label","params","userUniqueiIds","uniqueiIdsValue","setRoleId","setUniqueiIdsValue","worktime","setWorktime","roleName","setRoleName","passwordClass","showPassword","password","setPassword","handleClickShowPassword","handleMouseDownPassword","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\n\nimport TextField from '@material-ui/core/TextField';\nimport InputMask from 'react-input-mask';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport ReactCountryFlag from \"react-country-flag\";\n\nimport {country_names_g} from 'components/customers/CustomerForm';\n\n// Button loading\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useCountries from 'hooks/useCountries';\nimport { useTranslation } from 'react-i18next';\n\nconst names = [\n\t'Administrador',\n\t'Contact Center',\n\t'Technical Management',\n\t'Field Service',\n\t'TÃ©cnico',\n\t'Cliente',\n\t'Entregas/Despacho',\n\t'Home Program',\n\t'Finanzas'\n  ];\n\nconst useStyles = makeStyles((theme) => ({\n\n\twrapper: {\n\t  margin: theme.spacing(1),\n\t  position: 'relative',\n\t},\n\tbuttonProgress: {\n\t  position: 'absolute',\n\t  top: '50%',\n\t  left: '50%',\n\t  marginTop: -12,\n\t  marginLeft: -12,\n\t},\n  }));\n\nfunction UserForm(props){\n  const {data: countries, loading: loadingCountries} =  useCountries()\n\tconst [phoneCode, setPhoneCode] = useState(\"+52\");\n\tconst {t} = useTranslation();\n\t// Button loading\n\tconst classes = useStyles();\n\tconst [loading, setLoading] = React.useState(false);\n  \tconst [countryIsos, setCountryIsos] = useState([])\n\n\t\n  useEffect(() => {\n    if (loadingCountries) return\n\n    setCountryIsos(countries.map(country => country.iso))\n  }, [loadingCountries])\n  \n\n\tconst handleSubmitButtonClick = (e) => {\n\t  if (!loading) {\n\t\tsetLoading(true);\n\t\tprops.handleSubmit(e, setLoading)\n\t  }\n\t};\n\n\tfunction handleDisabledChange(e){\n\t\tprops.setDisabled(!props.disabled);\n    }\n\t\n    useEffect(() => {\n    if (loadingCountries) return\n\n\t\tif (props.country[0]){\n\t\t\tsetPhoneCode(countries.find(country => country[\"iso\"] == props.country[0]).phone_code )\n\t\t}\n\t\t\n\t});\n\n\tfunction handleCountryInputs(e){\n\t\tprops.setCountry(e.target.value);\n\t\tif(e.target.value.length > 0 ){\n\t\t\tsetPhoneCode(countries.find(country => country[\"iso\"] == e.target.value[0])[\"phone_code\"] )\n\t\t}\n\t}\n\n    return (\n\t\t<React.Fragment>\n\t\t\t<form className=\"custom-form\" onSubmit={props.handleSubmit} onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }} autoComplete=\"off\">\n\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<FormControl required className=\"MuiFormControl-fullWidth Mui-MultiSelect\" variant=\"outlined\">\n\t\t\t\t\t\t\t<InputLabel className=\"white-bg padding-sides-5\" htmlFor=\"select-multiple-chip-country\" id=\"country-chip-multiple-label\">PaÃ­s</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tid=\"country-chip-multiple\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={props.country}\n\t\t\t\t\t\t\tonChange={(e) => handleCountryInputs(e)}\n\t\t\t\t\t\t\tinput={<OutlinedInput id=\"select-multiple-chip-country\" />}\n\t\t\t\t\t\t\trenderValue={(selected) => (\n\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t{!loadingCountries && selected.map((value) => (\n\t\t\t\t\t\t\t\t\t<Chip key={value} label={<MenuItem key={value} value={value} >\n\t\t\t\t\t\t\t\t\t<ReactCountryFlag\n\t\t\t\t\t\t\t\t\t\t\tcountryCode={value}\n\t\t\t\t\t\t\t\t\t\t\tsvg\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '2em',\n\t\t\t\t\t\t\t\t\t\t\t\theight: '2em',\n\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: \"15px\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\ttitle={value}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<ListItemText primary={countries.find(object => object[\"iso\"] ===  value).name} />\n\t\t\t\t\t\t\t\t\t</MenuItem>} className=\"\" />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{!loadingCountries && countryIsos.map((name) => (\n\t\t\t\t\t\t\t\t<MenuItem key={name} value={name} >\n\t\t\t\t\t\t\t\t\t<Checkbox color=\"primary\" checked={props.country.indexOf(name) > -1} />\n\t\t\t\t\t\t\t\t\t<ReactCountryFlag\n\t\t\t\t\t\t\t\t\t\tcountryCode={name}\n\t\t\t\t\t\t\t\t\t\tsvg\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\twidth: '2em',\n\t\t\t\t\t\t\t\t\t\t\theight: '2em',\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: \"15px\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\ttitle={name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ListItemText primary={countries.find(country => country.iso === name).name} />\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField required fullWidth variant=\"outlined\" label={t('users.globalUserForm.firstname')} name=\"firstname\" value={props.firstname} onChange={(e) => props.setFirstname(e.target.value)}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField required fullWidth variant=\"outlined\" label={t('users.globalUserForm.lastName')} name=\"lastname\" value={props.lastname} onChange={(e) => props.setLastname(e.target.value)}/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField required fullWidth variant=\"outlined\" label={t('users.globalUserForm.surName')} name=\"surname\" value={props.surname} onChange={(e) => props.setSurname(e.target.value)}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField required fullWidth variant=\"outlined\" type=\"email\" label=\"Email\" name=\"email\" value={props.email} onChange={(e) => props.setEmail(e.target.value)}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<InputMask\n                                mask={ `(${phoneCode}) 9999999999`}\n                                value={props.phone}\n                                disabled={false}\n                                maskChar=\" \"\n                                onChange={(e) => props.setPhone(e.target.value)}\n                                >\n                                {() => <TextField fullWidth variant=\"outlined\" label={t('users.globalUserForm.phone')} name=\"phone\" />}\n                            </InputMask>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<InputMask\n                                mask={ `(${phoneCode}) 9999999999`}\n                                value={props.cellphone}\n                                disabled={false}\n                                maskChar=\" \"\n                                onChange={(e) => props.setCellphone(e.target.value)}\n                                >\n                                {() => <TextField fullWidth variant=\"outlined\" label={t('users.globalUserForm.mobile')} name=\"cellphone\" />}\n                            </InputMask>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tid=\"center-cost-select\"\n\t\t\t\t\t\toptions={props.costCenters}\n\t\t\t\t\t\tvalue={props.costCenterValue}\n\t\t\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\t\t\tprops.setCostCenter(newValue.value)\n\t\t\t\t\t\t\tprops.setCostCenterValue(newValue)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tgetOptionLabel={(option) => option.label}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} fullWidth label={t('users.globalUserForm.costCenter')} variant=\"outlined\" name=\"costCenter\"/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<Autocomplete\n              required\n\t\t\t\t\t\t\tid=\"roleId-select\"\n\t\t\t\t\t\t\toptions={props.userUniqueiIds}\n\t\t\t\t\t\t\tvalue={props.uniqueiIdsValue}\n\t\t\t\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\t\t\t\tprops.setRoleId(newValue.value)\n\t\t\t\t\t\t\t\tprops.setUniqueiIdsValue(newValue)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tgetOptionLabel={(option) => option.label}\n\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} fullWidth label={t('users.globalUserForm.roleId')} variant=\"outlined\" name=\"roleId\"/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<FormControl variant=\"outlined\" className=\"MuiFormControl-fullWidth\">\n\t\t\t\t\t\t\t<InputLabel id=\"demo-simple-select-outlined-label\">{t('users.globalUserForm.workingDay')}</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tlabelId=\"demo-simple-select-outlined-label\"\n\t\t\t\t\t\t\tid=\"demo-simple-select-outlined\"\n\t\t\t\t\t\t\tvalue={props.worktime}\n\t\t\t\t\t\t\tonChange={(e) => props.setWorktime(e.target.value)}\n\t\t\t\t\t\t\tlabel=\"Jornada\"\n\t\t\t\t\t\t\tname=\"worktime\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value={\"Full-Time\"}>Full-Time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={\"Part-Time\"}>Part-Time</MenuItem>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<FormControl required className=\"MuiFormControl-fullWidth Mui-MultiSelect\" variant=\"outlined\">\n\t\t\t\t\t\t\t<InputLabel className=\"white-bg padding-sides-5\" htmlFor=\"select-multiple-chip\" id=\"role-chip-multiple-label\">Rol</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tid=\"role-chip-multiple\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={props.roleName}\n\t\t\t\t\t\t\tonChange={(e) => props.setRoleName(e.target.value)}\n\t\t\t\t\t\t\tinput={<OutlinedInput id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={(selected) => (\n\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t{selected.map((value) => (\n\t\t\t\t\t\t\t\t\t<Chip key={value} label={value} className=\"\" />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{names.map((name) => (\n\t\t\t\t\t\t\t\t<MenuItem key={name} value={name} >\n\t\t\t\t\t\t\t\t\t<Checkbox color=\"primary\" checked={props.roleName.indexOf(name) > -1} />\n\t\t\t\t\t\t\t\t\t<ListItemText primary={name} />\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<FormControl className={\"MuiFormControl-fullWidth custom-from-password \"+props.passwordClass} variant=\"outlined\">\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n\t\t\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\n\t\t\t\t\t\t\t\ttype={props.showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\tvalue={props.password}\n\t\t\t\t\t\t\t\tonChange={(e) => props.setPassword(e.target.value)}\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tendAdornment={\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\n\t\t\t\t\t\t\t\t\tonClick={props.handleClickShowPassword}\n\t\t\t\t\t\t\t\t\tonMouseDown={props.handleMouseDownPassword}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{props.showPassword ? <Visibility /> : <VisibilityOff />}\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabelWidth={70}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<span className=\"mdl-navigation__link\">\n\t\t\t\t\t\t\t<Checkbox color=\"primary\" checked={props.disabled} onClick={(e) => handleDisabledChange(e)} />\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<span className=\"quotation-product-name quotation-product-labor-price\">{t('users.globalUserForm.disabledCheckButtonP1')} <strong>{t('users.globalUserForm.disabledCheckButtonP2')}</strong>?</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} container\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t\talignItems=\"center\">\n\t\t\t\t\t\t<div className={classes.wrapper}>\n\t\t\t\t\t\t\t<Button id=\"user-save\" disabled={loading} onClick={handleSubmitButtonClick} type=\"submit\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\t\t{t('globalText.save')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\t\n\t\t\t\t</Grid>\n\t\t\t</form>\n\t\t \t\n\t  \t</React.Fragment>\n    );\n}\n\nconst structuredSelector = createStructuredSelector({});\nconst mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(UserForm)\n"]},"metadata":{},"sourceType":"module"}