{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/site/NavLinks.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { canManage } from 'redux-cancan';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport Badge from '@material-ui/core/Badge';\nimport { withRouter } from 'react-router-dom';\nimport LanguageSwitcher from 'components/LanguageSwitcher';\n\nfunction NavLinks(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      notificationsNumber = _useState2[0],\n      setNotificationsNumber = _useState2[1];\n\n  useEffect(function () {\n    if (props.unread_notifications) {\n      setNotificationsNumber(props.unread_notifications.length);\n    }\n  }, [props.unread_notifications]);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(LanguageSwitcher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    key: \"notifications\",\n    to: \"/notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, notificationsNumber && /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: notificationsNumber,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsNoneIcon, {\n    className: \"mdl-navigation__link_tertiary\",\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  })) || /*#__PURE__*/React.createElement(NotificationsNoneIcon, {\n    className: \"mdl-navigation__link_tertiary\",\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }))), document.getElementById('nav-links'));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default withRouter(connect(structuredSelector, mapDispatchToProps)(NavLinks));","map":{"version":3,"sources":["/usr/src/app/javascript/components/site/NavLinks.js"],"names":["React","useState","useEffect","ReactDOM","PropTypes","connect","createStructuredSelector","BrowserRouter","Switch","Route","Link","canManage","NotificationsNoneIcon","Badge","withRouter","LanguageSwitcher","NavLinks","props","notificationsNumber","setNotificationsNumber","unread_notifications","length","createPortal","document","getElementById","structuredSelector","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,IAAvC,QAAmD,kBAAnD;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEvB,kBAAsDhB,QAAQ,CAAC,EAAD,CAA9D;AAAA;AAAA,MAAOiB,mBAAP;AAAA,MAA4BC,sBAA5B;;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAGe,KAAK,CAACG,oBAAT,EAA8B;AAC7BD,MAAAA,sBAAsB,CAACF,KAAK,CAACG,oBAAN,CAA2BC,MAA5B,CAAtB;AACA;AACD,GAJQ,EAIN,CAACJ,KAAK,CAACG,oBAAP,CAJM,CAAT;AAQA,sBAAOjB,QAAQ,CAACmB,YAAT,eACN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEC,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAC,eAAV;AAA0B,IAAA,EAAE,EAAC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,mBAAmB,iBACpB,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEA,mBAArB;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAC,+BAAjC;AAAkE,IAAA,QAAQ,EAAC,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADC,iBAKD,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAC,+BAAjC;AAAkE,IAAA,QAAQ,EAAC,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CAFD,CADM,EAaNK,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAbM,CAAP;AAeA;;AACC,IAAMC,kBAAkB,GAAGnB,wBAAwB,CAAC,EAAD,CAAnD;AACA,IAAMoB,kBAAkB,GAAG,EAA3B;AACA,eAAeZ,UAAU,CAACT,OAAO,CAACoB,kBAAD,EAAqBC,kBAArB,CAAP,CAAgDV,QAAhD,CAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom'\nimport { canManage } from 'redux-cancan';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport Badge from '@material-ui/core/Badge';\nimport { withRouter } from 'react-router-dom';\nimport LanguageSwitcher from 'components/LanguageSwitcher'\n\n\nfunction NavLinks(props){\n\t\n\tconst [notificationsNumber, setNotificationsNumber] = useState(\"\");\n\t\n\tuseEffect(() => {\n\t\tif(props.unread_notifications){\n\t\t\tsetNotificationsNumber(props.unread_notifications.length)\n\t\t}\n\t}, [props.unread_notifications]);\n\t\n\t  \n\n\treturn ReactDOM.createPortal(\n\t\t<React.Fragment>\n      <LanguageSwitcher />\n\t\t\t<Link key=\"notifications\" to=\"/notifications\">\n\t\t\t\t{notificationsNumber &&\n\t\t\t\t<Badge badgeContent={notificationsNumber} color=\"primary\">\n\t\t\t\t\t<NotificationsNoneIcon className=\"mdl-navigation__link_tertiary\"  fontSize=\"large\" />\n\t\t\t\t</Badge>\n\t\t\t\t||\n\t\t\t\t<NotificationsNoneIcon className=\"mdl-navigation__link_tertiary\"  fontSize=\"large\" />\n\t\t\t\t}\n\t\t\t</Link>\n\t\t</React.Fragment>\n\t,document.getElementById('nav-links')\n\t)\n}\n  const structuredSelector = createStructuredSelector({});\n  const mapDispatchToProps = {};\n  export default withRouter(connect(structuredSelector, mapDispatchToProps)(NavLinks));\n  \n"]},"metadata":{},"sourceType":"module"}