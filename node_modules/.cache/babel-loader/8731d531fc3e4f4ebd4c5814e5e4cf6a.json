{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/AddSparePartDialog.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MaterialTable from 'react-data-table-component';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { flash_alert } from 'components/App';\n\nfunction AddSparePartDialog(props) {\n  var _React$createElement;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quantity = _useState4[0],\n      setQuantity = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      requested_quantity = _useState6[0],\n      setRequestedQuantity = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      from = _useState8[0],\n      setFrom = _useState8[1];\n\n  useEffect(function () {\n    setQuantity(props.quantity);\n  }, [props.quantity]);\n  useEffect(function () {\n    setRequestedQuantity(props.requested_quantity);\n  }, [props.requested_quantity]);\n  useEffect(function () {\n    setFrom(props.from);\n\n    if (props.from == \"request\") {\n      setQuantity(props.requested_quantity);\n    }\n  }, [props.from]);\n\n  function handleClickOpen(e) {\n    e.preventDefault();\n    setOpen(true);\n  }\n\n  function handleClose(e) {\n    e.preventDefault();\n    setOpen(false);\n  }\n\n  function handleAddSparePart(_x) {\n    return _handleAddSparePart.apply(this, arguments);\n  }\n\n  function _handleAddSparePart() {\n    _handleAddSparePart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"agregando productos al cliente\");\n\n              if (!(props.selectedSparePartsRows.length > 0)) {\n                _context.next = 10;\n                break;\n              }\n\n              console.log(props.selectedSparePartsRows);\n              body = new FormData();\n              body.set('customer_product_id', props.customer_product_id);\n              body.set('status', props.status);\n              body.set('products', props.selectedSparePartsRows.map(function (product) {\n                return product.id;\n              }));\n              return _context.abrupt(\"return\", axios.post(\"/api/v1/quotations/\".concat(props.quotation_id, \"/create_spare_part\"), body, {\n                headers: props.headers\n              }).then(function (response) {\n                flash_alert(\"\", t('services.serviceSparePartsRequest.flashAlert.addSpareParts'), \"success\");\n                props.handleClear();\n                props.callbacks();\n                setOpen(false);\n              })[\"catch\"](function (e) {\n                console.log(e.response.data);\n\n                if (e.response.data) {\n                  flash_alert(t('globalText.error'), e.response.data[0][1], \"danger\");\n                }\n              }));\n\n            case 10:\n              flash_alert(\"\", t('services.serviceSparePartsRequest.flashAlert.requestSparepart'), \"error\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleAddSparePart.apply(this, arguments);\n  }\n\n  function handleQuantity(e) {\n    if (e.target.value < 1 || e.target.value > 99) {\n      flash_alert(t('globalText.error'), t('services.serviceSparePartsRequest.flashAlert.quantityAlert'), \"danger\");\n    } else {\n      setQuantity(e.target.value);\n      setRequestedQuantity(e.target.value);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"#\",\n    id: \"addspareparts_\" + props.customer_id,\n    className: \"mdl-navigation__link brand-primary-link sparepart-edit-link  mg-r-15\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons material-icons-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 167\n    }\n  }, \"add\"), \" \", t('services.quotes.detailsTab.addSpareParts'), \" \"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    fullWidth: true,\n    maxWidth: \"lg\",\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    className: \"add-sparepart-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Agregar refaccion a \".concat(props.name, \" \").concat(props.tnr)), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    display: props.displayProducTable,\n    p: 0,\n    m: 0,\n    bgcolor: \"background.paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: \"white-bg padding-sides-5 table-search-label\",\n    htmlFor: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, t('globalText.filterfor')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"search\",\n    type: \"text\",\n    className: \"table-search-input\",\n    value: props.filterText,\n    onChange: props.changeFilterText,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      className: \"table-search-end\",\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: props.handleClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 42\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    display: props.displayProducTable,\n    p: 0,\n    m: 0,\n    bgcolor: \"background.paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    id: \"add-customer-product\",\n    onClick: function onClick(e) {\n      return handleAddSparePart();\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, t('services.serviceSparePartsRequest.addSparePartButton'))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    display: props.displayProducTable,\n    p: 0,\n    m: 0,\n    bgcolor: \"background.paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, (_React$createElement = {\n    noHeader: true,\n    columns: props.products_columns,\n    data: props.products,\n    progressPending: props.userLoading,\n    progressComponent: /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 75,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 52\n      }\n    }),\n    pagination: true,\n    paginationServer: true,\n    responsive: true,\n    onChangeRowsPerPage: props.handleProductsPerRowsChange,\n    onChangePage: props.handleProductsPageChange,\n    onSelectedRowsChange: props.handleProductRowChange,\n    paginationTotalRows: props.total,\n    highlightOnHover: true,\n    striped: true,\n    selectableRows: true,\n    selectableRowsComponent: Checkbox,\n    selectableRowsComponentProps: {\n      className: \"product-checkbox\",\n      color: \"primary\"\n    },\n    contextMessage: {\n      singular: 'producto',\n      plural: 'productos',\n      message: 'seleccionados'\n    }\n  }, _defineProperty(_React$createElement, \"highlightOnHover\", true), _defineProperty(_React$createElement, \"striped\", true), _defineProperty(_React$createElement, \"noDataComponent\", t('globalText.NoDataComponent')), _defineProperty(_React$createElement, \"paginationComponentOptions\", {\n    rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n    rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n    noRowsPerPage: false,\n    selectAllRowsItem: false,\n    selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n  }), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 29\n  }), _React$createElement))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick(e) {\n      return handleClose(e);\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, t('services.serviceSparePartsRequest.close')), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick(e) {\n      return handleAddSparePart();\n    },\n    id: \"product-update\",\n    variant: \"contained\",\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, t('services.serviceSparePartsRequest.addSparePartButton')))));\n}\n\nvar structuredSelector = createStructuredSelector({\n  customers: function customers(state) {\n    return state.customers;\n  }\n});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(AddSparePartDialog);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/AddSparePartDialog.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","TextField","Grid","FormControl","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Link","Checkbox","FormControlLabel","CircularProgress","MaterialTable","Box","InputLabel","OutlinedInput","InputAdornment","IconButton","Close","useTranslation","i18next","flash_alert","AddSparePartDialog","props","t","open","setOpen","quantity","setQuantity","requested_quantity","setRequestedQuantity","from","setFrom","handleClickOpen","e","preventDefault","handleClose","handleAddSparePart","console","log","selectedSparePartsRows","length","body","FormData","set","customer_product_id","status","map","product","id","post","quotation_id","headers","then","response","handleClear","callbacks","data","handleQuantity","target","value","customer_id","name","tnr","displayProducTable","filterText","changeFilterText","products_columns","products","userLoading","handleProductsPerRowsChange","handleProductsPageChange","handleProductRowChange","total","className","color","singular","plural","message","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","structuredSelector","customers","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MaterialTable from 'react-data-table-component';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nimport { flash_alert } from 'components/App';\n\nfunction AddSparePartDialog(props){\n    const {t} = useTranslation();\n\tconst [open, setOpen] = useState(false);\n\n    const [quantity, setQuantity] = useState(\"\");\n    const [requested_quantity, setRequestedQuantity] = useState(\"\");\n    const [from, setFrom] = useState(\"\");\n    \n    useEffect(() => {\n\t\tsetQuantity(props.quantity)\n\t},[props.quantity]);\n\n\tuseEffect(() => {\n\t\tsetRequestedQuantity(props.requested_quantity)\n\t},[props.requested_quantity]);\n\n\tuseEffect(() => {\n\t\tsetFrom(props.from)\n\t\tif(props.from == \"request\"){\n\t\t\tsetQuantity(props.requested_quantity)\n\t\t}\n\t},[props.from]);\n\n\n\tfunction handleClickOpen(e){\n\t\te.preventDefault();\n\t\tsetOpen(true);\n\t}\n\n\tfunction handleClose(e){\n\t\te.preventDefault();\n\t\tsetOpen(false);\n\t}\n\n\tasync  function handleAddSparePart(e){\n        console.log(\"agregando productos al cliente\");\n        if(props.selectedSparePartsRows.length > 0){\n            console.log(props.selectedSparePartsRows)\n            var body = new FormData();\n\t\t\t\n\t\t\tbody.set('customer_product_id', props.customer_product_id);\n            body.set('status', props.status);\n            body.set('products', props.selectedSparePartsRows.map(function(product) {\n                return product.id;\n            }))\n            return axios.post(`/api/v1/quotations/${props.quotation_id}/create_spare_part`, body, { headers: props.headers})\n                .then(response => {\n                    flash_alert(\"\", t('services.serviceSparePartsRequest.flashAlert.addSpareParts') , \"success\")\n\t\t\t\t\tprops.handleClear();\n\t\t\t\t\tprops.callbacks();\n\t\t\t\t\tsetOpen(false);\n                })\n            .catch(e => {\n                console.log(e.response.data);\n                if(e.response.data){\n                    flash_alert(t('globalText.error'), e.response.data[0][1], \"danger\")\n                    \n                }\n            });\n        }else{\n            flash_alert(\"\", t('services.serviceSparePartsRequest.flashAlert.requestSparepart') , \"error\")\n        }\n    }\n\t\n\tfunction handleQuantity(e){\n\t\tif(e.target.value < 1 || e.target.value > 99){\n\t\t\tflash_alert(t('globalText.error'), t('services.serviceSparePartsRequest.flashAlert.quantityAlert'), \"danger\")\n\t\t}\n\t\telse{\n\t\t\tsetQuantity(e.target.value)\n\t\t\tsetRequestedQuantity(e.target.value)\n\t\t}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t  <Link href=\"#\" id={\"addspareparts_\"+props.customer_id} className=\"mdl-navigation__link brand-primary-link sparepart-edit-link  mg-r-15\" onClick={handleClickOpen}><i className=\"material-icons material-icons-20\">add</i> {t('services.quotes.detailsTab.addSpareParts')} </Link>\n\t\t  <Dialog\n\t\t\topen={open}\n\t\t\tfullWidth={true}\n            maxWidth={\"lg\"}\n\t\t    onClose={handleClose}\n\t\t    aria-labelledby=\"alert-dialog-title\"\n\t\t    aria-describedby=\"alert-dialog-description\"\n\t\t  >\n\t\t    <DialogTitle id=\"alert-dialog-title\" className=\"add-sparepart-dialog-title\">{`Agregar refaccion a ${props.name} ${props.tnr}`}</DialogTitle>\n\t\t    <DialogContent>\n\t\t      <DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t<Grid container spacing={1}>\n                    <Grid item xs={12} sm={6}>\n                        <Box component=\"span\" display={props.displayProducTable} p={0} m={0} bgcolor=\"background.paper\">\n                        <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                            <FormControl variant=\"outlined\" fullWidth>\n                            <InputLabel className=\"white-bg padding-sides-5 table-search-label\"  htmlFor=\"search\">{t('globalText.filterfor')}</InputLabel>\n                            <OutlinedInput\n                                id=\"search\"\n                                type= \"text\"\n                                className=\"table-search-input\"\n                                value={props.filterText}\n                                onChange={props.changeFilterText}\n                                endAdornment={\n                                    <InputAdornment className=\"table-search-end\" position=\"end\" >\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={props.handleClear}\n                                            >\n                                        {<Close />}\n                                        </IconButton>\n                                    \n                                    </InputAdornment>\n                                }\n                                />\n                            </FormControl>\n                        </Grid>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Grid container spacing={1} direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n                            <Box component=\"span\" display={props.displayProducTable} p={0} m={0} bgcolor=\"background.paper\">\n                                <Button variant=\"contained\" id=\"add-customer-product\" onClick={(e) => handleAddSparePart()} color=\"primary\">\n                                    {t('services.serviceSparePartsRequest.addSparePartButton')}\n                                </Button>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    \n                    <Grid item xs={12}>\n                        <Box component=\"span\" display={props.displayProducTable} p={0} m={0} bgcolor=\"background.paper\">\n                            <MaterialTable\n                                noHeader={true}\n                                columns={props.products_columns}\n                                data={props.products}\n                                progressPending={props.userLoading}\n                                progressComponent={<CircularProgress size={75} />}\n                                pagination\n                                paginationServer\n                                responsive={true}\n                                onChangeRowsPerPage={props.handleProductsPerRowsChange}\n                                onChangePage={props.handleProductsPageChange}\n                                onSelectedRowsChange={props.handleProductRowChange}\n                                paginationTotalRows={props.total}\n                                highlightOnHover={true}\n                                striped={true}\n                                selectableRows\n                                selectableRowsComponent={Checkbox}\n                                selectableRowsComponentProps={{ className: \"product-checkbox\", color: \"primary\" }}\n                                contextMessage={{ singular: 'producto', plural: 'productos', message: 'seleccionados' }}\n                                highlightOnHover={true}\n                                striped={true}\n                                noDataComponent={t('globalText.NoDataComponent')}\n                                paginationComponentOptions={{rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n                            />\n                        \n                        </Box>\n                    </Grid>\n\t\t\t\t</Grid>  \n\t\t      </DialogContentText>\n\t\t    </DialogContent>\n\t\t    <DialogActions>\n\t\t      <Button onClick={(e) => handleClose(e)} color=\"primary\">\n                {t('services.serviceSparePartsRequest.close')}\n\t\t      </Button>\n\t\t      <Button onClick={(e) => handleAddSparePart() } id=\"product-update\"  variant=\"contained\" color=\"primary\" autoFocus>\n                {t('services.serviceSparePartsRequest.addSparePartButton')}\n\t\t      </Button>\n\t\t    </DialogActions>\n\t\t  </Dialog>\n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({\n  customers: state => state.customers\n});\nconst mapDispatchToProps = {};\n\nexport default connect(structuredSelector, mapDispatchToProps)(AddSparePartDialog)\n"]},"metadata":{},"sourceType":"module"}