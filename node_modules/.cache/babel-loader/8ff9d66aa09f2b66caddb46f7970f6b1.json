{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/projectCustomers/ProjectDetail.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useParams } from \"react-router-dom\";\nimport { Paper, Accordion, AccordionDetails, AccordionSummary, Grid } from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ProjectUnitRealStates from \"components/projectCustomers/ProjectUnitRealStates\";\nimport { useTranslation } from 'react-i18next';\n\nfunction ProjectDetail(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var setLoading = props.setLoading;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      project = _useState2[0],\n      setProject = _useState2[1];\n\n  var _useParams = useParams(),\n      customer_id = _useParams.id,\n      projectId = _useParams.project_id;\n\n  function fetchProject() {\n    return _fetchProject.apply(this, arguments);\n  }\n\n  function _fetchProject() {\n    _fetchProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/api/v1/projects/\".concat(projectId));\n\n            case 2:\n              response = _context.sent;\n              setProject(response.data);\n              setLoading(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchProject.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    setLoading(true);\n    fetchProject();\n  }, []);\n\n  function Item(_ref) {\n    var title = _ref.title,\n        value = _ref.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"light-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"normal-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, value || \"-\"));\n  }\n\n  var headerItems = [{\n    title: t('globalTables.serviceColumns.customerFullName'),\n    value: \"\".concat(project.contact_name, \" \").concat(project.contact_lastname)\n  }, {\n    title: t('globalTables.serviceColumns.status'),\n    value: project.status\n  }];\n  var bigItems = [{\n    title: t('globalTables.customerColumns.phone'),\n    value: project.contact_cellphone\n  }, {\n    title: t('globalTables.customerColumns.businessName'),\n    value: project.builder_name\n  }, {\n    title: t('globalTables.customerColumns.rfc'),\n    value: project.builder_rut\n  }, {\n    title: t('globalTables.customerColumns.address'),\n    value: project.address_label\n  }, {\n    title: t('globalTables.projectColumns.commune'),\n    value: project.commune\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, project.name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, project.code))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, headerItems.map(function (_ref2, i) {\n    var title = _ref2.title,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: i,\n      item: true,\n      sm: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      title: title,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Accordion, {\n    defaultExpanded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 39\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, t('customer.quoteData'))), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      marginBottom: \"13px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, bigItems.map(function (_ref3, i) {\n    var title = _ref3.title,\n        value = _ref3.value;\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: \"\".concat(title, \"-\").concat(i),\n      item: true,\n      sm: 2,\n      style: {\n        marginBottom: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      title: title,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }));\n  }))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, project.id && /*#__PURE__*/React.createElement(ProjectUnitRealStates, {\n    unitRealStates: project.unit_real_states,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  })));\n}\n\nexport default ProjectDetail;","map":{"version":3,"sources":["/usr/src/app/javascript/components/projectCustomers/ProjectDetail.jsx"],"names":["React","useState","useEffect","axios","useParams","Paper","Accordion","AccordionDetails","AccordionSummary","Grid","ExpandMoreIcon","ProjectUnitRealStates","useTranslation","ProjectDetail","props","t","setLoading","project","setProject","customer_id","id","projectId","project_id","fetchProject","get","response","data","Item","title","value","headerItems","contact_name","contact_lastname","status","bigItems","contact_cellphone","builder_name","builder_rut","address_label","commune","marginBottom","name","code","map","i","unit_real_states"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport axios from 'axios';\nimport {useParams} from \"react-router-dom\";\n\nimport {Paper, Accordion, AccordionDetails, AccordionSummary, Grid} from \"@material-ui/core\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ProjectUnitRealStates from \"components/projectCustomers/ProjectUnitRealStates\";\nimport { useTranslation } from 'react-i18next';\n\nfunction ProjectDetail(props) {\n  const {t} = useTranslation();\n  const {setLoading} = props\n\n  const [project, setProject] = useState({})\n  const {id: customer_id, project_id: projectId} = useParams()\n\n  async function fetchProject() {\n    const response = await axios.get(`/api/v1/projects/${projectId}`)\n    setProject(response.data)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    fetchProject()\n  }, [])\n\n\n  function Item({title, value}) {\n    return (\n      <>\n        <p className=\"light-label\">\n          {title}\n        </p>\n        <p className=\"normal-label\">\n          {value || \"-\"}\n        </p>\n\n      </>\n    )\n\n  }\n\n  const headerItems = [\n    {title: t('globalTables.serviceColumns.customerFullName'), value: `${project.contact_name} ${project.contact_lastname}`},\n    {title: t('globalTables.serviceColumns.status'), value: project.status},\n  ]\n\n  const bigItems = [\n    {title: t('globalTables.customerColumns.phone'), value: project.contact_cellphone},\n    {title: t('globalTables.customerColumns.businessName'), value: project.builder_name},\n    {title: t('globalTables.customerColumns.rfc'), value: project.builder_rut},\n    {title: t('globalTables.customerColumns.address'), value: project.address_label},\n    {title: t('globalTables.projectColumns.commune'), value: project.commune},\n  ]\n\n  return (\n    <>\n      <Paper className=\"custom-paper\">\n        <Grid container style={{marginBottom: \"20px\"}}>\n          <Grid item sm={12} >\n            <h1>\n              <span>{project.name}</span>\n            </h1>\n            <p>{project.code}</p>\n          </Grid>\n        </Grid>\n        <Grid container>\n\n          {\n            headerItems.map(({title, value}, i) => (\n              <Grid key={i} item sm={2}>\n                <Item title={title} value={value} />\n              </Grid>\n            ))\n          }\n        </Grid>\n      </Paper>\n      <br />\n\n\n      <Accordion defaultExpanded>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <h1 className=\"panel-custom-title\">{t('customer.quoteData')}</h1>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Grid container>\n            <Grid container style={{marginBottom: \"13px\"}}>\n              {\n                bigItems.map(({title, value}, i) => (\n                  <Grid key={`${title}-${i}`} item sm={2} style={{marginBottom: \"10px\"}}>\n                    <Item title={title} value={value} />\n                  </Grid>\n                ))\n              }\n            </Grid>\n\n          </Grid>\n\n        </AccordionDetails>\n      </Accordion>\n      <br />\n      <Paper className=\"custom-paper\">\n        {\n          project.id && <ProjectUnitRealStates unitRealStates={project.unit_real_states}/>\n        }\n      </Paper>\n    </>\n  )\n}\n\nexport default ProjectDetail\n"]},"metadata":{},"sourceType":"module"}