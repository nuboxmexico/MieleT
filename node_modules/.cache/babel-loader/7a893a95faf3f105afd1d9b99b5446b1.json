{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/NewService.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport * as CostCenterApi from 'api/cost_center';\nimport WarnIconValidate from 'components/services/common/WarnIconValidate';\nimport CurrencyTextField from '@unicef/material-ui-currency-textfield';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { flash_alert } from 'components/App';\nimport CustomerDetails from 'components/customers/CustomerDetails';\nimport NewScheduleDialog from 'components/services/NewScheduleDialog';\nimport PaymentEmailDialog from 'components/services/PaymentEmailDialog';\nimport ServiceInfoForm from 'components/services/forms/ServiceInfoForm';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { country_names_g } from 'components/customers/CustomerForm';\nimport { headers, money_format, date_event_format, date_format_without_time_and_zone, date_difference_in_hours, site_url, noPaymentsOptions } from 'constants/csrf';\nimport pluralize from 'pluralize';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport ShowCustomer from 'components/customers/ShowCustomer';\nimport { createStyles, makeStyles } from '@material-ui/core/styles'; // Button loading\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button'; // Toggle buttons\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'; // Dates\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from 'date-fns/locale/es';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'; // Payment Methods\n\nimport PaymentMethods from 'components/payments/PaymentMethods';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport i18next from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { CURRENCY_SYMBOLS, DECIMAL_PLACES } from 'constants/currency';\nimport { serviceTypeLabels, serviceTypeSubcategories, requestedLabels } from 'constants/services'; // const channels = ['Teléfono', 'App Clientes', 'Web', 'Redes sociales', 'Correo', 'Partners B2B', 'eCommerce']\n\nvar product_columns = [{\n  name: i18next.t('globalTables.customerProductColumns.family'),\n  selector: 'product.taxons',\n  hide: 'md',\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, row.product.taxons[0] == null ? '-' : row.product.taxons[0].name);\n  }\n}, {\n  name: i18next.t('globalTables.customerProductColumns.subFamily'),\n  selector: 'product.taxons',\n  hide: 'md',\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, row.product.taxons[1] == null ? '-' : row.product.taxons[1].name);\n  }\n}, {\n  name: i18next.t('globalTables.customerProductColumns.id'),\n  selector: 'serial_id',\n  sortable: true\n}, {\n  name: i18next.t('globalTables.customerProductColumns.tnr'),\n  selector: 'product.tnr',\n  sortable: true,\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, row.product.tnr == '' ? '-' : row.product.tnr);\n  }\n}, {\n  name: i18next.t('globalTables.customerProductColumns.name'),\n  selector: 'product.name',\n  sortable: true,\n  hide: 'md',\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, row.product.name == '' ? '-' : row.product.name);\n  }\n}, {\n  name: i18next.t('globalTables.customerProductColumns.instalationDate'),\n  selector: 'instalation_date',\n  sortable: true,\n  hide: 'md',\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, row.reinstalation_date == null ? row.instalation_date == null ? 'No' : date_format_without_time_and_zone(row.instalation_date) : date_format_without_time_and_zone(row.reinstalation_date) + ' reinstalado');\n  }\n}, {\n  name: i18next.t('globalTables.customerProductColumns.discontinuedRow.discontinued'),\n  selector: 'discontinued',\n  sortable: true,\n  hide: 'md',\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, row.discontinued ? 'Si' : 'No');\n  }\n}, {\n  name: i18next.t('globalTables.customerProductColumns.warrantyRow.warranty'),\n  selector: 'warranty',\n  sortable: true,\n  hide: 'md',\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, row.warranty == null ? 'No' : 'Válida ' + date_format_without_time_and_zone(row.warranty));\n  }\n}, {\n  name: i18next.t('globalTables.customerProductColumns.policy'),\n  selector: 'policy',\n  sortable: true,\n  hide: 'md'\n}, {\n  name: i18next.t('globalTables.customerProductColumns.status'),\n  selector: 'status',\n  sortable: true,\n  hide: 'md'\n}];\nvar consumable_columns = [{\n  name: i18next.t('globalTables.consumableColumns.tnr'),\n  selector: 'consumable.product.tnr',\n  sortable: true\n}, {\n  name: i18next.t('globalTables.consumableColumns.name'),\n  selector: 'consumable.name',\n  sortable: true,\n  hide: 'sm'\n}, {\n  name: i18next.t('globalTables.consumableColumns.requiredQuantity'),\n  selector: 'total_boxes_without_events',\n  sortable: true\n}];\n\nfunction NewService(props) {\n  var _this2 = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var useStyles = makeStyles(function (theme) {\n    return createStyles({\n      previewChip: {\n        minWidth: 160,\n        maxWidth: 210\n      },\n      wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative'\n      },\n      buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12\n      }\n    });\n  });\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      costCenters = _useState2[0],\n      setCostCenters = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCostCenterId = _useState4[0],\n      setSelectedCostCenterId = _useState4[1]; // Customer Info\n\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customerNames = _useState6[0],\n      setCustomerFirstname = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      customerLastname = _useState8[0],\n      setCustomerLastname = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      customerSurname = _useState10[0],\n      setCustomerSurname = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      customerEmail = _useState12[0],\n      setCustomerEmail = _useState12[1]; // Customer\n\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      customer_id = _useState14[0],\n      setCustomerId = _useState14[1]; // Ship Address\n\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      zipcode = _useState16[0],\n      setZipcode = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      state = _useState18[0],\n      setState = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      delegation = _useState20[0],\n      setDelegation = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      colony = _useState22[0],\n      setColony = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      street_type = _useState24[0],\n      setStreettype = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      street_name = _useState26[0],\n      setStreetName = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      ext_number = _useState28[0],\n      setExtNumber = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      int_number = _useState30[0],\n      setIntNumber = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      phone = _useState32[0],\n      setPhone = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      reference = _useState34[0],\n      setReference = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      selectedPerson = _useState36[0],\n      setSelectedPerson = _useState36[1];\n\n  var _useState37 = useState('MX'),\n      _useState38 = _slicedToArray(_useState37, 2),\n      country = _useState38[0],\n      setCountry = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      canShowCurrencyField = _useState40[0],\n      setCanShowCurrencyField = _useState40[1];\n\n  var _useState41 = useState(0.16),\n      _useState42 = _slicedToArray(_useState41, 2),\n      countryIVA = _useState42[0],\n      setCountryIVA = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      rut = _useState44[0],\n      setRut = _useState44[1];\n\n  var _useState45 = useState({}),\n      _useState46 = _slicedToArray(_useState45, 2),\n      administrative_demarcation = _useState46[0],\n      setAdministrativeDemarcation = _useState46[1]; // Bill Address\n\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      zipcode_fn = _useState48[0],\n      setZipcodeFn = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      state_fn = _useState50[0],\n      setStateFn = _useState50[1];\n\n  var _useState51 = useState(''),\n      _useState52 = _slicedToArray(_useState51, 2),\n      delegation_fn = _useState52[0],\n      setDelegationFn = _useState52[1];\n\n  var _useState53 = useState(''),\n      _useState54 = _slicedToArray(_useState53, 2),\n      colony_fn = _useState54[0],\n      setColonyFn = _useState54[1];\n\n  var _useState55 = useState(''),\n      _useState56 = _slicedToArray(_useState55, 2),\n      street_type_fn = _useState56[0],\n      setStreettypeFn = _useState56[1];\n\n  var _useState57 = useState(''),\n      _useState58 = _slicedToArray(_useState57, 2),\n      street_name_fn = _useState58[0],\n      setStreetNameFn = _useState58[1];\n\n  var _useState59 = useState(''),\n      _useState60 = _slicedToArray(_useState59, 2),\n      ext_number_fn = _useState60[0],\n      setExtNumberFn = _useState60[1];\n\n  var _useState61 = useState(''),\n      _useState62 = _slicedToArray(_useState61, 2),\n      int_number_fn = _useState62[0],\n      setIntNumberFn = _useState62[1];\n\n  var _useState63 = useState(''),\n      _useState64 = _slicedToArray(_useState63, 2),\n      phone_fn = _useState64[0],\n      setPhoneFn = _useState64[1];\n\n  var _useState65 = useState({}),\n      _useState66 = _slicedToArray(_useState65, 2),\n      administrative_demarcation_fn = _useState66[0],\n      setAdministrativeDemarcationFn = _useState66[1]; // ADDITIONALS ADDRESS\n\n\n  var _useState67 = useState([]),\n      _useState68 = _slicedToArray(_useState67, 2),\n      additionalsAddresses = _useState68[0],\n      setAdditionalsAddresses = _useState68[1]; // CHECKS\n\n\n  var _useState69 = useState(''),\n      _useState70 = _slicedToArray(_useState69, 2),\n      personCheck = _useState70[0],\n      setPersonCheck = _useState70[1];\n\n  var _useState71 = useState('hidden'),\n      _useState72 = _slicedToArray(_useState71, 2),\n      RUTCheck = _useState72[0],\n      setRUTCheck = _useState72[1];\n\n  var _useState73 = useState(''),\n      _useState74 = _slicedToArray(_useState73, 2),\n      zipcodeCheck = _useState74[0],\n      setZipcodeCheck = _useState74[1];\n\n  var _useState75 = useState(''),\n      _useState76 = _slicedToArray(_useState75, 2),\n      delegationCheck = _useState76[0],\n      setDelegationCheck = _useState76[1];\n\n  var _useState77 = useState('Estado'),\n      _useState78 = _slicedToArray(_useState77, 2),\n      stateLabel = _useState78[0],\n      setStateLabel = _useState78[1];\n\n  var _useState79 = useState(''),\n      _useState80 = _slicedToArray(_useState79, 2),\n      colonyCheck = _useState80[0],\n      setColonyCheck = _useState80[1];\n\n  var _useState81 = useState('Número Exterior'),\n      _useState82 = _slicedToArray(_useState81, 2),\n      extNumberLabel = _useState82[0],\n      setExtNumberLabel = _useState82[1];\n\n  var _useState83 = useState('Número Interior'),\n      _useState84 = _slicedToArray(_useState83, 2),\n      intNumberLabel = _useState84[0],\n      setIntNumberLabel = _useState84[1];\n\n  var _useState85 = useState(false),\n      _useState86 = _slicedToArray(_useState85, 2),\n      country_change = _useState86[0],\n      setCountryChange = _useState86[1]; // Additional Info\n\n\n  var _useState87 = useState(false),\n      _useState88 = _slicedToArray(_useState87, 2),\n      redirect = _useState88[0],\n      setRedirect = _useState88[1];\n\n  var _useState89 = useState(false),\n      _useState90 = _slicedToArray(_useState89, 2),\n      firstLoad = _useState90[0],\n      setFirstLoad = _useState90[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1]; // Service info\n\n\n  var _useState91 = useState(''),\n      _useState92 = _slicedToArray(_useState91, 2),\n      serviceID = _useState92[0],\n      setServiceID = _useState92[1];\n\n  var _useState93 = useState(''),\n      _useState94 = _slicedToArray(_useState93, 2),\n      service_type = _useState94[0],\n      setServiceType = _useState94[1];\n\n  var _useState95 = useState(''),\n      _useState96 = _slicedToArray(_useState95, 2),\n      subcategory = _useState96[0],\n      setSubcategory = _useState96[1];\n\n  var _useState97 = useState(''),\n      _useState98 = _slicedToArray(_useState97, 2),\n      requested = _useState98[0],\n      setRequested = _useState98[1];\n\n  var _useState99 = useState(''),\n      _useState100 = _slicedToArray(_useState99, 2),\n      requestChannel = _useState100[0],\n      setRequestChannel = _useState100[1];\n\n  var _useState101 = useState([]),\n      _useState102 = _slicedToArray(_useState101, 2),\n      subcategoryOptions = _useState102[0],\n      setSubcategoryOptions = _useState102[1]; // const [servicePriceData, setServicePriceData] = useState([]);\n\n\n  var _useState103 = useState('new'),\n      _useState104 = _slicedToArray(_useState103, 2),\n      serviceStatus = _useState104[0],\n      setServiceStatus = _useState104[1];\n\n  var _useState105 = useState([]),\n      _useState106 = _slicedToArray(_useState105, 2),\n      serviceFiles = _useState106[0],\n      setServiceFiles = _useState106[1];\n\n  var _useState107 = useState(false),\n      _useState108 = _slicedToArray(_useState107, 2),\n      serviceUpdated = _useState108[0],\n      setServiceUpdated = _useState108[1];\n\n  var _useState109 = useState({\n    start: '',\n    end: ''\n  }),\n      _useState110 = _slicedToArray(_useState109, 2),\n      event = _useState110[0],\n      setEvent = _useState110[1];\n\n  var _useState111 = useState([]),\n      _useState112 = _slicedToArray(_useState111, 2),\n      technicians = _useState112[0],\n      setTechnicians = _useState112[1];\n\n  var _useState113 = useState([]),\n      _useState114 = _slicedToArray(_useState113, 2),\n      policies = _useState114[0],\n      setPolicies = _useState114[1];\n\n  var _useState115 = useState(''),\n      _useState116 = _slicedToArray(_useState115, 2),\n      currentPolicy = _useState116[0],\n      setCurrentPolicy = _useState116[1];\n\n  var _useState117 = useState(''),\n      _useState118 = _slicedToArray(_useState117, 2),\n      selectedPolicies = _useState118[0],\n      setSelectedPoliciesRows = _useState118[1];\n\n  var _useState119 = useState(''),\n      _useState120 = _slicedToArray(_useState119, 2),\n      technicians_ids = _useState120[0],\n      setTechniciansIds = _useState120[1];\n\n  var _useState121 = useState(1),\n      _useState122 = _slicedToArray(_useState121, 2),\n      techinicianNumber = _useState122[0],\n      setTechinicianNumber = _useState122[1];\n\n  var _useState123 = useState(0),\n      _useState124 = _slicedToArray(_useState123, 2),\n      hourAmout = _useState124[0],\n      setHourAmout = _useState124[1];\n\n  var _useState125 = useState(0),\n      _useState126 = _slicedToArray(_useState125, 2),\n      viaticAmout = _useState126[0],\n      setViaticAmout = _useState126[1];\n\n  var _useState127 = useState(0),\n      _useState128 = _slicedToArray(_useState127, 2),\n      feeAmount = _useState128[0],\n      setFeeAmount = _useState128[1];\n\n  var _useState129 = useState(null),\n      _useState130 = _slicedToArray(_useState129, 2),\n      oldFeeAmount = _useState130[0],\n      setOldFeeAmount = _useState130[1];\n\n  var _useState131 = useState(null),\n      _useState132 = _slicedToArray(_useState131, 2),\n      oldViaticAmount = _useState132[0],\n      setOldViaticAmount = _useState132[1];\n\n  var _useState133 = useState(null),\n      _useState134 = _slicedToArray(_useState133, 2),\n      oldLaborAmount = _useState134[0],\n      setOldLaborAmount = _useState134[1];\n\n  var _useState135 = useState(0),\n      _useState136 = _slicedToArray(_useState135, 2),\n      feeAmountIncrement = _useState136[0],\n      setFeeAmountIncrement = _useState136[1];\n\n  var _useState137 = useState(0),\n      _useState138 = _slicedToArray(_useState137, 2),\n      consumableAmount = _useState138[0],\n      setConsumableAmount = _useState138[1];\n\n  var _useState139 = useState(0),\n      _useState140 = _slicedToArray(_useState139, 2),\n      laborAmount = _useState140[0],\n      setLaborAmount = _useState140[1];\n\n  var _useState141 = useState(''),\n      _useState142 = _slicedToArray(_useState141, 2),\n      totalhours = _useState142[0],\n      setTotalhours = _useState142[1];\n\n  var _useState143 = useState(0),\n      _useState144 = _slicedToArray(_useState143, 2),\n      ivaAmount = _useState144[0],\n      setIVAAmount = _useState144[1];\n\n  var _useState145 = useState(0),\n      _useState146 = _slicedToArray(_useState145, 2),\n      subtotalAmount = _useState146[0],\n      setSubtotalAmount = _useState146[1];\n\n  var _useState147 = useState(0),\n      _useState148 = _slicedToArray(_useState147, 2),\n      totalAmount = _useState148[0],\n      setTotalAmount = _useState148[1];\n\n  var _useState149 = useState(false),\n      _useState150 = _slicedToArray(_useState149, 2),\n      noPaymentCheck = _useState150[0],\n      setNoPaymentCheck = _useState150[1];\n\n  var _useState151 = useState(''),\n      _useState152 = _slicedToArray(_useState151, 2),\n      noPaymentOption = _useState152[0],\n      setNoPaymentOption = _useState152[1];\n\n  var _React$useState3 = React.useState(new Date()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedPaymentDate = _React$useState4[0],\n      setSelectedPaymentDate = _React$useState4[1];\n\n  var _useState153 = useState([]),\n      _useState154 = _slicedToArray(_useState153, 2),\n      paymentData = _useState154[0],\n      setPaymentData = _useState154[1];\n\n  var _useState155 = useState(''),\n      _useState156 = _slicedToArray(_useState155, 2),\n      paymentLink = _useState156[0],\n      setPaymentLink = _useState156[1];\n\n  var _useState157 = useState(false),\n      _useState158 = _slicedToArray(_useState157, 2),\n      paymentLinkBoolean = _useState158[0],\n      setPaymentLinkBoolean = _useState158[1];\n\n  var _useState159 = useState('app_web'),\n      _useState160 = _slicedToArray(_useState159, 2),\n      from = _useState160[0],\n      setFrom = _useState160[1]; // Distributor\n\n\n  var _useState161 = useState(''),\n      _useState162 = _slicedToArray(_useState161, 2),\n      distributorName = _useState162[0],\n      setDistributorName = _useState162[1];\n\n  var _useState163 = useState(''),\n      _useState164 = _slicedToArray(_useState163, 2),\n      distributorEmail = _useState164[0],\n      setDistributorEmail = _useState164[1];\n\n  var _useState165 = useState('hidden'),\n      _useState166 = _slicedToArray(_useState165, 2),\n      distributorCheck = _useState166[0],\n      setDistributorCheck = _useState166[1]; // Products\n\n\n  var _useState167 = useState([]),\n      _useState168 = _slicedToArray(_useState167, 2),\n      products = _useState168[0],\n      setProducts = _useState168[1];\n\n  var _useState169 = useState([]),\n      _useState170 = _slicedToArray(_useState169, 2),\n      selectedProductRows = _useState170[0],\n      setSelectedProductRows = _useState170[1];\n\n  var _useState171 = useState(''),\n      _useState172 = _slicedToArray(_useState171, 2),\n      background = _useState172[0],\n      setBackground = _useState172[1];\n\n  var _useState173 = useState([]),\n      _useState174 = _slicedToArray(_useState173, 2),\n      files = _useState174[0],\n      setFiles = _useState174[1]; // Comsumable\n\n\n  var _useState175 = useState([]),\n      _useState176 = _slicedToArray(_useState175, 2),\n      consumables = _useState176[0],\n      setConsumables = _useState176[1];\n\n  var _useState177 = useState([]),\n      _useState178 = _slicedToArray(_useState177, 2),\n      selectedConsumablesRows = _useState178[0],\n      setSelectedConsumablesRows = _useState178[1]; // Form validation\n\n\n  var _useState179 = useState(''),\n      _useState180 = _slicedToArray(_useState179, 2),\n      service_typeErrorMessage = _useState180[0],\n      setServiceTypeErrorMessage = _useState180[1];\n\n  var _useState181 = useState(''),\n      _useState182 = _slicedToArray(_useState181, 2),\n      subcategoryErrorMessage = _useState182[0],\n      setSubcategoryErrorMessage = _useState182[1];\n\n  var _useState183 = useState(''),\n      _useState184 = _slicedToArray(_useState183, 2),\n      requestedErrorMessage = _useState184[0],\n      setRequestedErrorMessage = _useState184[1];\n\n  var _useState185 = useState(''),\n      _useState186 = _slicedToArray(_useState185, 2),\n      requestChannelErrorMessage = _useState186[0],\n      setRequestChannelErrorMessage = _useState186[1];\n\n  var _useState187 = useState(''),\n      _useState188 = _slicedToArray(_useState187, 2),\n      backgroundErrorMessage = _useState188[0],\n      setBackgroundErrorMessage = _useState188[1];\n\n  var _useState189 = useState(''),\n      _useState190 = _slicedToArray(_useState189, 2),\n      eventErrorMessage = _useState190[0],\n      setEventErrorMessage = _useState190[1];\n\n  var _useState191 = useState(''),\n      _useState192 = _slicedToArray(_useState191, 2),\n      noPaymenErrorMessage = _useState192[0],\n      setNoPaymenErrorMessage = _useState192[1];\n\n  var _useState193 = useState(''),\n      _useState194 = _slicedToArray(_useState193, 2),\n      selectedPaymentDateErrorMessage = _useState194[0],\n      setSelectedPaymentDateErrorMessage = _useState194[1]; // Dirección checks\n\n\n  var _React$useState5 = React.useState('principal'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      checked = _React$useState6[0],\n      setChecked = _React$useState6[1];\n\n  var handleToggle = function handleToggle(value) {\n    var zipcode_t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var administrative_demarcation_t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return function () {\n      if (value == 'principal') {\n        fetchServiceTotal(country, selectedProductRows.map(function (product) {\n          return product.id;\n        }), zipcode, administrative_demarcation === null || administrative_demarcation === void 0 ? void 0 : administrative_demarcation.admin_name_3, true);\n      } else {\n        fetchServiceTotal(country, selectedProductRows.map(function (product) {\n          return product.id;\n        }), zipcode_t, administrative_demarcation_t === null || administrative_demarcation_t === void 0 ? void 0 : administrative_demarcation_t.admin_name_3, true);\n      }\n\n      setChecked(value);\n    };\n  };\n\n  var _React$useState7 = React.useState('principal'),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      checkedFN = _React$useState8[0],\n      setCheckedFN = _React$useState8[1];\n\n  var handleToggleFN = function handleToggleFN(value) {\n    return function () {\n      setCheckedFN(value);\n    };\n  }; // Toggle butons\n\n\n  var _React$useState9 = React.useState('online'),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      paymentChannel = _React$useState10[0],\n      setPaymentChannel = _React$useState10[1];\n\n  var _React$useState11 = React.useState('no'),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      invoiceCheck = _React$useState12[0],\n      setInvoiceCheck = _React$useState12[1]; // Change total Dialog\n\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      openTotalDialog = _React$useState14[0],\n      setOpenTotalDialog = _React$useState14[1]; /// ////////////////////////////////////////////////////////////////////\n  // PaymentDialog\n\n\n  var _useState195 = useState(''),\n      _useState196 = _slicedToArray(_useState195, 2),\n      paymentEmailAdditional = _useState196[0],\n      setPaymentEmailAdditional = _useState196[1];\n\n  var _useState197 = useState(false),\n      _useState198 = _slicedToArray(_useState197, 2),\n      isPaymentEmail = _useState198[0],\n      setIsPaymentEmail = _useState198[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      paymentEmailDialog = _React$useState16[0],\n      setPaymentEmailDialog = _React$useState16[1];\n\n  var _useState199 = useState(true),\n      _useState200 = _slicedToArray(_useState199, 2),\n      toggledClearProductsRows = _useState200[0],\n      setoggledClearProductsRows = _useState200[1];\n\n  var _useState201 = useState(false),\n      _useState202 = _slicedToArray(_useState201, 2),\n      productTableDisabled = _useState202[0],\n      setProductTableDisabled = _useState202[1];\n\n  var handleClickOpenTotalDialog = function handleClickOpenTotalDialog() {\n    setOpenTotalDialog(true);\n  };\n\n  var handleCloseTotalDialog = function handleCloseTotalDialog() {\n    setOpenTotalDialog(false);\n  };\n\n  var handleFeeChange = function handleFeeChange(event) {\n    setFeeAmount(Number(event.target.value.split(',').join('')));\n  }; /// ////////////////////////////////////////////////////////////////////\n  // Efects\n  /// ///////////////////////////////////////////////////////////////////\n\n\n  useEffect(function () {\n    //console.log({'requested': requestedLabels('pt')})\n    fetchServiceTotal(country, selectedProductRows.map(function (product) {\n      return product.id;\n    }), zipcode, administrative_demarcation === null || administrative_demarcation === void 0 ? void 0 : administrative_demarcation.admin_name_3, true, false, null, true);\n  }, [feeAmount, laborAmount, viaticAmout, service_type]);\n  useEffect(function () {\n    var params = new URLSearchParams(window.location.search);\n\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var costCentersFetch, userId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return CostCenterApi.getAllCostCenters();\n\n              case 2:\n                costCentersFetch = _context.sent;\n                setCostCenters(costCentersFetch.data);\n                userId = props.match.params.id;\n                return _context.abrupt(\"return\", fetch(\"/api/v1/customers/\".concat(userId)).then(function (response) {\n                  return response.json();\n                }).then(function (json) {\n                  console.log(json);\n                  setCustomerId(json.data.id);\n                  setCustomerFirstname(json.data.names);\n                  setCustomerLastname(json.data.lastname);\n                  setCustomerSurname(json.data.surname);\n                  setCustomerEmail(json.data.email);\n                  setZipcode(json.data.zipcode);\n                  setState(json.data.state);\n                  setDelegation(json.data.delegation);\n                  setColony(json.data.colony);\n                  setStreettype(json.data.street_type);\n                  setStreetName(json.data.street_name);\n                  setExtNumber(json.data.ext_number);\n                  setIntNumber(json.data.int_number);\n                  setPhone(json.data.phone);\n                  setReference(json.data.reference);\n                  setSelectedPerson(json.data.person_type);\n                  setZipcodeFn(json.data.zipcode_fn);\n                  setSelectedCostCenterId(json.data.cost_center_id);\n                  setStateFn(json.data.state_fn);\n                  setDelegationFn(json.data.delegation_fn);\n                  setColonyFn(json.data.colony_fn);\n                  setStreettypeFn(json.data.street_type_fn);\n                  setStreetNameFn(json.data.street_name_fn);\n                  setExtNumberFn(json.data.ext_number_fn);\n                  setIntNumberFn(json.data.int_number_fn);\n                  setPhoneFn(json.data.phone_fn);\n\n                  if (json.data.country != null) {\n                    setCountry(json.data.country.iso);\n                    setCountryChange(true);\n                    setCountryIVA(json.data.country.iva);\n                    setCanShowCurrencyField(true);\n                  }\n\n                  setAdministrativeDemarcation(json.data.administrative_demarcation);\n                  setAdministrativeDemarcationFn(json.data.administrative_demarcation_fn);\n                  setRut(json.data.rut);\n\n                  if (json.data.additional_addresses != null) {\n                    setAdditionalsAddresses(json.data.additional_addresses);\n                  } // HANDLRE COUNTRY INFO\n\n\n                  // HANDLRE COUNTRY INFO\n                  handleCountryInputs(json.data.country.iso); // Handle service data\n\n                  // Handle service data\n                  setTotalAmount(json.data.last_service.total_amount);\n                  setSubtotalAmount(json.data.last_service.subtotal_amount);\n                  setFirstLoad(true);\n\n                  if (json.data.last_service.service_type) {\n                    setServiceUpdated(true);\n                    setServiceType(json.data.last_service.service_type);\n                    handleServiceTypeChange(json.data.last_service.service_type);\n                  }\n\n                  if (json.data.last_service.subcategory) {\n                    setSubcategory(json.data.last_service.subcategory);\n                  }\n\n                  setServiceID(json.data.last_service.id);\n                  fetchServicePayments(json.data.last_service.id, 'Servicio');\n                  setRequested(json.data.last_service.requested);\n                  setRequestChannel(json.data.last_service.request_channel);\n                  setTechinicianNumber(json.data.last_service.technicians_number);\n                  setHourAmout(json.data.last_service.hour_amount);\n                  setFeeAmount(json.data.last_service.fee_amount);\n                  setTotalhours(json.data.last_service.total_hours);\n                  setDistributorName(json.data.last_service.distributor_name);\n                  setDistributorEmail(json.data.last_service.distributor_email);\n                  setServiceStatus(json.data.last_service.status);\n\n                  if (json.data.last_service.requested) {\n                    setDistributorCheck(json.data.last_service.requested != 'Cliente directo' ? '' : 'hidden');\n                  }\n\n                  setSelectedProductRows(json.data.last_service.customer_products);\n                  setBackground(json.data.last_service.background);\n                  setNoPaymentCheck(json.data.last_service.no_payment);\n                  setPaymentChannel(json.data.last_service.payment_channel);\n                  setSelectedPaymentDate(json.data.last_service.payment_date);\n                  setNoPaymentOption(json.data.last_service.no_payment_reason);\n                  setInvoiceCheck(json.data.last_service.invoice ? 'si' : 'no');\n\n                  if (params.has('products')) {\n                    var test = params.get('products').split(',');\n                    test.pop();\n                    var aux = [];\n\n                    for (var i in json.data.customer_products) {\n                      if (test.includes(json.data.customer_products[i].id.toString())) {\n                        aux.push(json.data.customer_products[i]);\n                      }\n                    }\n\n                    setProducts(aux);\n                  } else {\n                    setProducts(json.data.customer_products);\n                  }\n\n                  setServiceFiles(json.data.last_service.file_resources); // Polizas\n\n                  // Polizas\n                  console.log('Me traigo las polizas');\n                  setPolicies(json.data.policies);\n\n                  if (json.data.last_service && json.data.last_service.policy_id) {\n                    setSelectedPoliciesRows(json.data.last_service.policy_id);\n                    setCurrentPolicy(json.data.policies[0]);\n                  } else {\n                    if (json.data.policies[0]) {\n                      setSelectedPoliciesRows(json.data.policies[0].id);\n                      setCurrentPolicy(json.data.policies[0]);\n                    }\n                  }\n\n                  if (json.data.last_service.calendar_events.length > 0) {\n                    setTechnicians(json.data.last_service.technicians);\n                    setEvent({\n                      start: json.data.last_service.calendar_events[0].start_date,\n                      end: json.data.last_service.calendar_events[0].finish_date\n                    });\n                  }\n\n                  if (json.data.last_service.service_products) {\n                    setSelectedConsumablesRows(json.data.last_service.service_products.map(function (consumable_row) {\n                      return {\n                        amount: consumable_row.amount,\n                        total_boxes: consumable_row.quantity,\n                        product_id: consumable_row.product_id\n                      };\n                    }));\n                  }\n                }));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    if (selectedProductRows) {\n      fetchServiceTotal(country, selectedProductRows.map(function (product) {\n        return product.id;\n      }), zipcode, administrative_demarcation === null || administrative_demarcation === void 0 ? void 0 : administrative_demarcation.admin_name_3, true);\n    }\n\n    fetchPolicyTotal(currentPolicy);\n  }, [service_type, selectedConsumablesRows]);\n  useEffect(function () {\n    if (!serviceUpdated && service_type == 'Mantenimiento') {\n      setConsumableAmount(consumables.map(function (item) {\n        return item.sub_total_consumable_amount_without_events;\n      }).reduce(function (prev, curr) {\n        return prev + curr;\n      }, 0));\n      setSelectedConsumablesRows(consumables.map(function (consumable_row) {\n        return {\n          amount: consumable_row.sub_total_consumable_amount_without_events,\n          total_boxes: consumable_row.total_boxes_without_events,\n          product_id: consumable_row.consumable.product_id\n        };\n      }));\n    } else {\n      setConsumableAmount(0);\n    }\n  }, [consumables]);\n  useEffect(function () {\n    setPaymentLink(\"\".concat(site_url(process.env.RAILS_ENV), \"/payments?object_id=\").concat(serviceID, \"&object_class=Servicio&customer_id=\").concat(customer_id, \"&amount=\").concat(totalAmount));\n  }, [serviceID, totalAmount]);\n  useEffect(function () {\n    if (isPaymentEmail) {\n      setPaymentEmailDialog(false);\n\n      if (!loading) {\n        setLoading(true);\n      }\n\n      saveService();\n    }\n  }, [isPaymentEmail]);\n  useEffect(function () {\n    if (event.start != '') {\n      setServiceStatus('prescheduled');\n      fetchServiceTotal(country, selectedProductRows.map(function (product) {\n        return product.id;\n      }), zipcode, administrative_demarcation.admin_name_3, true, null, event);\n    }\n  }, [event]);\n  useEffect(function () {\n    fetchPolicyTotal(currentPolicy);\n  }, [currentPolicy]); /// ///////////////////////////////////////////////////////////////\n  /// Functions\n\n  function fetchPolicyTotal(policy_new) {\n    if (service_type == 'Póliza de Mantenimiento') {\n      if (policy_new) {\n        setSelectedProductRows(policy_new.policy_customer_products.map(function (policy_customer_product) {\n          return policy_customer_product.customer_product;\n        }));\n        fetchServiceTotal(country, policy_new.policy_customer_products.map(function (policy_customer_product) {\n          return policy_customer_product.customer_product.id;\n        }), zipcode, administrative_demarcation.admin_name_3, true, true);\n        setHourAmout(0);\n        setFeeAmount(policy_new.viatic_price);\n        setConsumableAmount(policy_new.items_price);\n        setLaborAmount(policy_new.labor_price);\n        setSubtotalAmount(policy_new.total_price);\n        setIVAAmount(policy_new.total_price * countryIVA);\n        setTotalAmount(policy_new.total_price * (countryIVA + 1));\n      }\n    }\n  }\n\n  function fetchServiceTotal(country_code, products_ids, zipcode_t, administrative_demarcation_name_t) {\n    var from_consumables = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    var from_policy = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    var event_local = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    var withAmountParams = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n    console.log('Calculo el total');\n    console.log(event_local);\n\n    if (event_local) {\n      var time_diff = date_difference_in_hours(event.start, event.end);\n      console.log(time_diff);\n    }\n\n    if (products_ids.length > 0) {\n      var amountParams = {\n        viatic_value: viaticAmout,\n        fee_amount: feeAmount,\n        labor_price: laborAmount\n      };\n      var params = {\n        country: country_code,\n        products_ids: products_ids.join(','),\n        service_type: service_type,\n        subcategory: subcategory,\n        zipcode: zipcode_t || '',\n        administrative_demarcation_name: administrative_demarcation_name_t || administrative_demarcation.admin_name_1\n      };\n\n      if (withAmountParams) {\n        params = _objectSpread(_objectSpread({}, params), amountParams);\n      }\n\n      if (event_local) {\n        params.time_diff = time_diff;\n      }\n\n      return axios.get(\"/api/v1/services/\".concat(serviceID, \"/total_price\"), {\n        params: params\n      }).then(function (_ref) {\n        var json = _ref.data;\n\n        if (json.data) {\n          setTechinicianNumber(json.data.total_technicians);\n          setTotalhours(json.data.total_hours);\n          console.log(json.data);\n\n          if (!from_policy) {\n            if (viaticAmout != json.data.viatic_value) {\n              setViaticAmout(json.data.viatic_value);\n            }\n\n            if (feeAmount != json.data.fee_amount) {\n              setFeeAmount(json.data.fee_amount);\n            }\n\n            if (laborAmount != json.data.labor_price) {\n              setLaborAmount(json.data.labor_price);\n            }\n\n            setHourAmout(json.data.hour_amount);\n\n            if (oldFeeAmount === null) {\n              setOldFeeAmount(json.data.fee_amount);\n            }\n\n            if (oldViaticAmount === null) {\n              setOldViaticAmount(viaticAmout);\n            }\n\n            if (oldLaborAmount === null) {\n              setOldLaborAmount(json.data.labor_price);\n            }\n\n            if (service_type == 'Home Program' || service_type == 'Reparación' && subcategory == 'Profesional') {\n              setFeeAmountIncrement(json.data.fee_amount_increment);\n\n              if (time_diff && time_diff > 0) {\n                setTotalhours(time_diff);\n              }\n            }\n          }\n\n          if (!firstLoad) {\n            if (service_type == 'Póliza de Mantenimiento') {// setSubtotalAmount(json.data.total_amount + consumableAmount)\n              // setIVAAmount((json.data.total_amount + consumableAmount) * json.data.iva )\n              // setTotalAmount((json.data.total_amount + consumableAmount) * (1+ json.data.iva))\n            } else {\n              if (consumableAmount > 0) {\n                setSubtotalAmount(json.data.subtotal_amount + consumableAmount);\n                setIVAAmount((json.data.subtotal_amount + consumableAmount) * countryIVA);\n                setTotalAmount((json.data.subtotal_amount + consumableAmount) * (countryIVA + 1));\n              } else {\n                setIVAAmount(json.data.iva_amount);\n                setSubtotalAmount(json.data.subtotal_amount + consumableAmount);\n                setTotalAmount(json.data.total_amount + consumableAmount);\n              }\n            }\n          } else {\n            if (!from_policy) {\n              setIVAAmount(json.data.iva_amount);\n              setSubtotalAmount(json.data.subtotal_amount);\n\n              if (totalAmount != 0) {\n                setTotalAmount(json.data.total_amount);\n              }\n            }\n          }\n\n          setFirstLoad(false);\n\n          if (!from_consumables) {\n            setConsumables(json.consumables.data.items);\n          }\n        } else {\n          console.log('No hay precio.');\n        }\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    }\n  }\n\n  function fetchServicePayments(object_id, object_class) {\n    return fetch(\"/api/v1/payments?object_id=\".concat(object_id, \"&object_class=\").concat(object_class)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      if (json.data) {\n        if (json.data.length > 0 && json.data[0].status == 'completed') {\n          setServiceStatus('paid');\n        }\n\n        setPaymentData(json.data);\n      } else {\n        console.log('No hay precio.');\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }\n\n  function validateForm() {\n    var messages = [];\n\n    if (selectedProductRows.length == 0) {\n      messages.push(t('customer.newService.flashAlert.selectedProductRows'));\n    }\n\n    if (service_type == '' || service_type == null) {\n      messages.push('Debe seleccionar el tipo de servicio a solicitar');\n      setServiceTypeErrorMessage(t('customer.newService.flashAlert.serviceType'));\n    }\n\n    if (subcategory == '' || subcategory == null) {\n      messages.push('Debe seleccionar la subcategoria de servicio a solicitar');\n      setSubcategoryErrorMessage(t('customer.newService.flashAlert.subCategory'));\n    }\n\n    if (requested == '' || requested == null) {\n      messages.push('Debe indicar como fue solicitado el servicio');\n      setRequestedErrorMessage(t('customer.newService.flashAlert.requested'));\n    }\n\n    if (requestChannel == '' || requestChannel == null) {\n      messages.push('Debe indicar el canal de la solicitud');\n      setRequestChannelErrorMessage(t('customer.newService.flashAlert.requestChannel'));\n    }\n\n    if ((background == '' || background == null) && service_type != 'Póliza de Mantenimiento') {\n      messages.push(t('customer.newService.flashAlert.indicateProblem'));\n      setBackgroundErrorMessage('Debe indicar antecedentes del problema');\n    }\n\n    if (event.start == '' || event.start == null) {\n      messages.push(t('customer.newService.flashAlert.startDate'));\n      setEventErrorMessage('Debe seleccionar una fecha');\n    }\n\n    if (noPaymentCheck) {\n      if (noPaymentOption == '' || noPaymentOption == null) {\n        messages.push(t('customer.newService.flashAlert.noPaymentOption'));\n        setNoPaymenErrorMessage('Debe seleccionar una opcción de no pago');\n      }\n    } else {\n      if (selectedPaymentDate == '' || selectedPaymentDate == null) {\n        messages.push(t('customer.newService.flashAlert.selectedPaymentDate'));\n        setSelectedPaymentDateErrorMessage('Debe seleccionar fecha limite de pago');\n      }\n    }\n\n    if (service_type == 'Póliza de Mantenimiento' && selectedPolicies == '') {\n      messages.push(t('customer.newService.flashAlert.selectedPolicies'));\n    }\n\n    messages.forEach(function (element) {\n      flash_alert(t('customer.newService.flashAlert.attention'), element, 'warning');\n    });\n\n    if (messages.length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  function saveService() {\n    var redirect_param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var body = new FormData();\n    body.set('service_id', serviceID);\n    body.set('cost_center_id', selectedCostCenterId);\n    body.set('customer_id', customer_id);\n    body.set('address', checked);\n    body.set('address_fn', checkedFN);\n    body.set('service_type', service_type);\n    body.set('subcategory', subcategory);\n    body.set('requested', requested);\n    body.set('request_channel', requestChannel);\n    body.set('distributor_name', distributorName);\n    body.set('distributor_email', distributorEmail);\n    body.set('customer_products_id', selectedProductRows.map(function (product_row) {\n      return product_row.id;\n    })); // Service Totals\n\n    body.set('technicians_number', techinicianNumber);\n    body.set('hour_amount', hourAmout);\n    body.set('fee_amount', feeAmount);\n    body.set('labor_amount', laborAmount);\n    body.set('viatic_amount', viaticAmout);\n    body.set('subtotal_amount', subtotalAmount);\n    body.set('iva_amount', ivaAmount);\n    body.set('total_hours', totalhours);\n    body.set('total_amount', totalAmount);\n    body.set('background', background);\n    body.set('no_payment', noPaymentCheck);\n    body.set('payment_channel', paymentChannel);\n    body.set('payment_date', selectedPaymentDate);\n    body.set('no_payment_reason', noPaymentOption);\n    body.set('invoice', invoiceCheck === 'si');\n    body.set('status', serviceStatus);\n    body.set('event_start', event.start);\n    body.set('event_end', event.end);\n    body.set('technicians_ids', technicians_ids);\n    body.set('payment_state', paymentData.length > 0 && paymentData[0].status == 'completed' ? 'paid' : 'pending');\n    body.set('customerEmail', customerEmail);\n    body.set('paymentEmailAdditional', paymentEmailAdditional);\n    body.set('isPaymentEmail', isPaymentEmail);\n    body.set('from', from);\n\n    if (service_type == 'Póliza de Mantenimiento') {\n      body.set('policy_id', selectedPolicies);\n    }\n\n    files.forEach(function (file) {\n      body.append('images[]', JSON.stringify(file));\n    });\n\n    if (consumables) {\n      body.append('consumables[]', '{}');\n    }\n\n    selectedConsumablesRows.forEach(function (consumable) {\n      body.append('consumables[]', JSON.stringify(consumable));\n    });\n    return axios.post(\"/api/v1/customers/\".concat(customer_id, \"/create_service\"), body, {\n      headers: headers\n    }).then(function (response) {\n      if (redirect_param) {\n        flash_alert(t('customer.newService.flashAlert.success'), t('customer.newService.flashAlert.updateSuccess'), 'success');\n      }\n\n      setRedirect(redirect_param);\n    })[\"catch\"](function (e) {\n      if (e.response.data) {\n        for (var key in e.response.data) {\n          flash_alert('Error', e.response.data[key], 'danger');\n        }\n      }\n    });\n  } /// ///////////////////////////////////////////////////////////////\n  /// Handles\n\n\n  var handlepaymentChannel = function handlepaymentChannel(event, newpaymentChannel) {\n    setPaymentChannel(newpaymentChannel);\n  };\n\n  var handleInvoiceCheckChange = function handleInvoiceCheckChange(event) {\n    setInvoiceCheck(event.target.value);\n  };\n\n  var handlePaymentDateChange = function handlePaymentDateChange(date) {\n    setSelectedPaymentDate(date);\n  };\n\n  function handleCountryInputs(country_iso) {\n    if (country_iso == 'CL') {\n      setPersonCheck('hidden');\n      setZipcodeCheck('hidden');\n      setDelegationCheck('hidden');\n      setColonyCheck('hidden');\n      setStateLabel('Comuna/Región');\n      setExtNumberLabel('Número');\n      setIntNumberLabel('Depto');\n      setRUTCheck('');\n    } else {\n      setPersonCheck('');\n      setRUTCheck('hidden');\n      setZipcodeCheck('');\n      setDelegationCheck('');\n      setColonyCheck('');\n      setStateLabel('Estado');\n      setExtNumberLabel('Número Exterior');\n      setIntNumberLabel('Número Interior');\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (!validateForm()) {\n      setLoading(false);\n      return false;\n    }\n\n    if (paymentChannel == 'online' || paymentChannel == 'transfer') {\n      setPaymentEmailDialog(true);\n    } else {\n      if (!loading) {\n        setLoading(true);\n      }\n\n      saveService();\n    }\n  }\n\n  function handleServiceTypeChange(e) {\n    setServiceType(e);\n    var serviceTypes = serviceTypeLabels(i18next.language);\n    console.log({\n      serviceTypes: serviceTypes\n    });\n    var serviceTypeKey = Object.keys(serviceTypes).find(function (serviceTypeLabel) {\n      return serviceTypes[serviceTypeLabel].key === e;\n    });\n    setSubcategory('');\n    var subcategories = serviceTypeSubcategories(i18next.language);\n    setSubcategoryOptions(subcategories[serviceTypeKey]);\n\n    if (e === 'Reparaciones en Taller') {\n      if (selectedProductRows.length > 0) {\n        setoggledClearProductsRows(false);\n      } else {\n        setoggledClearProductsRows(true);\n      }\n\n      setProductTableDisabled(false);\n    } else {\n      setoggledClearProductsRows(true);\n      setProductTableDisabled(false);\n    }\n  }\n\n  function handleRequestedChange(e) {\n    var _requestedLabels$find;\n\n    setRequested(e.target.value);\n    var requestedDistributor = ((_requestedLabels$find = requestedLabels(i18next.language).find(function (requested) {\n      return requested.key === 'Distribuidor autorizado';\n    })) === null || _requestedLabels$find === void 0 ? void 0 : _requestedLabels$find.key) || null;\n\n    if (e.target.value === requestedDistributor) {\n      setDistributorCheck('');\n    } else {\n      setDistributorCheck('hidden');\n    }\n  }\n\n  function onServiceChangeFiles(_x) {\n    return _onServiceChangeFiles.apply(this, arguments);\n  }\n\n  function _onServiceChangeFiles() {\n    _onServiceChangeFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var dT;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (e.length > 0) {\n                dT = [];\n                e.forEach( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item) {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return getBase64(item).then(function (encFile) {\n                              dT.push(encFile);\n                              setFiles(dT);\n                            })[\"catch\"](function (error) {\n                              return console.log('error');\n                            });\n\n                          case 2:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _onServiceChangeFiles.apply(this, arguments);\n  }\n\n  ;\n\n  function handleProductRowChange(state) {\n    // setoggledClearProductsRows\n    setoggledClearProductsRows(true);\n    setSelectedProductRows(state.selectedRows);\n    fetchServiceTotal(country, state.selectedRows.map(function (product) {\n      return product.id;\n    }), zipcode, administrative_demarcation === null || administrative_demarcation === void 0 ? void 0 : administrative_demarcation.admin_name_3);\n\n    if (service_type == 'Reparaciones en Taller' && state.selectedRows.length > 0) {\n      setProductTableDisabled(true);\n    }\n  }\n\n  function handleProductDisabledSelected() {\n    if (service_type == 'Reparaciones en Taller' && productTableDisabled && selectedProductRows.length > 0) {\n      setoggledClearProductsRows(false);\n      setProductTableDisabled(false);\n    }\n  }\n\n  function handlePolicyRowChange(policy) {\n    setCurrentPolicy(policy);\n    setSelectedPoliciesRows(policy.id);\n  }\n\n  function handleConsumableRowChange(state) {\n    if (service_type == 'Mantenimiento') {\n      setConsumableAmount(state.selectedRows.map(function (item) {\n        return item.sub_total_consumable_amount_without_events;\n      }).reduce(function (prev, curr) {\n        return prev + curr;\n      }, 0));\n    } else {\n      setConsumableAmount(0);\n    }\n\n    setSelectedConsumablesRows(state.selectedRows.map(function (consumable_row) {\n      return {\n        amount: consumable_row.sub_total_consumable_amount_without_events,\n        total_boxes: consumable_row.total_boxes_without_events,\n        product_id: consumable_row.consumable.product_id\n      };\n    }));\n  }\n\n  function consumableSelectableRowCriteria(row) {\n    if (selectedConsumablesRows.length > 0) {\n      return selectedConsumablesRows.find(function (product) {\n        return product.product_id === row.consumable.product_id;\n      }) != undefined;\n    } else {\n      return true;\n    }\n  }\n\n  function handleMessage(message, type) {\n    if (type == 'error') {\n      flash_alert('', t('customer.newService.flashAlert.noFileFormat'), 'error');\n    }\n  }\n\n  function getBase64(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        return resolve({\n          uri_64: reader.result,\n          name: file.name,\n          mime: file.type\n        });\n      };\n\n      reader.onerror = function (error) {\n        return reject(error);\n      };\n    });\n  } /// ///////////////////////////////////////////////////////////////\n\n\n  var redirect_check = [];\n\n  if (redirect) {\n    redirect_check.push( /*#__PURE__*/React.createElement(Redirect, {\n      key: \"redirect-to-customers\",\n      to: \"/customers/\".concat(customer_id, \"/show\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ShowCustomer, {\n      setLoading: props.setLoading,\n      headers: props.headers,\n      match: props.match,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 83\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, redirect_check, /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"mdl-navigation__link  back-link back-link\",\n    to: \"/customers/\".concat(customer_id, \"/show\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 13\n    }\n  }, \"keyboard_arrow_left\"), \" \", t('globalText.back')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 13\n    }\n  }, t('customer.newService.serviceTo'), \" \", customerNames, \" \", customerLastname, \" \", customerSurname)))), /*#__PURE__*/React.createElement(CustomerDetails, {\n    customer_id: customer_id,\n    country_names: country_names_g,\n    country: country,\n    zipcode: zipcode,\n    personCheck: personCheck,\n    selectedPerson: selectedPerson,\n    rut: rut,\n    RUTCheck: RUTCheck,\n    zipcodeCheck: zipcodeCheck,\n    stateLabel: stateLabel,\n    administrative_demarcation: administrative_demarcation,\n    state: state,\n    delegationCheck: delegationCheck,\n    delegation: delegation,\n    colony: colony,\n    street_type: street_type,\n    street_name: street_name,\n    ext_number: ext_number,\n    int_number: int_number,\n    phone: phone,\n    reference: reference,\n    additionalsAddresses: additionalsAddresses,\n    colonyCheck: colonyCheck,\n    extNumberLabel: extNumberLabel,\n    intNumberLabel: intNumberLabel,\n    headers: headers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ServiceInfoForm, {\n    costCenters: costCenters,\n    setSelectedCostCenterId: setSelectedCostCenterId,\n    selectedCostCenterId: selectedCostCenterId,\n    classes: classes,\n    service_typeErrorMessage: service_typeErrorMessage,\n    service_type: service_type,\n    handleServiceTypeChange: handleServiceTypeChange,\n    subcategoryErrorMessage: subcategoryErrorMessage,\n    subcategory: subcategory,\n    setSubcategory: setSubcategory,\n    subcategoryOptions: subcategoryOptions,\n    requestedErrorMessage: requestedErrorMessage,\n    requested: requested,\n    handleRequestedChange: handleRequestedChange,\n    requestedBy: requestedLabels(i18next.language),\n    requestChannelErrorMessage: requestChannelErrorMessage,\n    requestChannel: requestChannel,\n    setRequestChannel: setRequestChannel,\n    distributorCheck: distributorCheck,\n    distributorName: distributorName,\n    distributorEmail: distributorEmail,\n    setDistributorName: setDistributorName,\n    setDistributorEmail: setDistributorEmail,\n    policies: policies,\n    country: country,\n    handlePolicyRowChange: handlePolicyRowChange,\n    selectedPolicies: selectedPolicies,\n    products: products,\n    product_columns: product_columns,\n    handleProductRowChange: handleProductRowChange,\n    selectedProductRows: selectedProductRows,\n    consumables: consumables,\n    consumable_columns: consumable_columns,\n    handleConsumableRowChange: handleConsumableRowChange,\n    consumableSelectableRowCriteria: consumableSelectableRowCriteria,\n    background: background,\n    setBackground: setBackground,\n    backgroundErrorMessage: backgroundErrorMessage,\n    onServiceChangeFiles: onServiceChangeFiles,\n    handleMessage: handleMessage,\n    serviceFiles: serviceFiles,\n    setServiceFiles: setServiceFiles,\n    toggledClearProductsRows: toggledClearProductsRows,\n    productTableDisabled: productTableDisabled,\n    handleProductDisabledSelected: handleProductDisabledSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1082,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 9\n    }\n  }, t('customer.newService.direcction')), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    key: \"principal\",\n    role: undefined,\n    dense: true,\n    button: true,\n    onClick: handleToggle('principal'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: \"service-address-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"principal\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 44\n      }\n    }),\n    label: \"\",\n    checked: checked == 'principal',\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    id: \"radio-address-list-label-principal\",\n    primary: \"Principal\",\n    secondary: \"\".concat(street_type, \" \").concat(street_name, \", \").concat(ext_number, \" \").concat(int_number, \", \").concat(administrative_demarcation != null ? administrative_demarcation.admin3_admin1 : state).concat(zipcode != '' ? ', Código Postal: ' + zipcode : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 13\n    }\n  })), additionalsAddresses.map(function (additional_address) {\n    var labelId = \"radio-address-list-label-\".concat(additional_address.id);\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: additional_address.id,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(additional_address.id, additional_address.zipcode, additional_address.administrative_demarcation),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      className: \"service-address-label\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: additional_address.id,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        color: \"primary\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 60\n        }\n      }),\n      label: \"\",\n      checked: checked == additional_address.id,\n      tabIndex: -1,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: additional_address.name,\n      secondary: \"\".concat(additional_address.street_type, \" \").concat(additional_address.street_name, \", \").concat(additional_address.ext_number, \" \").concat(additional_address.int_number, \", \").concat(additional_address.administrative_demarcation != null ? additional_address.administrative_demarcation.admin3_admin1 : additional_address.state).concat(additional_address.zipcode != '' ? ', Código Postal: ' + additional_address.zipcode : ''),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 17\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1128,\n      columnNumber: 9\n    }\n  }, t('customer.newService.diary.title')), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 13\n    }\n  }, t('customer.newService.diary.subTitle')), country_change && /*#__PURE__*/React.createElement(NewScheduleDialog, {\n    schedule_type: \"service\",\n    btn_classname: \"\",\n    btn_text: t('customer.newService.diary.calendarButton'),\n    customer_id: customer_id,\n    country: country,\n    selectedProductRows: selectedProductRows,\n    service_type: service_type,\n    subcategory: subcategory,\n    requested: requested,\n    techinicianNumber: techinicianNumber,\n    zipcode: zipcode,\n    administrative_demarcation: administrative_demarcation,\n    setTechinicianNumber: setTechinicianNumber,\n    event: event,\n    setEvent: setEvent,\n    technicians_ids: technicians_ids,\n    setTechniciansIds: setTechniciansIds,\n    saveService: saveService,\n    technicians: technicians,\n    setTechnicians: setTechnicians,\n    totalhours: totalhours,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: \"brand-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 13\n    }\n  }, eventErrorMessage)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 11\n    }\n  }, event.start != '' && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 19\n    }\n  }, t('customer.newService.diary.selectedDate'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 19\n    }\n  }, t('customer.newService.diary.dayAndHour')), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-scheddule-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 19\n    }\n  }, date_event_format(event.start, event.end))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 19\n    }\n  }, t('customer.newService.diary.duration')), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-scheddule-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 19\n    }\n  }, date_difference_in_hours(event.start, event.end), \" \", pluralize('hora', date_difference_in_hours(event.start, event.end)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 19\n    }\n  }, t('customer.newService.diary.technicians')), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-scheddule-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1174,\n      columnNumber: 19\n    }\n  }, technicians && technicians.map(function (technician, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 23\n      }\n    }, technician.user && (technician.enterprise != '' && technician.enterprise != null ? technician.user.fullname + ' (' + technician.enterprise + ')' : technician.user.fullname), index != technicians.length - 1 ? ',' : '', \"\\xA0\");\n  }))))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 9\n    }\n  }, t('customer.newService.paymentService.title')), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 17\n    }\n  }, t('customer.newService.paymentService.subTitle')), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: noPaymentCheck,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 51\n      }\n    }),\n    label: \"No hay pago\",\n    checked: noPaymentCheck,\n    tabIndex: -1,\n    onChange: function onChange(e) {\n      return setNoPaymentCheck(!noPaymentCheck);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: noPaymentCheck ? '' : 'hidden',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"noPaymentOption-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 19\n    }\n  }, t('customer.newService.paymentService.reasonForNonPayment')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"noPaymentOption-simple-select-outlined-label\",\n    id: \"noPaymentOption-simple-select-outlined\",\n    value: noPaymentOption,\n    onChange: function onChange(e) {\n      return setNoPaymentOption(e.target.value);\n    },\n    label: t('customer.newService.paymentService.reasonForNonPayment'),\n    name: \"noPaymentOption\",\n    error: noPaymenErrorMessage != '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 19\n    }\n  }, noPaymentsOptions.map(function (value) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: 'noPaymentOption-' + value,\n      value: value,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 23\n      }\n    }, value);\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: \"brand-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 19\n    }\n  }, noPaymenErrorMessage)))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: noPaymentCheck ? 'hidden' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: paymentChannel,\n    exclusive: true,\n    onChange: handlepaymentChannel,\n    \"aria-label\": \"text paymentChannel\",\n    className: \"service-payment-method-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    className: \"service-payment-method-btn\",\n    value: \"online\",\n    \"aria-label\": \"online\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 19\n    }\n  }, t('customer.newService.paymentService.paymentMethod.online')), /*#__PURE__*/React.createElement(ToggleButton, {\n    className: \"service-payment-method-btn\",\n    value: \"transfer\",\n    \"aria-label\": \"transfer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1238,\n      columnNumber: 19\n    }\n  }, t('customer.newService.paymentService.paymentMethod.transfer')), /*#__PURE__*/React.createElement(ToggleButton, {\n    className: \"service-payment-method-btn\",\n    value: \"phone\",\n    \"aria-label\": \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 19\n    }\n  }, t('customer.newService.paymentService.paymentMethod.payForphone')), /*#__PURE__*/React.createElement(ToggleButton, {\n    className: \"service-payment-method-btn\",\n    value: \"pay_at_home\",\n    \"aria-label\": \"pay_at_home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 19\n    }\n  }, t('customer.newService.paymentService.paymentMethod.payAtHome')), /*#__PURE__*/React.createElement(ToggleButton, {\n    className: \"service-payment-method-btn\",\n    value: \"bank_deposit\",\n    \"aria-label\": \"bank_deposit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 19\n    }\n  }, t('customer.newService.paymentService.paymentMethod.bankDeposit')))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: paymentData.length > 0 ? '' : 'hidden',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 15\n    }\n  }, paymentData.length > 0 && paymentData[0].status == 'completed' ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1257,\n      columnNumber: 84\n    }\n  }, t('customer.newService.paymentService.paymentCompleted')) : ''), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: paymentChannel == 'phone' ? '' : 'hidden',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 15\n    }\n  }, paymentData.length > 0 && paymentData[0].status != 'completed' && totalAmount > 0 || paymentData.length < 1 ? /*#__PURE__*/React.createElement(PaymentMethods, {\n    cols: 4,\n    country: country,\n    serviceID: serviceID,\n    customer_id: customer_id,\n    totalAmount: totalAmount,\n    object_class: \"Servicio\",\n    onPaymentCallback: function onPaymentCallback() {\n      return saveService(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1263,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1272,\n      columnNumber: 23\n    }\n  }, t('customer.newService.paymentService.productAndService'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: paymentLink,\n    onCopy: function onCopy() {\n      return flash_alert(t('customer.newService.flashAlert.copied'), t('customer.newService.flashAlert.copyLinkMessage'), 'success');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"mdl-navigation__link brand-primary-link \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 75\n    }\n  }, \"file_copy\"), \" \", t('customer.newService.paymentService.copyPaymentLink')))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1283,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-payemnt-method-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1284,\n      columnNumber: 17\n    }\n  }, t('customer.newService.paymentService.customerBill?')), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"si\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      checked: invoiceCheck === 'si',\n      onChange: handleInvoiceCheckChange,\n      value: \"si\",\n      color: \"primary\",\n      name: \"radio-button-invoice-check\",\n      inputProps: {\n        'aria-label': 'Si'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 21\n      }\n    }),\n    label: t('customer.newService.paymentService.yes'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"no\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      checked: invoiceCheck === 'no',\n      onChange: handleInvoiceCheckChange,\n      value: \"no\",\n      color: \"primary\",\n      name: \"radio-button-invoice-check\",\n      inputProps: {\n        'aria-label': 'No'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1300,\n        columnNumber: 21\n      }\n    }),\n    label: t('customer.newService.paymentService.no'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1298,\n      columnNumber: 17\n    }\n  }), invoiceCheck === 'si' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-payemnt-method-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 21\n    }\n  }, t('customer.newService.paymentService.generateServiceButton')), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1313,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    key: \"principal\",\n    className: \"service-address-list-item\",\n    role: undefined,\n    dense: true,\n    button: true,\n    onClick: handleToggleFN('principal'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1314,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: \"service-address-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1315,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"principal\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 56\n      }\n    }),\n    label: \"\",\n    checked: checkedFN == 'principal',\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1316,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    id: \"radio-address-list-label-principal\",\n    primary: \"Principal\",\n    secondary: \"\".concat(street_type_fn, \" \").concat(street_name_fn, \", \").concat(ext_number_fn, \" \").concat(int_number_fn, \", \").concat(administrative_demarcation_fn != null ? administrative_demarcation.admin3_admin1 : state_fn).concat(zipcode_fn != '' ? ', Código Postal: ' + zipcode_fn : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1327,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1355,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1356,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PaymentEmailDialog, {\n    email: customerEmail,\n    paymentEmailDialog: paymentEmailDialog,\n    setPaymentEmailDialog: setPaymentEmailDialog,\n    loading: loading,\n    setLoading: setLoading,\n    saveService: saveService,\n    paymentEmailAdditional: paymentEmailAdditional,\n    setPaymentEmailAdditional: setPaymentEmailAdditional,\n    isPaymentEmail: isPaymentEmail,\n    setIsPaymentEmail: setIsPaymentEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1358,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1370,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"service-save\",\n    disabled: loading,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1371,\n      columnNumber: 19\n    }\n  }, t('customer.newService.paymentService.generateServiceButton')), loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1374,\n      columnNumber: 31\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    className: \"service-price-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1380,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1381,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.title')), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1383,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.concept')), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 13\n    }\n  }, service_type, subcategory != '' ? ', ' + subcategory : ''), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1386,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.totalHours'), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 83\n    }\n  }, totalhours)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1390,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.hourAmount'), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1391,\n      columnNumber: 83\n    }\n  }, money_format(country, hourAmout))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1394,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.feeAmount'), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(WarnIconValidate, {\n    oldValue: oldFeeAmount,\n    newValue: feeAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1397,\n      columnNumber: 17\n    }\n  }), canShowCurrencyField && /*#__PURE__*/React.createElement(CurrencyTextField, {\n    style: {\n      width: '80px'\n    },\n    onBlur: handleFeeChange,\n    currencySymbol: CURRENCY_SYMBOLS[country],\n    decimalPlaces: DECIMAL_PLACES[country],\n    digitGroupSeparator: \",\",\n    value: feeAmount,\n    outputFormat: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1400,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1413,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.consumables'), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1414,\n      columnNumber: 84\n    }\n  }, money_format(country, consumableAmount))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1417,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.laborAmount'), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1419,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(WarnIconValidate, {\n    oldValue: oldLaborAmount,\n    newValue: laborAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1420,\n      columnNumber: 17\n    }\n  }), canShowCurrencyField && /*#__PURE__*/React.createElement(CurrencyTextField, {\n    style: {\n      width: '80px'\n    },\n    onBlur: function onBlur(e) {\n      return setLaborAmount(Number(e.target.value.split(',').join('')));\n    },\n    currencySymbol: CURRENCY_SYMBOLS[country],\n    decimalPlaces: DECIMAL_PLACES[country],\n    digitGroupSeparator: \",\",\n    value: laborAmount,\n    outputFormat: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1423,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1436,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.viaticAmount'), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(WarnIconValidate, {\n    oldValue: oldViaticAmount,\n    newValue: viaticAmout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 17\n    }\n  }), canShowCurrencyField && /*#__PURE__*/React.createElement(CurrencyTextField, {\n    style: {\n      width: '80px'\n    },\n    onBlur: function onBlur(e) {\n      return setViaticAmout(Number(e.target.value.split(',').join('')));\n    },\n    currencySymbol: CURRENCY_SYMBOLS[country],\n    decimalPlaces: DECIMAL_PLACES[country],\n    digitGroupSeparator: \",\",\n    value: viaticAmout,\n    outputFormat: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1442,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1456,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1457,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.subTotalAmount'), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1458,\n      columnNumber: 87\n    }\n  }, money_format(country, subtotalAmount))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1461,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.ivaAmount'), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1462,\n      columnNumber: 81\n    }\n  }, money_format(country, ivaAmount))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"totals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1467,\n      columnNumber: 13\n    }\n  }, t('customer.newService.paymentService.serviceDetails.totalAmount'), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pull-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1468,\n      columnNumber: 84\n    }\n  }, money_format(country, Number(totalAmount)))), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: esLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1471,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    className: \"payment-date-input\",\n    id: \"date-payment-dialog\",\n    label: t('customer.newService.paymentService.serviceDetails.paydayLimit'),\n    format: \"dd/MM/yyyy\",\n    value: selectedPaymentDate,\n    onChange: handlePaymentDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1472,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: \"brand-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1483,\n      columnNumber: 15\n    }\n  }, selectedPaymentDateErrorMessage))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(NewService);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/NewService.jsx"],"names":["React","useState","useEffect","CostCenterApi","WarnIconValidate","CurrencyTextField","axios","Link","Redirect","connect","createStructuredSelector","flash_alert","CustomerDetails","NewScheduleDialog","PaymentEmailDialog","ServiceInfoForm","Paper","Grid","country_names_g","headers","money_format","date_event_format","date_format_without_time_and_zone","date_difference_in_hours","site_url","noPaymentsOptions","pluralize","InputLabel","FormControl","MenuItem","Select","ShowCustomer","createStyles","makeStyles","CircularProgress","Radio","FormControlLabel","FormHelperText","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","Button","ToggleButton","ToggleButtonGroup","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","PaymentMethods","CopyToClipboard","i18next","useTranslation","CURRENCY_SYMBOLS","DECIMAL_PLACES","serviceTypeLabels","serviceTypeSubcategories","requestedLabels","product_columns","name","t","selector","hide","cell","row","product","taxons","sortable","tnr","reinstalation_date","instalation_date","discontinued","warranty","consumable_columns","NewService","props","useStyles","theme","previewChip","minWidth","maxWidth","wrapper","margin","spacing","position","buttonProgress","top","left","marginTop","marginLeft","classes","costCenters","setCostCenters","selectedCostCenterId","setSelectedCostCenterId","customerNames","setCustomerFirstname","customerLastname","setCustomerLastname","customerSurname","setCustomerSurname","customerEmail","setCustomerEmail","customer_id","setCustomerId","zipcode","setZipcode","state","setState","delegation","setDelegation","colony","setColony","street_type","setStreettype","street_name","setStreetName","ext_number","setExtNumber","int_number","setIntNumber","phone","setPhone","reference","setReference","selectedPerson","setSelectedPerson","country","setCountry","canShowCurrencyField","setCanShowCurrencyField","countryIVA","setCountryIVA","rut","setRut","administrative_demarcation","setAdministrativeDemarcation","zipcode_fn","setZipcodeFn","state_fn","setStateFn","delegation_fn","setDelegationFn","colony_fn","setColonyFn","street_type_fn","setStreettypeFn","street_name_fn","setStreetNameFn","ext_number_fn","setExtNumberFn","int_number_fn","setIntNumberFn","phone_fn","setPhoneFn","administrative_demarcation_fn","setAdministrativeDemarcationFn","additionalsAddresses","setAdditionalsAddresses","personCheck","setPersonCheck","RUTCheck","setRUTCheck","zipcodeCheck","setZipcodeCheck","delegationCheck","setDelegationCheck","stateLabel","setStateLabel","colonyCheck","setColonyCheck","extNumberLabel","setExtNumberLabel","intNumberLabel","setIntNumberLabel","country_change","setCountryChange","redirect","setRedirect","firstLoad","setFirstLoad","loading","setLoading","serviceID","setServiceID","service_type","setServiceType","subcategory","setSubcategory","requested","setRequested","requestChannel","setRequestChannel","subcategoryOptions","setSubcategoryOptions","serviceStatus","setServiceStatus","serviceFiles","setServiceFiles","serviceUpdated","setServiceUpdated","start","end","event","setEvent","technicians","setTechnicians","policies","setPolicies","currentPolicy","setCurrentPolicy","selectedPolicies","setSelectedPoliciesRows","technicians_ids","setTechniciansIds","techinicianNumber","setTechinicianNumber","hourAmout","setHourAmout","viaticAmout","setViaticAmout","feeAmount","setFeeAmount","oldFeeAmount","setOldFeeAmount","oldViaticAmount","setOldViaticAmount","oldLaborAmount","setOldLaborAmount","feeAmountIncrement","setFeeAmountIncrement","consumableAmount","setConsumableAmount","laborAmount","setLaborAmount","totalhours","setTotalhours","ivaAmount","setIVAAmount","subtotalAmount","setSubtotalAmount","totalAmount","setTotalAmount","noPaymentCheck","setNoPaymentCheck","noPaymentOption","setNoPaymentOption","Date","selectedPaymentDate","setSelectedPaymentDate","paymentData","setPaymentData","paymentLink","setPaymentLink","paymentLinkBoolean","setPaymentLinkBoolean","from","setFrom","distributorName","setDistributorName","distributorEmail","setDistributorEmail","distributorCheck","setDistributorCheck","products","setProducts","selectedProductRows","setSelectedProductRows","background","setBackground","files","setFiles","consumables","setConsumables","selectedConsumablesRows","setSelectedConsumablesRows","service_typeErrorMessage","setServiceTypeErrorMessage","subcategoryErrorMessage","setSubcategoryErrorMessage","requestedErrorMessage","setRequestedErrorMessage","requestChannelErrorMessage","setRequestChannelErrorMessage","backgroundErrorMessage","setBackgroundErrorMessage","eventErrorMessage","setEventErrorMessage","noPaymenErrorMessage","setNoPaymenErrorMessage","selectedPaymentDateErrorMessage","setSelectedPaymentDateErrorMessage","checked","setChecked","handleToggle","value","zipcode_t","administrative_demarcation_t","fetchServiceTotal","map","id","admin_name_3","checkedFN","setCheckedFN","handleToggleFN","paymentChannel","setPaymentChannel","invoiceCheck","setInvoiceCheck","openTotalDialog","setOpenTotalDialog","paymentEmailAdditional","setPaymentEmailAdditional","isPaymentEmail","setIsPaymentEmail","paymentEmailDialog","setPaymentEmailDialog","toggledClearProductsRows","setoggledClearProductsRows","productTableDisabled","setProductTableDisabled","handleClickOpenTotalDialog","handleCloseTotalDialog","handleFeeChange","Number","target","split","join","params","URLSearchParams","window","location","search","fetchData","getAllCostCenters","costCentersFetch","data","userId","match","fetch","then","response","json","console","log","names","lastname","surname","email","person_type","cost_center_id","iso","iva","additional_addresses","handleCountryInputs","last_service","total_amount","subtotal_amount","handleServiceTypeChange","fetchServicePayments","request_channel","technicians_number","hour_amount","fee_amount","total_hours","distributor_name","distributor_email","status","customer_products","no_payment","payment_channel","payment_date","no_payment_reason","invoice","has","test","get","pop","aux","i","includes","toString","push","file_resources","policy_id","calendar_events","length","start_date","finish_date","service_products","consumable_row","amount","total_boxes","quantity","product_id","fetchPolicyTotal","item","sub_total_consumable_amount_without_events","reduce","prev","curr","total_boxes_without_events","consumable","process","env","RAILS_ENV","saveService","policy_new","policy_customer_products","policy_customer_product","customer_product","viatic_price","items_price","labor_price","total_price","country_code","products_ids","administrative_demarcation_name_t","from_consumables","from_policy","event_local","withAmountParams","time_diff","amountParams","viatic_value","administrative_demarcation_name","admin_name_1","total_technicians","fee_amount_increment","iva_amount","items","error","object_id","object_class","validateForm","messages","forEach","element","redirect_param","body","FormData","set","product_row","file","append","JSON","stringify","post","e","key","handlepaymentChannel","newpaymentChannel","handleInvoiceCheckChange","handlePaymentDateChange","date","country_iso","handleSubmit","preventDefault","serviceTypes","language","serviceTypeKey","Object","keys","find","serviceTypeLabel","subcategories","handleRequestedChange","requestedDistributor","onServiceChangeFiles","dT","getBase64","encFile","handleProductRowChange","selectedRows","handleProductDisabledSelected","handlePolicyRowChange","policy","handleConsumableRowChange","consumableSelectableRowCriteria","undefined","handleMessage","message","type","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","uri_64","result","mime","onerror","redirect_check","admin3_admin1","additional_address","labelId","technician","index","user","enterprise","fullname","width","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport * as CostCenterApi from 'api/cost_center'\nimport WarnIconValidate from 'components/services/common/WarnIconValidate'\nimport CurrencyTextField from '@unicef/material-ui-currency-textfield'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { flash_alert } from 'components/App'\nimport CustomerDetails from 'components/customers/CustomerDetails'\nimport NewScheduleDialog from 'components/services/NewScheduleDialog'\nimport PaymentEmailDialog from 'components/services/PaymentEmailDialog'\nimport ServiceInfoForm from 'components/services/forms/ServiceInfoForm'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport { country_names_g } from 'components/customers/CustomerForm'\nimport { headers, money_format, date_event_format, date_format_without_time_and_zone, date_difference_in_hours, site_url, noPaymentsOptions } from 'constants/csrf'\nimport pluralize from 'pluralize'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport ShowCustomer from 'components/customers/ShowCustomer'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\n// Button loading\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Radio from '@material-ui/core/Radio'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Button from '@material-ui/core/Button'\n// Toggle buttons\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\n// Dates\nimport DateFnsUtils from '@date-io/date-fns'\nimport esLocale from 'date-fns/locale/es'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\n\n// Payment Methods\nimport PaymentMethods from 'components/payments/PaymentMethods'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport i18next from 'i18next'\nimport { useTranslation } from 'react-i18next'\nimport { CURRENCY_SYMBOLS, DECIMAL_PLACES } from 'constants/currency'\nimport { serviceTypeLabels, serviceTypeSubcategories, requestedLabels } from 'constants/services'\n\n// const channels = ['Teléfono', 'App Clientes', 'Web', 'Redes sociales', 'Correo', 'Partners B2B', 'eCommerce']\n\nconst product_columns = [\n  {\n    name: i18next.t('globalTables.customerProductColumns.family'),\n    selector: 'product.taxons',\n    hide: 'md',\n    cell: row => (\n      <span>\n        {(row.product.taxons[0] == null ? '-' : row.product.taxons[0].name)}\n      </span>\n    )\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.subFamily'),\n    selector: 'product.taxons',\n    hide: 'md',\n    cell: row => (\n      <span>\n        {(row.product.taxons[1] == null ? '-' : row.product.taxons[1].name)}\n      </span>\n    )\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.id'),\n    selector: 'serial_id',\n    sortable: true\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.tnr'),\n    selector: 'product.tnr',\n    sortable: true,\n    cell: row => (\n      <span>\n        {(row.product.tnr == '' ? '-' : row.product.tnr)}\n      </span>\n    )\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.name'),\n    selector: 'product.name',\n    sortable: true,\n    hide: 'md',\n    cell: row => (\n      <span>\n        {(row.product.name == '' ? '-' : row.product.name)}\n      </span>\n    )\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.instalationDate'),\n    selector: 'instalation_date',\n    sortable: true,\n    hide: 'md',\n    cell: row => (\n      <span>\n        {(row.reinstalation_date == null ? (row.instalation_date == null ? 'No' : date_format_without_time_and_zone(row.instalation_date)) : date_format_without_time_and_zone(row.reinstalation_date) + ' reinstalado')}\n      </span>\n    )\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.discontinuedRow.discontinued'),\n    selector: 'discontinued',\n    sortable: true,\n    hide: 'md',\n    cell: row => (\n      <span>\n        {(row.discontinued ? 'Si' : 'No')}\n      </span>\n    )\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.warrantyRow.warranty'),\n    selector: 'warranty',\n    sortable: true,\n    hide: 'md',\n    cell: row => (\n      <span>\n        {((row.warranty == null ? 'No' : 'Válida ' + date_format_without_time_and_zone(row.warranty)))}\n      </span>\n    )\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.policy'),\n    selector: 'policy',\n    sortable: true,\n    hide: 'md'\n  },\n  {\n    name: i18next.t('globalTables.customerProductColumns.status'),\n    selector: 'status',\n    sortable: true,\n    hide: 'md'\n  }\n]\n\nconst consumable_columns = [\n  {\n    name: i18next.t('globalTables.consumableColumns.tnr'),\n    selector: 'consumable.product.tnr',\n    sortable: true\n  },\n  {\n    name: i18next.t('globalTables.consumableColumns.name'),\n    selector: 'consumable.name',\n    sortable: true,\n    hide: 'sm'\n  },\n  {\n    name: i18next.t('globalTables.consumableColumns.requiredQuantity'),\n    selector: 'total_boxes_without_events',\n    sortable: true\n  }\n]\n\nfunction NewService (props) {\n  const { t } = useTranslation()\n\n  const useStyles = makeStyles(theme => createStyles({\n    previewChip: {\n      minWidth: 160,\n      maxWidth: 210\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative'\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    }\n  }))\n\n  const classes = useStyles()\n\n  const [costCenters, setCostCenters] = useState([])\n  const [selectedCostCenterId, setSelectedCostCenterId] = useState(0)\n\n  // Customer Info\n  const [customerNames, setCustomerFirstname] = useState('')\n  const [customerLastname, setCustomerLastname] = useState('')\n  const [customerSurname, setCustomerSurname] = useState('')\n  const [customerEmail, setCustomerEmail] = useState('')\n\n  // Customer\n  const [customer_id, setCustomerId] = useState('')\n  // Ship Address\n  const [zipcode, setZipcode] = useState('')\n  const [state, setState] = useState('')\n  const [delegation, setDelegation] = useState('')\n  const [colony, setColony] = useState('')\n  const [street_type, setStreettype] = useState('')\n  const [street_name, setStreetName] = useState('')\n  const [ext_number, setExtNumber] = useState('')\n  const [int_number, setIntNumber] = useState('')\n  const [phone, setPhone] = useState('')\n  const [reference, setReference] = useState('')\n  const [selectedPerson, setSelectedPerson] = useState('')\n  const [country, setCountry] = useState('MX')\n  const [canShowCurrencyField, setCanShowCurrencyField] = useState(false)\n  const [countryIVA, setCountryIVA] = useState(0.16)\n\n  const [rut, setRut] = useState('')\n  const [administrative_demarcation, setAdministrativeDemarcation] = useState({})\n  // Bill Address\n  const [zipcode_fn, setZipcodeFn] = useState('')\n  const [state_fn, setStateFn] = useState('')\n  const [delegation_fn, setDelegationFn] = useState('')\n  const [colony_fn, setColonyFn] = useState('')\n  const [street_type_fn, setStreettypeFn] = useState('')\n  const [street_name_fn, setStreetNameFn] = useState('')\n  const [ext_number_fn, setExtNumberFn] = useState('')\n  const [int_number_fn, setIntNumberFn] = useState('')\n  const [phone_fn, setPhoneFn] = useState('')\n  const [administrative_demarcation_fn, setAdministrativeDemarcationFn] = useState({})\n  // ADDITIONALS ADDRESS\n  const [additionalsAddresses, setAdditionalsAddresses] = useState([])\n  // CHECKS\n  const [personCheck, setPersonCheck] = useState('')\n  const [RUTCheck, setRUTCheck] = useState('hidden')\n  const [zipcodeCheck, setZipcodeCheck] = useState('')\n  const [delegationCheck, setDelegationCheck] = useState('')\n  const [stateLabel, setStateLabel] = useState('Estado')\n  const [colonyCheck, setColonyCheck] = useState('')\n  const [extNumberLabel, setExtNumberLabel] = useState('Número Exterior')\n  const [intNumberLabel, setIntNumberLabel] = useState('Número Interior')\n  const [country_change, setCountryChange] = useState(false)\n  // Additional Info\n  const [redirect, setRedirect] = useState(false)\n  const [firstLoad, setFirstLoad] = useState(false)\n  const [loading, setLoading] = React.useState(false)\n  // Service info\n  const [serviceID, setServiceID] = useState('')\n  const [service_type, setServiceType] = useState('')\n  const [subcategory, setSubcategory] = useState('')\n  const [requested, setRequested] = useState('')\n  const [requestChannel, setRequestChannel] = useState('')\n  const [subcategoryOptions, setSubcategoryOptions] = useState([])\n  // const [servicePriceData, setServicePriceData] = useState([]);\n  const [serviceStatus, setServiceStatus] = useState('new')\n  const [serviceFiles, setServiceFiles] = useState([])\n  const [serviceUpdated, setServiceUpdated] = useState(false)\n  const [event, setEvent] = useState({ start: '', end: '' })\n  const [technicians, setTechnicians] = useState([])\n  const [policies, setPolicies] = useState([])\n  const [currentPolicy, setCurrentPolicy] = useState('')\n  const [selectedPolicies, setSelectedPoliciesRows] = useState('')\n  const [technicians_ids, setTechniciansIds] = useState('')\n  const [techinicianNumber, setTechinicianNumber] = useState(1)\n  const [hourAmout, setHourAmout] = useState(0)\n  const [viaticAmout, setViaticAmout] = useState(0)\n  const [feeAmount, setFeeAmount] = useState(0)\n  const [oldFeeAmount, setOldFeeAmount] = useState(null)\n  const [oldViaticAmount, setOldViaticAmount] = useState(null)\n  const [oldLaborAmount, setOldLaborAmount] = useState(null)\n  const [feeAmountIncrement, setFeeAmountIncrement] = useState(0)\n  const [consumableAmount, setConsumableAmount] = useState(0)\n  const [laborAmount, setLaborAmount] = useState(0)\n  const [totalhours, setTotalhours] = useState('')\n  const [ivaAmount, setIVAAmount] = useState(0)\n  const [subtotalAmount, setSubtotalAmount] = useState(0)\n  const [totalAmount, setTotalAmount] = useState(0)\n  const [noPaymentCheck, setNoPaymentCheck] = useState(false)\n  const [noPaymentOption, setNoPaymentOption] = useState('')\n  const [selectedPaymentDate, setSelectedPaymentDate] = React.useState(new Date())\n  const [paymentData, setPaymentData] = useState([])\n  const [paymentLink, setPaymentLink] = useState('')\n  const [paymentLinkBoolean, setPaymentLinkBoolean] = useState(false)\n  const [from, setFrom] = useState('app_web')\n\n  // Distributor\n  const [distributorName, setDistributorName] = useState('')\n  const [distributorEmail, setDistributorEmail] = useState('')\n  const [distributorCheck, setDistributorCheck] = useState('hidden')\n\n  // Products\n  const [products, setProducts] = useState([])\n  const [selectedProductRows, setSelectedProductRows] = useState([])\n  const [background, setBackground] = useState('')\n  const [files, setFiles] = useState([])\n  // Comsumable\n  const [consumables, setConsumables] = useState([])\n  const [selectedConsumablesRows, setSelectedConsumablesRows] = useState([])\n\n  // Form validation\n  const [service_typeErrorMessage, setServiceTypeErrorMessage] = useState('')\n  const [subcategoryErrorMessage, setSubcategoryErrorMessage] = useState('')\n  const [requestedErrorMessage, setRequestedErrorMessage] = useState('')\n  const [requestChannelErrorMessage, setRequestChannelErrorMessage] = useState('')\n  const [backgroundErrorMessage, setBackgroundErrorMessage] = useState('')\n  const [eventErrorMessage, setEventErrorMessage] = useState('')\n  const [noPaymenErrorMessage, setNoPaymenErrorMessage] = useState('')\n  const [selectedPaymentDateErrorMessage, setSelectedPaymentDateErrorMessage] = useState('')\n  // Dirección checks\n  const [checked, setChecked] = React.useState('principal')\n  const handleToggle = (value, zipcode_t = null, administrative_demarcation_t = null) => () => {\n    if (value == 'principal') {\n      fetchServiceTotal(country, selectedProductRows.map((product) => product.id), zipcode, administrative_demarcation?.admin_name_3, true)\n    } else {\n      fetchServiceTotal(country, selectedProductRows.map((product) => product.id), zipcode_t, administrative_demarcation_t?.admin_name_3, true)\n    }\n\n    setChecked(value)\n  }\n  const [checkedFN, setCheckedFN] = React.useState('principal')\n  const handleToggleFN = (value) => () => {\n    setCheckedFN(value)\n  }\n\n  // Toggle butons\n  const [paymentChannel, setPaymentChannel] = React.useState('online')\n  const [invoiceCheck, setInvoiceCheck] = React.useState('no')\n\n  // Change total Dialog\n  const [openTotalDialog, setOpenTotalDialog] = React.useState(false)\n\n  /// ////////////////////////////////////////////////////////////////////\n  // PaymentDialog\n  const [paymentEmailAdditional, setPaymentEmailAdditional] = useState('')\n  const [isPaymentEmail, setIsPaymentEmail] = useState(false)\n  const [paymentEmailDialog, setPaymentEmailDialog] = React.useState(false)\n\n  const [toggledClearProductsRows, setoggledClearProductsRows] = useState(true)\n  const [productTableDisabled, setProductTableDisabled] = useState(false)\n\n  const handleClickOpenTotalDialog = () => {\n    setOpenTotalDialog(true)\n  }\n\n  const handleCloseTotalDialog = () => {\n    setOpenTotalDialog(false)\n  }\n\n  const handleFeeChange = (event) => {\n    setFeeAmount(Number(event.target.value.split(',').join('')))\n  }\n\n  /// ////////////////////////////////////////////////////////////////////\n  // Efects\n  /// ///////////////////////////////////////////////////////////////////\n  useEffect(() => {\n    //console.log({'requested': requestedLabels('pt')})\n    fetchServiceTotal(country, selectedProductRows.map((product) => product.id), zipcode, administrative_demarcation?.admin_name_3, true, false, null, true)\n  }, [feeAmount, laborAmount, viaticAmout, service_type])\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search)\n    async function fetchData () {\n      const costCentersFetch = await CostCenterApi.getAllCostCenters()\n      setCostCenters(costCentersFetch.data)\n\n      const userId = props.match.params.id\n      return fetch(`/api/v1/customers/${userId}`)\n        .then(response => response.json())\n        .then(json => {\n          console.log(json)\n\n          setCustomerId(json.data.id)\n          setCustomerFirstname(json.data.names)\n          setCustomerLastname(json.data.lastname)\n          setCustomerSurname(json.data.surname)\n          setCustomerEmail(json.data.email)\n          setZipcode(json.data.zipcode)\n          setState(json.data.state)\n          setDelegation(json.data.delegation)\n          setColony(json.data.colony)\n          setStreettype(json.data.street_type)\n          setStreetName(json.data.street_name)\n          setExtNumber(json.data.ext_number)\n          setIntNumber(json.data.int_number)\n          setPhone(json.data.phone)\n          setReference(json.data.reference)\n          setSelectedPerson(json.data.person_type)\n          setZipcodeFn(json.data.zipcode_fn)\n          setSelectedCostCenterId(json.data.cost_center_id)\n          setStateFn(json.data.state_fn)\n          setDelegationFn(json.data.delegation_fn)\n          setColonyFn(json.data.colony_fn)\n          setStreettypeFn(json.data.street_type_fn)\n          setStreetNameFn(json.data.street_name_fn)\n          setExtNumberFn(json.data.ext_number_fn)\n          setIntNumberFn(json.data.int_number_fn)\n          setPhoneFn(json.data.phone_fn)\n\n          if (json.data.country != null) {\n            setCountry(json.data.country.iso)\n            setCountryChange(true)\n            setCountryIVA(json.data.country.iva)\n            setCanShowCurrencyField(true)\n          }\n          setAdministrativeDemarcation(json.data.administrative_demarcation)\n          setAdministrativeDemarcationFn(json.data.administrative_demarcation_fn)\n          setRut(json.data.rut)\n          if (json.data.additional_addresses != null) {\n            setAdditionalsAddresses(json.data.additional_addresses)\n          }\n          // HANDLRE COUNTRY INFO\n          handleCountryInputs(json.data.country.iso)\n\n          // Handle service data\n          setTotalAmount(json.data.last_service.total_amount)\n          setSubtotalAmount(json.data.last_service.subtotal_amount)\n\n          setFirstLoad(true)\n\n          if (json.data.last_service.service_type) {\n            setServiceUpdated(true)\n            setServiceType(json.data.last_service.service_type)\n            handleServiceTypeChange(json.data.last_service.service_type)\n          }\n          if (json.data.last_service.subcategory) {\n            setSubcategory(json.data.last_service.subcategory)\n          }\n\n          setServiceID(json.data.last_service.id)\n          fetchServicePayments(json.data.last_service.id, 'Servicio')\n          setRequested(json.data.last_service.requested)\n          setRequestChannel(json.data.last_service.request_channel)\n          setTechinicianNumber(json.data.last_service.technicians_number)\n          setHourAmout(json.data.last_service.hour_amount)\n          setFeeAmount(json.data.last_service.fee_amount)\n          setTotalhours(json.data.last_service.total_hours)\n          setDistributorName(json.data.last_service.distributor_name)\n          setDistributorEmail(json.data.last_service.distributor_email)\n          setServiceStatus(json.data.last_service.status)\n          if (json.data.last_service.requested) {\n            setDistributorCheck(json.data.last_service.requested != 'Cliente directo' ? '' : 'hidden')\n          }\n          setSelectedProductRows(json.data.last_service.customer_products)\n          setBackground(json.data.last_service.background)\n          setNoPaymentCheck(json.data.last_service.no_payment)\n          setPaymentChannel(json.data.last_service.payment_channel)\n          setSelectedPaymentDate(json.data.last_service.payment_date)\n          setNoPaymentOption(json.data.last_service.no_payment_reason)\n          setInvoiceCheck(json.data.last_service.invoice ? 'si' : 'no')\n          if (params.has('products')) {\n            const test = params.get('products').split(',')\n            test.pop()\n            const aux = []\n            for (const i in json.data.customer_products) {\n              if (test.includes(json.data.customer_products[i].id.toString())) {\n                aux.push(json.data.customer_products[i])\n              }\n            }\n            setProducts(aux)\n          } else {\n            setProducts(json.data.customer_products)\n          }\n          setServiceFiles(json.data.last_service.file_resources)\n\n          // Polizas\n          console.log('Me traigo las polizas')\n          setPolicies(json.data.policies)\n          if (json.data.last_service && json.data.last_service.policy_id) {\n            setSelectedPoliciesRows(json.data.last_service.policy_id)\n            setCurrentPolicy(json.data.policies[0])\n          } else {\n            if (json.data.policies[0]) {\n              setSelectedPoliciesRows(json.data.policies[0].id)\n              setCurrentPolicy(json.data.policies[0])\n            }\n          }\n          if (json.data.last_service.calendar_events.length > 0) {\n            setTechnicians(json.data.last_service.technicians)\n            setEvent({ start: json.data.last_service.calendar_events[0].start_date, end: json.data.last_service.calendar_events[0].finish_date })\n          }\n          if (json.data.last_service.service_products) {\n            setSelectedConsumablesRows(json.data.last_service.service_products.map(function (consumable_row) {\n              return ({ amount: consumable_row.amount, total_boxes: consumable_row.quantity, product_id: consumable_row.product_id })\n            }))\n          }\n        })\n    }\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    if (selectedProductRows) {\n      fetchServiceTotal(country, selectedProductRows.map((product) => product.id), zipcode, administrative_demarcation?.admin_name_3, true)\n    }\n    fetchPolicyTotal(currentPolicy)\n  }, [service_type, selectedConsumablesRows])\n\n  useEffect(() => {\n    if (!serviceUpdated && service_type == 'Mantenimiento') {\n      setConsumableAmount(consumables.map(item => item.sub_total_consumable_amount_without_events).reduce((prev, curr) => prev + curr, 0))\n      setSelectedConsumablesRows(consumables.map(function (consumable_row) {\n        return ({ amount: consumable_row.sub_total_consumable_amount_without_events, total_boxes: consumable_row.total_boxes_without_events, product_id: consumable_row.consumable.product_id })\n      }))\n    } else {\n      setConsumableAmount(0)\n    }\n  }, [consumables])\n\n  useEffect(() => {\n    setPaymentLink(`${site_url(process.env.RAILS_ENV)}/payments?object_id=${serviceID}&object_class=Servicio&customer_id=${customer_id}&amount=${totalAmount}`)\n  }, [serviceID, totalAmount])\n\n  useEffect(() => {\n    if (isPaymentEmail) {\n      setPaymentEmailDialog(false)\n      if (!loading) {\n        setLoading(true)\n      }\n      saveService()\n    }\n  }, [isPaymentEmail])\n\n  useEffect(() => {\n    if (event.start != '') {\n      setServiceStatus('prescheduled')\n      fetchServiceTotal(country, selectedProductRows.map((product) => product.id), zipcode, administrative_demarcation.admin_name_3, true, null, event)\n    }\n  }, [event])\n\n  useEffect(() => {\n    fetchPolicyTotal(currentPolicy)\n  }, [currentPolicy])\n\n  /// ///////////////////////////////////////////////////////////////\n  /// Functions\n  function fetchPolicyTotal (policy_new) {\n    if (service_type == 'Póliza de Mantenimiento') {\n      if (policy_new) {\n        setSelectedProductRows(policy_new.policy_customer_products.map((policy_customer_product) => policy_customer_product.customer_product))\n        fetchServiceTotal(country, policy_new.policy_customer_products.map((policy_customer_product) => policy_customer_product.customer_product.id), zipcode, administrative_demarcation.admin_name_3, true, true)\n        setHourAmout(0)\n        setFeeAmount(policy_new.viatic_price)\n        setConsumableAmount(policy_new.items_price)\n        setLaborAmount(policy_new.labor_price)\n        setSubtotalAmount(policy_new.total_price)\n        setIVAAmount(policy_new.total_price * countryIVA)\n        setTotalAmount(policy_new.total_price * (countryIVA + 1))\n      }\n    }\n  }\n\n  function fetchServiceTotal (country_code, products_ids, zipcode_t, administrative_demarcation_name_t, from_consumables = false, from_policy = false, event_local = null, withAmountParams = false) {\n    console.log('Calculo el total')\n    console.log(event_local)\n    if (event_local) {\n      var time_diff = date_difference_in_hours(event.start, event.end)\n      console.log(time_diff)\n    }\n\n    if (products_ids.length > 0) {\n      const amountParams = {\n        viatic_value: viaticAmout,\n        fee_amount: feeAmount,\n        labor_price: laborAmount\n      }\n      let params = {\n        country: country_code,\n        products_ids: products_ids.join(','),\n        service_type,\n        subcategory,\n        zipcode: zipcode_t || '',\n        administrative_demarcation_name: administrative_demarcation_name_t || administrative_demarcation.admin_name_1\n      }\n\n      if (withAmountParams) {\n        params = { ...params, ...amountParams }\n      }\n\n      if (event_local) {\n        params.time_diff = time_diff\n      }\n\n      return axios.get(`/api/v1/services/${serviceID}/total_price`, { params })\n        .then(({ data: json }) => {\n          if (json.data) {\n            setTechinicianNumber(json.data.total_technicians)\n            setTotalhours(json.data.total_hours)\n\n            console.log(json.data)\n            if (!from_policy) {\n              if (viaticAmout != json.data.viatic_value) {\n                setViaticAmout(json.data.viatic_value)\n              }\n\n              if (feeAmount != json.data.fee_amount) {\n                setFeeAmount(json.data.fee_amount)\n              }\n\n              if (laborAmount != json.data.labor_price) {\n                setLaborAmount(json.data.labor_price)\n              }\n\n              setHourAmout(json.data.hour_amount)\n\n              if (oldFeeAmount === null) {\n                setOldFeeAmount(json.data.fee_amount)\n              }\n\n              if (oldViaticAmount === null) {\n                setOldViaticAmount(viaticAmout)\n              }\n\n              if (oldLaborAmount === null) {\n                setOldLaborAmount(json.data.labor_price)\n              }\n\n              if (service_type == 'Home Program' || (service_type == 'Reparación' && subcategory == 'Profesional')) {\n                setFeeAmountIncrement(json.data.fee_amount_increment)\n                if (time_diff && time_diff > 0) {\n                  setTotalhours(time_diff)\n                }\n              }\n            }\n            if (!firstLoad) {\n              if (service_type == 'Póliza de Mantenimiento') {\n                // setSubtotalAmount(json.data.total_amount + consumableAmount)\n                // setIVAAmount((json.data.total_amount + consumableAmount) * json.data.iva )\n                // setTotalAmount((json.data.total_amount + consumableAmount) * (1+ json.data.iva))\n              } else {\n                if (consumableAmount > 0) {\n                  setSubtotalAmount((json.data.subtotal_amount + consumableAmount))\n                  setIVAAmount((json.data.subtotal_amount + consumableAmount) * countryIVA)\n                  setTotalAmount((json.data.subtotal_amount + consumableAmount) * (countryIVA + 1))\n                } else {\n                  setIVAAmount(json.data.iva_amount)\n                  setSubtotalAmount(json.data.subtotal_amount + consumableAmount)\n                  setTotalAmount(json.data.total_amount + consumableAmount)\n                }\n              }\n            } else {\n              if (!from_policy) {\n                setIVAAmount(json.data.iva_amount)\n                setSubtotalAmount(json.data.subtotal_amount)\n                if (totalAmount != 0) {\n                  setTotalAmount(json.data.total_amount)\n                }\n              }\n            }\n            setFirstLoad(false)\n            if (!from_consumables) {\n              setConsumables(json.consumables.data.items)\n            }\n          } else {\n            console.log('No hay precio.')\n          }\n        })\n        .catch(error => console.log(error))\n    }\n  }\n\n  function fetchServicePayments (object_id, object_class) {\n    return fetch(`/api/v1/payments?object_id=${object_id}&object_class=${object_class}`)\n      .then(response => response.json())\n      .then(json => {\n        if (json.data) {\n          if (json.data.length > 0 && json.data[0].status == 'completed') {\n            setServiceStatus('paid')\n          }\n          setPaymentData(json.data)\n        } else {\n          console.log('No hay precio.')\n        }\n      })\n      .catch(error => console.log(error))\n  }\n\n  function validateForm () {\n    const messages = []\n\n    if (selectedProductRows.length == 0) {\n      messages.push(t('customer.newService.flashAlert.selectedProductRows'))\n    }\n    if (service_type == '' || service_type == null) {\n      messages.push('Debe seleccionar el tipo de servicio a solicitar')\n      setServiceTypeErrorMessage(t('customer.newService.flashAlert.serviceType'))\n    }\n    if (subcategory == '' || subcategory == null) {\n      messages.push('Debe seleccionar la subcategoria de servicio a solicitar')\n      setSubcategoryErrorMessage(t('customer.newService.flashAlert.subCategory'))\n    }\n    if (requested == '' || requested == null) {\n      messages.push('Debe indicar como fue solicitado el servicio')\n      setRequestedErrorMessage(t('customer.newService.flashAlert.requested'))\n    }\n    if (requestChannel == '' || requestChannel == null) {\n      messages.push('Debe indicar el canal de la solicitud')\n      setRequestChannelErrorMessage(t('customer.newService.flashAlert.requestChannel'))\n    }\n\n    if ((background == '' || background == null) && service_type != 'Póliza de Mantenimiento') {\n      messages.push(t('customer.newService.flashAlert.indicateProblem'))\n      setBackgroundErrorMessage('Debe indicar antecedentes del problema')\n    }\n\n    if (event.start == '' || event.start == null) {\n      messages.push(t('customer.newService.flashAlert.startDate'))\n      setEventErrorMessage('Debe seleccionar una fecha')\n    }\n\n    if (noPaymentCheck) {\n      if (noPaymentOption == '' || noPaymentOption == null) {\n        messages.push(t('customer.newService.flashAlert.noPaymentOption'))\n        setNoPaymenErrorMessage('Debe seleccionar una opcción de no pago')\n      }\n    } else {\n      if (selectedPaymentDate == '' || selectedPaymentDate == null) {\n        messages.push(t('customer.newService.flashAlert.selectedPaymentDate'))\n        setSelectedPaymentDateErrorMessage('Debe seleccionar fecha limite de pago')\n      }\n    }\n\n    if (service_type == 'Póliza de Mantenimiento' && selectedPolicies == '') {\n      messages.push(t('customer.newService.flashAlert.selectedPolicies'))\n    }\n\n    messages.forEach(element => {\n      flash_alert(t('customer.newService.flashAlert.attention'), element, 'warning')\n    })\n\n    if (messages.length > 0) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function saveService (redirect_param = true) {\n    const body = new FormData()\n    body.set('service_id', serviceID)\n    body.set('cost_center_id', selectedCostCenterId)\n    body.set('customer_id', customer_id)\n    body.set('address', checked)\n    body.set('address_fn', checkedFN)\n    body.set('service_type', service_type)\n    body.set('subcategory', subcategory)\n    body.set('requested', requested)\n    body.set('request_channel', requestChannel)\n    body.set('distributor_name', distributorName)\n    body.set('distributor_email', distributorEmail)\n    body.set('customer_products_id', selectedProductRows.map(function (product_row) {\n      return (product_row.id)\n    }))\n\n    // Service Totals\n    body.set('technicians_number', techinicianNumber)\n    body.set('hour_amount', hourAmout)\n    body.set('fee_amount', feeAmount)\n    body.set('labor_amount', laborAmount)\n    body.set('viatic_amount', viaticAmout)\n    body.set('subtotal_amount', subtotalAmount)\n    body.set('iva_amount', ivaAmount)\n    body.set('total_hours', totalhours)\n    body.set('total_amount', totalAmount)\n\n    body.set('background', background)\n    body.set('no_payment', noPaymentCheck)\n\n    body.set('payment_channel', paymentChannel)\n    body.set('payment_date', selectedPaymentDate)\n    body.set('no_payment_reason', noPaymentOption)\n    body.set('invoice', (invoiceCheck === 'si'))\n    body.set('status', serviceStatus)\n    body.set('event_start', event.start)\n    body.set('event_end', event.end)\n    body.set('technicians_ids', technicians_ids)\n    body.set('payment_state', ((paymentData.length > 0 && paymentData[0].status == 'completed') ? 'paid' : 'pending'))\n    body.set('customerEmail', customerEmail)\n    body.set('paymentEmailAdditional', paymentEmailAdditional)\n    body.set('isPaymentEmail', isPaymentEmail)\n    body.set('from', from)\n\n    if (service_type == 'Póliza de Mantenimiento') {\n      body.set('policy_id', selectedPolicies)\n    }\n\n    files.forEach((file) => {\n      body.append('images[]', JSON.stringify(file))\n    })\n\n    if (consumables) {\n      body.append('consumables[]', '{}')\n    }\n\n    selectedConsumablesRows.forEach((consumable) => {\n      body.append('consumables[]', JSON.stringify(consumable))\n    })\n\n    return axios.post(`/api/v1/customers/${customer_id}/create_service`, body, { headers })\n      .then(response => {\n        if (redirect_param) {\n          flash_alert(t('customer.newService.flashAlert.success'), t('customer.newService.flashAlert.updateSuccess'), 'success')\n        }\n        setRedirect(redirect_param)\n      })\n      .catch(e => {\n        if (e.response.data) {\n          for (const key in e.response.data) {\n            flash_alert('Error', e.response.data[key], 'danger')\n          }\n        }\n      })\n  }\n\n  /// ///////////////////////////////////////////////////////////////\n  /// Handles\n\n  const handlepaymentChannel = (event, newpaymentChannel) => {\n    setPaymentChannel(newpaymentChannel)\n  }\n  const handleInvoiceCheckChange = (event) => {\n    setInvoiceCheck(event.target.value)\n  }\n\n  const handlePaymentDateChange = (date) => {\n    setSelectedPaymentDate(date)\n  }\n\n  function handleCountryInputs (country_iso) {\n    if (country_iso == 'CL') {\n      setPersonCheck('hidden')\n      setZipcodeCheck('hidden')\n      setDelegationCheck('hidden')\n      setColonyCheck('hidden')\n      setStateLabel('Comuna/Región')\n      setExtNumberLabel('Número')\n      setIntNumberLabel('Depto')\n      setRUTCheck('')\n    } else {\n      setPersonCheck('')\n      setRUTCheck('hidden')\n      setZipcodeCheck('')\n      setDelegationCheck('')\n      setColonyCheck('')\n      setStateLabel('Estado')\n      setExtNumberLabel('Número Exterior')\n      setIntNumberLabel('Número Interior')\n    }\n  }\n\n  function handleSubmit (event) {\n    event.preventDefault()\n    if (!validateForm()) {\n      setLoading(false)\n      return false\n    }\n    if (paymentChannel == 'online' || paymentChannel == 'transfer') {\n      setPaymentEmailDialog(true)\n    } else {\n      if (!loading) {\n        setLoading(true)\n      }\n      saveService()\n    }\n  }\n\n  function handleServiceTypeChange (e) {\n    setServiceType(e)\n    const serviceTypes = serviceTypeLabels(i18next.language)\n    console.log({serviceTypes})\n    const serviceTypeKey = Object.keys(serviceTypes).find(serviceTypeLabel => serviceTypes[serviceTypeLabel].key === e)\n    setSubcategory('')\n    const subcategories = serviceTypeSubcategories(i18next.language)\n    setSubcategoryOptions(subcategories[serviceTypeKey])\n\n    if (e === 'Reparaciones en Taller') {\n      if (selectedProductRows.length > 0) {\n        setoggledClearProductsRows(false)\n      } else {\n        setoggledClearProductsRows(true)\n      }\n      setProductTableDisabled(false)\n    } else {\n      setoggledClearProductsRows(true)\n      setProductTableDisabled(false)\n    }\n  }\n\n  function handleRequestedChange (e) {\n    setRequested(e.target.value)\n    const requestedDistributor = requestedLabels(i18next.language).find(requested => requested.key === 'Distribuidor autorizado')?.key || null\n    if (e.target.value === requestedDistributor) {\n      setDistributorCheck('')\n    } else {\n      setDistributorCheck('hidden')\n    }\n  }\n\n  async function onServiceChangeFiles (e) {\n    if (e.length > 0) {\n      const dT = []\n      e.forEach(async function (item) {\n        await getBase64(item)\n          .then((encFile) => {\n            dT.push(encFile)\n            setFiles(dT)\n          }).catch(error => console.log('error'))\n      })\n    }\n  };\n\n  function handleProductRowChange (state) {\n    // setoggledClearProductsRows\n    setoggledClearProductsRows(true)\n    setSelectedProductRows(state.selectedRows)\n    fetchServiceTotal(country, state.selectedRows.map((product) => product.id), zipcode, administrative_demarcation?.admin_name_3)\n    if (service_type == 'Reparaciones en Taller' && state.selectedRows.length > 0) {\n      setProductTableDisabled(true)\n    }\n  }\n\n  function handleProductDisabledSelected () {\n    if (service_type == 'Reparaciones en Taller' && productTableDisabled && selectedProductRows.length > 0) {\n      setoggledClearProductsRows(false)\n      setProductTableDisabled(false)\n    }\n  }\n\n  function handlePolicyRowChange (policy) {\n    setCurrentPolicy(policy)\n    setSelectedPoliciesRows(policy.id)\n  }\n\n  function handleConsumableRowChange (state) {\n    if (service_type == 'Mantenimiento') {\n      setConsumableAmount(state.selectedRows.map(item => item.sub_total_consumable_amount_without_events).reduce((prev, curr) => prev + curr, 0))\n    } else {\n      setConsumableAmount(0)\n    }\n    setSelectedConsumablesRows(state.selectedRows.map(function (consumable_row) {\n      return ({ amount: consumable_row.sub_total_consumable_amount_without_events, total_boxes: consumable_row.total_boxes_without_events, product_id: consumable_row.consumable.product_id })\n    }))\n  }\n\n  function consumableSelectableRowCriteria (row) {\n    if (selectedConsumablesRows.length > 0) {\n      return selectedConsumablesRows.find(product => product.product_id === row.consumable.product_id) != undefined\n    } else {\n      return true\n    }\n  }\n\n  function handleMessage (message, type) {\n    if (type == 'error') {\n      flash_alert('', t('customer.newService.flashAlert.noFileFormat'), 'error')\n    }\n  }\n\n  function getBase64 (file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onload = () => resolve({\n        uri_64: reader.result,\n        name: file.name,\n        mime: file.type\n      })\n      reader.onerror = error => reject(error)\n    })\n  }\n\n  /// ///////////////////////////////////////////////////////////////\n\n  const redirect_check = []\n  if (redirect) {\n    redirect_check.push(\n      <Redirect key='redirect-to-customers' to={`/customers/${customer_id}/show`}><ShowCustomer setLoading={props.setLoading} headers={props.headers} match={props.match} /></Redirect>\n    )\n  }\n\n  return (\n    <>\n      {redirect_check}\n\n      <Paper className='custom-paper'>\n        <Grid container spacing={3}>\n          <Link className='mdl-navigation__link  back-link back-link' to={`/customers/${customer_id}/show`}>\n            <i className='material-icons'>keyboard_arrow_left</i> {t('globalText.back')}\n          </Link>\n          <Grid item xs={12}>\n            <h1>{t('customer.newService.serviceTo')} {customerNames} {customerLastname} {customerSurname}</h1>\n          </Grid>\n        </Grid>\n\n      </Paper>\n\n      <CustomerDetails\n        customer_id={customer_id}\n        country_names={country_names_g}\n        country={country}\n        zipcode={zipcode}\n        personCheck={personCheck}\n        selectedPerson={selectedPerson}\n        rut={rut}\n        RUTCheck={RUTCheck}\n        zipcodeCheck={zipcodeCheck}\n        stateLabel={stateLabel}\n        administrative_demarcation={administrative_demarcation}\n        state={state}\n        delegationCheck={delegationCheck}\n        delegation={delegation}\n        colony={colony}\n        street_type={street_type}\n        street_name={street_name}\n        ext_number={ext_number}\n        int_number={int_number}\n        phone={phone}\n        reference={reference}\n        additionalsAddresses={additionalsAddresses}\n        colonyCheck={colonyCheck}\n        extNumberLabel={extNumberLabel}\n        intNumberLabel={intNumberLabel}\n        headers={headers}\n      />\n\n      <br />\n\n      <ServiceInfoForm\n        costCenters={costCenters}\n        setSelectedCostCenterId={setSelectedCostCenterId}\n        selectedCostCenterId={selectedCostCenterId}\n        classes={classes}\n        service_typeErrorMessage={service_typeErrorMessage}\n        service_type={service_type}\n        handleServiceTypeChange={handleServiceTypeChange}\n        subcategoryErrorMessage={subcategoryErrorMessage}\n        subcategory={subcategory}\n        setSubcategory={setSubcategory}\n        subcategoryOptions={subcategoryOptions}\n        requestedErrorMessage={requestedErrorMessage}\n        requested={requested}\n        handleRequestedChange={handleRequestedChange}\n        requestedBy={requestedLabels(i18next.language)}\n        requestChannelErrorMessage={requestChannelErrorMessage}\n        requestChannel={requestChannel}\n        setRequestChannel={setRequestChannel}\n        distributorCheck={distributorCheck}\n        distributorName={distributorName}\n        distributorEmail={distributorEmail}\n        setDistributorName={setDistributorName}\n        setDistributorEmail={setDistributorEmail}\n        policies={policies}\n        country={country}\n        handlePolicyRowChange={handlePolicyRowChange}\n        selectedPolicies={selectedPolicies}\n        products={products}\n        product_columns={product_columns}\n        handleProductRowChange={handleProductRowChange}\n        selectedProductRows={selectedProductRows}\n        consumables={consumables}\n        consumable_columns={consumable_columns}\n        handleConsumableRowChange={handleConsumableRowChange}\n        consumableSelectableRowCriteria={consumableSelectableRowCriteria}\n        background={background}\n        setBackground={setBackground}\n        backgroundErrorMessage={backgroundErrorMessage}\n        onServiceChangeFiles={onServiceChangeFiles}\n        handleMessage={handleMessage}\n        serviceFiles={serviceFiles}\n        setServiceFiles={setServiceFiles}\n\n        toggledClearProductsRows={toggledClearProductsRows}\n        productTableDisabled={productTableDisabled}\n        handleProductDisabledSelected={handleProductDisabledSelected}\n      />\n\n      <br />\n\n      <Paper className='custom-paper'>\n        <h1 className='panel-custom-title'>{t('customer.newService.direcction')}</h1>\n\n        <List>\n\n          <ListItem key='principal' role={undefined} dense button onClick={handleToggle('principal')}>\n            <ListItemIcon className='service-address-label'>\n              <FormControlLabel\n                value='principal' control={<Radio color='primary' />} label='' checked={checked == 'principal'}\n                tabIndex={-1}\n              />\n\n            </ListItemIcon>\n            <ListItemText\n              id='radio-address-list-label-principal'\n              primary='Principal'\n              secondary={`${street_type} ${street_name}, ${ext_number} ${int_number}, ${administrative_demarcation != null ? administrative_demarcation.admin3_admin1 : state}${zipcode != '' ? (', Código Postal: ' + zipcode) : ''}`}\n            />\n            <ListItemSecondaryAction />\n          </ListItem>\n          {additionalsAddresses.map((additional_address) => {\n            const labelId = `radio-address-list-label-${additional_address.id}`\n            return (\n              <ListItem key={additional_address.id} role={undefined} dense button onClick={handleToggle(additional_address.id, additional_address.zipcode, additional_address.administrative_demarcation)}>\n                <ListItemIcon className='service-address-label'>\n                  <FormControlLabel\n                    value={additional_address.id} control={<Radio color='primary' />} label='' checked={checked == additional_address.id}\n                    tabIndex={-1}\n                  />\n\n                </ListItemIcon>\n                <ListItemText\n                  id={labelId}\n                  primary={additional_address.name}\n                  secondary={`${additional_address.street_type} ${additional_address.street_name}, ${additional_address.ext_number} ${additional_address.int_number}, ${additional_address.administrative_demarcation != null ? additional_address.administrative_demarcation.admin3_admin1 : additional_address.state}${additional_address.zipcode != '' ? (', Código Postal: ' + additional_address.zipcode) : ''}`}\n                />\n                <ListItemSecondaryAction />\n              </ListItem>\n            )\n          })}\n        </List>\n      </Paper>\n\n      <br />\n\n      <Paper className='custom-paper'>\n        <h1 className='panel-custom-title'>{t('customer.newService.diary.title')}</h1>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <p className='service-subtitle'>{t('customer.newService.diary.subTitle')}</p>\n            {(country_change) &&\n              <NewScheduleDialog\n                schedule_type='service'\n                btn_classname=''\n                btn_text={t('customer.newService.diary.calendarButton')}\n                customer_id={customer_id}\n                country={country}\n                selectedProductRows={selectedProductRows}\n                service_type={service_type}\n                subcategory={subcategory}\n                requested={requested}\n                techinicianNumber={techinicianNumber}\n                zipcode={zipcode}\n                administrative_demarcation={administrative_demarcation}\n                setTechinicianNumber={setTechinicianNumber}\n                event={event}\n                setEvent={setEvent}\n                technicians_ids={technicians_ids}\n                setTechniciansIds={setTechniciansIds}\n                saveService={saveService}\n                technicians={technicians}\n                setTechnicians={setTechnicians}\n                totalhours={totalhours}\n              />}\n            <FormHelperText className='brand-error-message'>{eventErrorMessage}</FormHelperText>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {event.start != '' &&\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <p className='service-subtitle'>{t('customer.newService.diary.selectedDate')}</p>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <span className='service-price-table-label'>{t('customer.newService.diary.dayAndHour')}</span>\n                  <span className='service-scheddule-value'>{date_event_format(event.start, event.end)}</span>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <span className='service-price-table-label'>{t('customer.newService.diary.duration')}</span>\n                  <span className='service-scheddule-value'>{date_difference_in_hours(event.start, event.end)} {pluralize('hora', date_difference_in_hours(event.start, event.end))}</span>\n                </Grid>\n                <Grid item xs={12}>\n                  <span className='service-price-table-label'>{t('customer.newService.diary.technicians')}</span>\n                  <span className='service-scheddule-value'>\n                    {technicians && technicians.map((technician, index) => (\n                      <span>\n                        {technician.user && ((technician.enterprise != '' && technician.enterprise != null) ? technician.user.fullname + ' (' + technician.enterprise + ')' : technician.user.fullname)}{index != technicians.length - 1 ? ',' : ''}&nbsp;\n                      </span>\n                    ))}\n                  </span>\n                </Grid>\n\n              </Grid>}\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <br />\n\n      <Paper className='custom-paper'>\n        <h1 className='panel-custom-title'>{t('customer.newService.paymentService.title')}</h1>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <p className='service-subtitle'>{t('customer.newService.paymentService.subTitle')}</p>\n                <FormControlLabel\n                  value={noPaymentCheck} control={<Checkbox color='primary' />} label='No hay pago' checked={noPaymentCheck}\n                  tabIndex={-1} onChange={(e) => setNoPaymentCheck(!noPaymentCheck)}\n                />\n              </Grid>\n            </Grid>\n            <Grid container spacing={2} className={noPaymentCheck ? '' : 'hidden'}>\n              <Grid item xs={12}>\n                <FormControl variant='outlined' className='MuiFormControl-fullWidth'>\n                  <InputLabel id='noPaymentOption-simple-select-outlined-label'>{t('customer.newService.paymentService.reasonForNonPayment')}</InputLabel>\n                  <Select\n                    labelId='noPaymentOption-simple-select-outlined-label'\n                    id='noPaymentOption-simple-select-outlined'\n                    value={noPaymentOption}\n                    onChange={(e) => setNoPaymentOption(e.target.value)}\n                    label={t('customer.newService.paymentService.reasonForNonPayment')}\n                    name='noPaymentOption'\n                    error={noPaymenErrorMessage != ''}\n                  >\n                    {noPaymentsOptions.map((value) => (\n                      <MenuItem key={'noPaymentOption-' + value} value={value}>{value}</MenuItem>\n                    ))}\n                  </Select>\n                  <FormHelperText className='brand-error-message'>{noPaymenErrorMessage}</FormHelperText>\n\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2} className={noPaymentCheck ? 'hidden' : ''}>\n              <Grid item xs={12}>\n                <ToggleButtonGroup\n                  value={paymentChannel}\n                  exclusive\n                  onChange={handlepaymentChannel}\n                  aria-label='text paymentChannel'\n                  className='service-payment-method-group'\n                >\n                  <ToggleButton className='service-payment-method-btn' value='online' aria-label='online'>\n                    {t('customer.newService.paymentService.paymentMethod.online')}\n                  </ToggleButton>\n\n                  <ToggleButton className='service-payment-method-btn' value='transfer' aria-label='transfer'>\n                    {t('customer.newService.paymentService.paymentMethod.transfer')}\n                  </ToggleButton>\n\n                  <ToggleButton className='service-payment-method-btn' value='phone' aria-label='phone'>\n                    {t('customer.newService.paymentService.paymentMethod.payForphone')}\n                  </ToggleButton>\n\n                  <ToggleButton className='service-payment-method-btn' value='pay_at_home' aria-label='pay_at_home'>\n                    {t('customer.newService.paymentService.paymentMethod.payAtHome')}\n                  </ToggleButton>\n\n                  <ToggleButton className='service-payment-method-btn' value='bank_deposit' aria-label='bank_deposit'>\n                    {t('customer.newService.paymentService.paymentMethod.bankDeposit')}\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </Grid>\n              <Grid item xs={12} className={paymentData.length > 0 ? '' : 'hidden'}>\n                {\n                  paymentData.length > 0 && paymentData[0].status == 'completed' ? <p>{t('customer.newService.paymentService.paymentCompleted')}</p> : ''\n                }\n              </Grid>\n              <Grid item xs={12} className={paymentChannel == 'phone' ? '' : 'hidden'}>\n                {\n                  (paymentData.length > 0 && paymentData[0].status != 'completed' && totalAmount > 0) || paymentData.length < 1\n                    ? <PaymentMethods\n                        cols={4}\n                        country={country}\n                        serviceID={serviceID}\n                        customer_id={customer_id}\n                        totalAmount={totalAmount}\n                        object_class='Servicio'\n                        onPaymentCallback={() => saveService(false)}\n                      />\n                    : <p>{t('customer.newService.paymentService.productAndService')}</p>\n                }\n              </Grid>\n              <Grid item xs={12}>\n                <CopyToClipboard\n                  text={paymentLink}\n                  onCopy={() => flash_alert(t('customer.newService.flashAlert.copied'), t('customer.newService.flashAlert.copyLinkMessage'), 'success')}\n                >\n                  <a className='mdl-navigation__link brand-primary-link '><i className='material-icons'>file_copy</i> {t('customer.newService.paymentService.copyPaymentLink')}</a>\n                </CopyToClipboard>\n              </Grid>\n              <Grid item xs={12}>\n                <p className='service-payemnt-method-p'>{t('customer.newService.paymentService.customerBill?')}</p>\n                <FormControlLabel\n                  value='si' control={\n                    <Radio\n                      checked={invoiceCheck === 'si'}\n                      onChange={handleInvoiceCheckChange}\n                      value='si'\n                      color='primary'\n                      name='radio-button-invoice-check'\n                      inputProps={{ 'aria-label': 'Si' }}\n                    />\n                } label={t('customer.newService.paymentService.yes')}\n                />\n\n                <FormControlLabel\n                  value='no' control={\n                    <Radio\n                      checked={invoiceCheck === 'no'}\n                      onChange={handleInvoiceCheckChange}\n                      value='no'\n                      color='primary'\n                      name='radio-button-invoice-check'\n                      inputProps={{ 'aria-label': 'No' }}\n                    />\n                } label={t('customer.newService.paymentService.no')}\n                />\n                {invoiceCheck === 'si' &&\n                  <div>\n                    <p className='service-payemnt-method-p'>{t('customer.newService.paymentService.generateServiceButton')}</p>\n                    <List>\n                      <ListItem key='principal' className='service-address-list-item' role={undefined} dense button onClick={handleToggleFN('principal')}>\n                        <ListItemIcon className='service-address-label'>\n                          <FormControlLabel\n                            value='principal' control={<Radio color='primary' />} label='' checked={checkedFN == 'principal'}\n                            tabIndex={-1}\n                          />\n\n                        </ListItemIcon>\n                        <ListItemText\n                          id='radio-address-list-label-principal'\n                          primary='Principal'\n                          secondary={`${street_type_fn} ${street_name_fn}, ${ext_number_fn} ${int_number_fn}, ${administrative_demarcation_fn != null ? administrative_demarcation.admin3_admin1 : state_fn}${zipcode_fn != '' ? (', Código Postal: ' + zipcode_fn) : ''}`}\n                        />\n                        <ListItemSecondaryAction />\n                      </ListItem>\n                      {/* additionalsAddresses.map((additional_address) => {\n                                            const labelId = `radio-address-list-label-${additional_address_fn.id}`;\n                                            return (\n                                            <ListItem key={additional_address.id} role={undefined} dense button onClick={handleToggle(additional_address.id)}>\n                                                <ListItemIcon className=\"service-address-label\">\n                                                <FormControlLabel value={additional_address.id} control={<Radio color=\"primary\"/>} label=\"\" checked={checked == additional_address.id}\n                                                    tabIndex={-1}\n                                                />\n\n                                                </ListItemIcon>\n                                                <ListItemText\n                                                    id={labelId}\n                                                    primary={additional_address.name}\n                                                    secondary={`${additional_address.street_type} ${additional_address.street_name}, ${additional_address.ext_number} ${additional_address.int_number}, ${additional_address.administrative_demarcation != null ?  additional_address.administrative_demarcation.admin3_admin1 : additional_address.state}${additional_address.zipcode != \"\" ? (\", Código Postal: \" + additional_address.zipcode) : \"\" }`}\n                                                />\n                                                <ListItemSecondaryAction>\n\n                                                </ListItemSecondaryAction>\n                                            </ListItem>\n                                            );\n                                        }) */}\n                    </List>\n                  </div>}\n              </Grid>\n\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <br />\n                <PaymentEmailDialog\n                  email={customerEmail}\n                  paymentEmailDialog={paymentEmailDialog}\n                  setPaymentEmailDialog={setPaymentEmailDialog}\n                  loading={loading}\n                  setLoading={setLoading}\n                  saveService={saveService}\n                  paymentEmailAdditional={paymentEmailAdditional}\n                  setPaymentEmailAdditional={setPaymentEmailAdditional}\n                  isPaymentEmail={isPaymentEmail}\n                  setIsPaymentEmail={setIsPaymentEmail}\n                />\n                <div className={classes.wrapper}>\n                  <Button id='service-save' disabled={loading} type='submit' variant='contained' color='primary' onClick={handleSubmit}>\n                    {t('customer.newService.paymentService.generateServiceButton')}\n                  </Button>\n                  {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                </div>\n\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={4} className='service-price-table-container'>\n            <p className='service-subtitle'>{t('customer.newService.paymentService.serviceDetails.title')}</p>\n\n            <span className='service-price-table-label'>{t('customer.newService.paymentService.serviceDetails.concept')}</span>\n            <span className='service-price-table-value'>{service_type}{subcategory != '' ? (', ' + subcategory) : ''}</span>\n\n            <p>\n              {t('customer.newService.paymentService.serviceDetails.totalHours')} <span className='pull-right'>{totalhours}</span>\n            </p>\n\n            <p>\n              {t('customer.newService.paymentService.serviceDetails.hourAmount')} <span className='pull-right'>{money_format(country, hourAmout)}</span>\n            </p>\n\n            <p>\n              {t('customer.newService.paymentService.serviceDetails.feeAmount')}\n              <span className='pull-right'>\n                <WarnIconValidate oldValue={oldFeeAmount} newValue={feeAmount} />\n                {\n                  canShowCurrencyField &&\n                    <CurrencyTextField\n                      style={{ width: '80px' }}\n                      onBlur={handleFeeChange}\n                      currencySymbol={CURRENCY_SYMBOLS[country]}\n                      decimalPlaces={DECIMAL_PLACES[country]}\n                      digitGroupSeparator=','\n                      value={feeAmount}\n                      outputFormat='number'\n                    />\n                }\n              </span>\n            </p>\n\n            <p>\n              {t('customer.newService.paymentService.serviceDetails.consumables')} <span className='pull-right'>{money_format(country, consumableAmount)}</span>\n            </p>\n\n            <p>\n              {t('customer.newService.paymentService.serviceDetails.laborAmount')}\n              <span className='pull-right'>\n                <WarnIconValidate oldValue={oldLaborAmount} newValue={laborAmount} />\n                {\n                  canShowCurrencyField &&\n                    <CurrencyTextField\n                      style={{ width: '80px' }}\n                      onBlur={(e) => setLaborAmount(Number(e.target.value.split(',').join('')))}\n                      currencySymbol={CURRENCY_SYMBOLS[country]}\n                      decimalPlaces={DECIMAL_PLACES[country]}\n                      digitGroupSeparator=','\n                      value={laborAmount}\n                      outputFormat='number'\n                    />\n                }\n              </span>\n            </p>\n\n            <p>\n              {t('customer.newService.paymentService.serviceDetails.viaticAmount')}\n              <span className='pull-right'>\n                <WarnIconValidate oldValue={oldViaticAmount} newValue={viaticAmout} />\n                {\n                  canShowCurrencyField &&\n                    <CurrencyTextField\n                      style={{ width: '80px' }}\n                      onBlur={(e) => setViaticAmout(Number(e.target.value.split(',').join('')))}\n                      currencySymbol={CURRENCY_SYMBOLS[country]}\n                      decimalPlaces={DECIMAL_PLACES[country]}\n                      digitGroupSeparator=','\n                      value={viaticAmout}\n                      outputFormat='number'\n                    />\n\n                }\n              </span>\n            </p>\n\n            <hr />\n            <p>\n              {t('customer.newService.paymentService.serviceDetails.subTotalAmount')} <span className='pull-right'>{money_format(country, subtotalAmount)}</span>\n            </p>\n\n            <p>\n              {t('customer.newService.paymentService.serviceDetails.ivaAmount')}<span className='pull-right'>{money_format(country, ivaAmount)}</span>\n            </p>\n\n            <hr />\n\n            <p className='totals'>\n              {t('customer.newService.paymentService.serviceDetails.totalAmount')} <span className='pull-right'>{money_format(country, Number(totalAmount))}</span>\n            </p>\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale}>\n              <KeyboardDatePicker\n                className='payment-date-input'\n                id='date-payment-dialog'\n                label={t('customer.newService.paymentService.serviceDetails.paydayLimit')}\n                format='dd/MM/yyyy'\n                value={selectedPaymentDate}\n                onChange={handlePaymentDateChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date'\n                }}\n              />\n              <FormHelperText className='brand-error-message'>{selectedPaymentDateErrorMessage}</FormHelperText>\n            </MuiPickersUtilsProvider>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  )\n}\n\nconst structuredSelector = createStructuredSelector({})\nconst mapDispatchToProps = {}\nexport default connect(structuredSelector, mapDispatchToProps)(NewService)\n"]},"metadata":{},"sourceType":"module"}