{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/ServicePrediagnosis.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { is_TM, is_CS } from \"constants/user_functions\";\nimport { flash_alert } from 'components/App';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //Accordeon \n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MaterialTable from 'react-data-table-component';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nfunction ServicePrediagnosis(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    defaultExpanded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel2a-content\",\n    id: \"paneladditional-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, t('services.preDiagnostic.title'))), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, t('services.preDiagnostic.subTitle'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    noHeader: true,\n    columns: props.spare_part_columns,\n    data: props.spare_parts,\n    progressPending: props.userLoading,\n    progressComponent: /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 75,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 52\n      }\n    }),\n    responsive: true,\n    highlightOnHover: true,\n    striped: true,\n    contextMessage: {\n      singular: 'producto',\n      plural: 'productos',\n      message: 'seleccionados'\n    },\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  })), props.canAddSparePart && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, t('services.preDiagnostic.addSpareParts'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    display: props.displayProducTable,\n    p: 0,\n    m: 0,\n    bgcolor: \"background.paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    className: props.classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: \"white-bg padding-sides-5 table-search-label\",\n    htmlFor: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }, t('globalText.filterFor')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"search\",\n    type: \"text\",\n    className: \"table-search-input\",\n    value: props.filterText,\n    onChange: props.changeFilterText,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      className: \"table-search-end\",\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: props.handleClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 50\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    display: props.displayProducTable,\n    p: 0,\n    m: 0,\n    bgcolor: \"background.paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    id: \"add-customer-product\",\n    onClick: props.handleAddSparePart,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 41\n    }\n  }, t('services.preDiagnostic.addSpareParts'))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    display: props.displayProducTable,\n    p: 0,\n    m: 0,\n    bgcolor: \"background.paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    noHeader: true,\n    columns: props.products_columns,\n    data: props.products,\n    progressPending: props.userLoading,\n    progressComponent: /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 75,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 60\n      }\n    }),\n    pagination: true,\n    paginationServer: true,\n    responsive: true,\n    onChangeRowsPerPage: props.handleProductsPerRowsChange,\n    onChangePage: props.handleProductsPageChange,\n    onSelectedRowsChange: props.handleProductRowChange,\n    paginationTotalRows: props.total,\n    highlightOnHover: true,\n    striped: true,\n    selectableRows: true,\n    selectableRowsComponent: Checkbox,\n    selectableRowsComponentProps: {\n      className: \"product-checkbox\",\n      color: \"primary\"\n    },\n    contextMessage: {\n      singular: 'producto',\n      plural: 'productos',\n      message: 'seleccionados'\n    },\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    disabled: props.checkBackgroundPrediagnosis || !is_TM(props.current_user),\n    rows: 8,\n    label: t('services.preDiagnostic.backgroundPrediagnosis'),\n    name: \"backgroundPrediagnosis\",\n    value: props.backgroundPrediagnosis,\n    onChange: function onChange(e) {\n      return props.setBackgroundPrediagnosis(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: props.classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"service-save\",\n    disabled: props.loading || props.checkBackgroundPrediagnosis || !is_TM(props.current_user),\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: props.handlePrediagnosisSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, t('services.preDiagnostic.saveAndSendButton')), props.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: props.classes.buttonProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 55\n    }\n  }))))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(ServicePrediagnosis);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/ServicePrediagnosis.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","TextField","Grid","FormControl","Button","Link","Checkbox","FormControlLabel","is_TM","is_CS","flash_alert","CircularProgress","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","MaterialTable","Box","InputLabel","OutlinedInput","InputAdornment","IconButton","Close","useTranslation","i18next","ServicePrediagnosis","props","t","spare_part_columns","spare_parts","userLoading","singular","plural","message","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","canAddSparePart","displayProducTable","classes","root","filterText","changeFilterText","handleClear","handleAddSparePart","products_columns","products","handleProductsPerRowsChange","handleProductsPageChange","handleProductRowChange","total","className","color","checkBackgroundPrediagnosis","current_user","backgroundPrediagnosis","e","setBackgroundPrediagnosis","target","value","wrapper","loading","handlePrediagnosisSubmit","buttonProgress","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {is_TM, is_CS} from \"constants/user_functions\"\nimport { flash_alert } from 'components/App';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n//Accordeon \nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport MaterialTable from 'react-data-table-component';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\n\nfunction ServicePrediagnosis(props){\n    const {t} = useTranslation();\n\n\treturn (\n\t\t<React.Fragment>\n\n            <Accordion defaultExpanded>\n                <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel2a-content\"\n                id=\"paneladditional-header\"\n                >\n                <h1 className=\"panel-custom-title\">{t('services.preDiagnostic.title')}</h1>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <p className=\"service-subtitle\">{t('services.preDiagnostic.subTitle')}</p>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <MaterialTable\n                                noHeader={true}\n                                columns={props.spare_part_columns}\n                                data={props.spare_parts}\n                                progressPending={props.userLoading}\n                                progressComponent={<CircularProgress size={75} />}\n                                responsive={true}\n                                highlightOnHover={true}\n                                striped={true}\n                                contextMessage={{ singular: 'producto', plural: 'productos', message: 'seleccionados' }}\n                                noDataComponent={i18next.t('globalText.NoDataComponent')}\n                                paginationComponentOptions={{rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n                            />\n                        </Grid>\n                \n                        { props.canAddSparePart &&\n                            <>\n                            <Grid item xs={12}>\n                                <p className=\"service-subtitle\">{t('services.preDiagnostic.addSpareParts')}</p>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <Box component=\"span\" display={props.displayProducTable} p={0} m={0} bgcolor=\"background.paper\">\n                                <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\" className={props.classes.root}>\n                                    <FormControl variant=\"outlined\" fullWidth>\n                                    <InputLabel className=\"white-bg padding-sides-5 table-search-label\"  htmlFor=\"search\">{t('globalText.filterFor')}</InputLabel>\n                                    <OutlinedInput\n                                        id=\"search\"\n                                        type= \"text\"\n                                        className=\"table-search-input\"\n                                        value={props.filterText}\n                                        onChange={props.changeFilterText}\n                                        endAdornment={\n                                            <InputAdornment className=\"table-search-end\" position=\"end\" >\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={props.handleClear}\n                                                    >\n                                                {<Close />}\n                                                </IconButton>\n                                            \n                                            </InputAdornment>\n                                        }\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <Grid container spacing={1} direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n                                    <Box component=\"span\" display={props.displayProducTable} p={0} m={0} bgcolor=\"background.paper\">\n                                        <Button variant=\"contained\" id=\"add-customer-product\" onClick={props.handleAddSparePart} color=\"primary\">\n                                            {t('services.preDiagnostic.addSpareParts')}\n                                        </Button>\n                                    </Box>\n                                </Grid>\n                            </Grid>\n                            \n                            <Grid item xs={12}>\n                                <Box component=\"span\" display={props.displayProducTable} p={0} m={0} bgcolor=\"background.paper\">\n                                    <MaterialTable\n                                        noHeader={true}\n                                        columns={props.products_columns}\n                                        data={props.products}\n                                        progressPending={props.userLoading}\n                                        progressComponent={<CircularProgress size={75} />}\n                                        pagination\n                                        paginationServer\n                                        responsive={true}\n                                        onChangeRowsPerPage={props.handleProductsPerRowsChange}\n                                        onChangePage={props.handleProductsPageChange}\n                                        onSelectedRowsChange={props.handleProductRowChange}\n                                        paginationTotalRows={props.total}\n                                        highlightOnHover={true}\n                                        striped={true}\n                                        selectableRows\n                                        selectableRowsComponent={Checkbox}\n                                        selectableRowsComponentProps={{ className: \"product-checkbox\", color: \"primary\" }}\n                                        contextMessage={{ singular: 'producto', plural: 'productos', message: 'seleccionados' }}\n                                        noDataComponent={i18next.t('globalText.NoDataComponent')}\n                                        paginationComponentOptions={{rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n                                    />\n                                \n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField fullWidth variant=\"outlined\" multiline disabled={props.checkBackgroundPrediagnosis || !is_TM(props.current_user)} rows={8} label={t('services.preDiagnostic.backgroundPrediagnosis')} name=\"backgroundPrediagnosis\" value={props.backgroundPrediagnosis} onChange={(e) => props.setBackgroundPrediagnosis(e.target.value)} />\n                            </Grid>\n                            <Grid item xs={12}>\n                            \n                                <div className={props.classes.wrapper}>\n                                    <Button id=\"service-save\" disabled={props.loading || props.checkBackgroundPrediagnosis || !is_TM(props.current_user)} type=\"submit\" variant=\"contained\" color=\"primary\" onClick={props.handlePrediagnosisSubmit}>\n                                    {t('services.preDiagnostic.saveAndSendButton')}\n                                    </Button>\n                                    {props.loading && <CircularProgress size={24} className={props.classes.buttonProgress} />}\n                                </div>\n                            </Grid>\n                                \n                            </>\n                        }\n                    </Grid>\n                    \n\n                </AccordionDetails>\n            </Accordion>\n                \n\n\t\t    \n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({\n});\nconst mapDispatchToProps = {};\n\nexport default connect(structuredSelector, mapDispatchToProps)(ServicePrediagnosis)\n"]},"metadata":{},"sourceType":"module"}