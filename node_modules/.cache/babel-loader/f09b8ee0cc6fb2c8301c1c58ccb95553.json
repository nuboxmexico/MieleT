{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/LanguageSwitcher/index.jsx\";\nimport React, { useEffect } from 'react';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport { MenuItem, Select, InputAdornment, FormControl, styled } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nfunction LanguageSwitcher() {\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var subdomainRegex = /^\\w{2}\\./;\n  var CustomSelect = styled(Select)({\n    '& .MuiSelect-select:focus': {\n      backgroundColor: 'transparent'\n    }\n  });\n  var selectLabel = {\n    es: 'ES',\n    pt: 'PT'\n  };\n  var subdomainPerLanguage = {\n    es: '',\n    pt: 'br.'\n  };\n\n  function handleChange(e) {\n    var lang = e.target.value;\n    i18n.changeLanguage(lang);\n    var redirectUri = window.location.host.replace(subdomainRegex, '');\n    redirectUri = subdomainPerLanguage[lang] + redirectUri;\n    console.log({\n      redirectUri: redirectUri,\n      host: window.location.host\n    });\n\n    if (window.location.host !== redirectUri) {\n      window.location.host = redirectUri;\n    }\n  } // Set the language by the subdomain\n\n\n  useEffect(function () {\n    var _window$location$host;\n\n    // Get the subdomain from the url\n    // If there is no subdomain, set the language to spanish\n    // example: \"br.\"\n    var subdomain = (_window$location$host = window.location.host.match(subdomainRegex)) === null || _window$location$host === void 0 ? void 0 : _window$location$host.toString();\n    if (!subdomain) return i18n.changeLanguage('es');\n    var newLanguage = Object.keys(subdomainPerLanguage).filter(function (key) {\n      return subdomainPerLanguage[key] === subdomain;\n    });\n    i18n.changeLanguage(newLanguage);\n  }, []);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    disableUnderline: true,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      style: {\n        marginRight: '3px',\n        marginBottom: '3px'\n      },\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(LanguageIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })),\n    variant: \"standard\",\n    color: \"secondary\",\n    value: i18n.language,\n    defaultValue: \"es\",\n    onChange: handleChange,\n    renderValue: function renderValue(value) {\n      return selectLabel[value];\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"es\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Espa\\xF1ol\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"pt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Portugu\\xE9s\")));\n}\n\nexport default LanguageSwitcher;","map":{"version":3,"sources":["/usr/src/app/javascript/components/LanguageSwitcher/index.jsx"],"names":["React","useEffect","LanguageIcon","MenuItem","Select","InputAdornment","FormControl","styled","useTranslation","LanguageSwitcher","i18n","subdomainRegex","CustomSelect","backgroundColor","selectLabel","es","pt","subdomainPerLanguage","handleChange","e","lang","target","value","changeLanguage","redirectUri","window","location","host","replace","console","log","subdomain","match","toString","newLanguage","Object","keys","filter","key","marginRight","marginBottom","language"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport LanguageIcon from '@material-ui/icons/Language'\nimport { MenuItem, Select, InputAdornment, FormControl, styled } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nfunction LanguageSwitcher () {\n  const { i18n } = useTranslation()\n  const subdomainRegex = /^\\w{2}\\./\n\n  const CustomSelect = styled(Select)({\n    '& .MuiSelect-select:focus': {\n      backgroundColor: 'transparent'\n    }\n  })\n\n  const selectLabel = {\n    es: 'ES',\n    pt: 'PT'\n  }\n\n  const subdomainPerLanguage = {\n    es: '',\n    pt: 'br.'\n  }\n\n  function handleChange (e) {\n    const lang = e.target.value\n    i18n.changeLanguage(lang)\n\n    let redirectUri = window.location.host.replace(subdomainRegex, '')\n    redirectUri = subdomainPerLanguage[lang] + redirectUri\n    console.log({ redirectUri, host: window.location.host })\n    if (window.location.host !== redirectUri) {\n      window.location.host = redirectUri\n    }\n  }\n\n  // Set the language by the subdomain\n  useEffect(() => {\n    // Get the subdomain from the url\n    // If there is no subdomain, set the language to spanish\n    // example: \"br.\"\n    const subdomain = window.location.host.match(subdomainRegex)?.toString()\n\n    if (!subdomain) return i18n.changeLanguage('es')\n\n    const newLanguage = Object.keys(subdomainPerLanguage).filter(key => subdomainPerLanguage[key] === subdomain)\n\n    i18n.changeLanguage(newLanguage)\n  }, [])\n\n  return (\n    <FormControl>\n      <CustomSelect\n        disableUnderline\n        startAdornment={\n          <InputAdornment style={{ marginRight: '3px', marginBottom: '3px' }} position='end'>\n            <LanguageIcon />\n          </InputAdornment>\n        }\n        variant='standard'\n        color='secondary'\n        value={i18n.language}\n        defaultValue='es'\n        onChange={handleChange}\n        renderValue={value => selectLabel[value]}\n      >\n        <MenuItem value='es'>Español</MenuItem>\n        <MenuItem value='pt'>Portugués</MenuItem>\n      </CustomSelect>\n    </FormControl>\n  )\n}\n\nexport default LanguageSwitcher\n"]},"metadata":{},"sourceType":"module"}