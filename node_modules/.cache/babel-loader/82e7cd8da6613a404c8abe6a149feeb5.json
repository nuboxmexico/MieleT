{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/quotations/QuotationPayments.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { flash_alert } from 'components/App';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport QuotationPaymentDetail from \"components/services/quotations/QuotationPaymentDetail\";\n\nfunction QuotationPayments(props) {\n  var useStyles = makeStyles(function (theme) {\n    return createStyles({\n      previewChip: {\n        minWidth: 160,\n        maxWidth: 210\n      },\n      wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative'\n      },\n      buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12\n      }\n    });\n  });\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      paymentData = _useState2[0],\n      setPaymentData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visit = _useState4[0],\n      setVisit = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      paymentDate = _useState8[0],\n      setPaymentDate = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      paymentType = _useState10[0],\n      setPaymentType = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      paymentTime = _useState12[0],\n      setPaymentTime = _useState12[1];\n\n  useEffect(function () {\n    fetchVisitsPayments(props.quotation.id, \"Cotizacion\", props.quotation.service_id);\n  }, []);\n\n  function fetchVisitsPayments(_x, _x2) {\n    return _fetchVisitsPayments.apply(this, arguments);\n  }\n\n  function _fetchVisitsPayments() {\n    _fetchVisitsPayments = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(object_id, object_class) {\n      var service_id,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              service_id = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n              setLoading(true);\n              return _context.abrupt(\"return\", fetch(\"/api/v1/payments?object_id=\".concat(object_id, \"&object_class=\").concat(object_class, \"&service_id=\").concat(service_id)).then(function (response) {\n                return response.json();\n              }).then(function (json) {\n                if (json.data) {\n                  setPaymentData(json.data);\n\n                  if (json.data[0] != undefined) {\n                    var payment_date = json.data[0].created_at; //test[7].split('=>')\n\n                    //test[7].split('=>')\n                    payment_date = payment_date.split(\"-\");\n                    var payment_time = json.data[0].created_at.split(\":\");\n                    setPaymentTime(payment_time[0].split(\"T\")[1] + \":\" + payment_time[1] + \":\" + payment_time[2].split(\".\")[0]);\n                    setPaymentDate(payment_date[1] + \"/\" + payment_date[2].substr(0, 2) + \"/\" + payment_date[0]);\n                    var test = json.data[0].provider_params && json.data[0].provider_params.split(',') || null;\n\n                    if (json.data[0].payment_method_id == 1 && test) {\n                      //WEBPAY\n                      var payment_type_code = test[9].split('=>');\n\n                      if (payment_type_code[1] == '\"VD\"') {\n                        setPaymentType(\"Débito\");\n                      }\n\n                      if (payment_type_code[1] == '\"NC\"') {\n                        var installments_number = test[12].split('=>');\n                        setPaymentType(\"Cŕedito - \" + installments_number[1].substr(0, installments_number[1].length - 1) + \" cuotas\");\n                      }\n                    }\n                  }\n\n                  fetchVisit(props.quotation.visit_id);\n                } else {\n                  console.log(\"No hay precio.\");\n                }\n\n                setLoading(false);\n              })[\"catch\"](function (error) {\n                return console.log(error) && setLoading(false);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchVisitsPayments.apply(this, arguments);\n  }\n\n  function fetchVisit(_x3) {\n    return _fetchVisit.apply(this, arguments);\n  }\n\n  function _fetchVisit() {\n    _fetchVisit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(visit_id) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              return _context2.abrupt(\"return\", fetch(\"/api/v1/visits/\".concat(visit_id)).then(function (response) {\n                return response.json();\n              }).then(function (json) {\n                if (json.data) {\n                  setVisit(json.data);\n                } else {\n                  console.log(\"No se encontró la visita\");\n                }\n\n                setLoading(false);\n              })[\"catch\"](function (error) {\n                return console.log(error) && setLoading(false);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchVisit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }), paymentData.length > 0 && /*#__PURE__*/React.createElement(QuotationPaymentDetail, {\n    serviceID: props.serviceID,\n    loading: loading,\n    setLoading: setLoading,\n    serviceStatusLabel: props.serviceStatusLabel,\n    validatePayment: props.validatePayment,\n    paymentTime: paymentTime,\n    quotation: props.quotation,\n    paymentType: paymentType //\n    ,\n    paymentDate: paymentDate //\n    ,\n    paymentData: paymentData //\n    ,\n    visit: visit //\n    ,\n    paymentChannel: props.paymentChannel //\n    ,\n    country: props.country //\n    ,\n    totalAmount: props.totalAmount //\n    ,\n    noPaymentCheck: props.noPaymentCheck //\n    ,\n    validated_payment: props.validated_payment //\n    ,\n    invoiceCheck: props.invoiceCheck //\n    // Totals\n    ,\n    selectedPaymentDate: props.selectedPaymentDate //\n    ,\n    customerPaymentDate: props.customerPaymentDate //\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }) || /*#__PURE__*/React.createElement(QuotationPaymentDetail, {\n    callbacks: props.callbacks,\n    serviceID: props.serviceID,\n    loading: loading,\n    setLoading: setLoading,\n    serviceStatusLabel: props.serviceStatusLabel,\n    paymentTime: paymentTime,\n    quotation: props.quotation,\n    paymentType: paymentType,\n    paymentDate: paymentDate,\n    paymentData: paymentData,\n    visit: props.visit,\n    paymentChannel: props.paymentChannel,\n    country: props.country,\n    totalAmount: props.totalAmount,\n    noPaymentCheck: props.noPaymentCheck,\n    validated_payment: props.validated_payment,\n    invoiceCheck: props.invoiceCheck // Totals\n    ,\n    selectedPaymentDate: props.selectedPaymentDate,\n    customerPaymentDate: props.customerPaymentDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(QuotationPayments);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/quotations/QuotationPayments.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","flash_alert","createStyles","makeStyles","CircularProgress","QuotationPaymentDetail","QuotationPayments","props","useStyles","theme","previewChip","minWidth","maxWidth","wrapper","margin","spacing","position","buttonProgress","top","left","marginTop","marginLeft","classes","paymentData","setPaymentData","visit","setVisit","loading","setLoading","paymentDate","setPaymentDate","paymentType","setPaymentType","paymentTime","setPaymentTime","fetchVisitsPayments","quotation","id","service_id","object_id","object_class","fetch","then","response","json","data","undefined","payment_date","created_at","split","payment_time","substr","test","provider_params","payment_method_id","payment_type_code","installments_number","length","fetchVisit","visit_id","console","log","error","serviceID","serviceStatusLabel","validatePayment","paymentChannel","country","totalAmount","noPaymentCheck","validated_payment","invoiceCheck","selectedPaymentDate","customerPaymentDate","callbacks","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\";\nimport { flash_alert } from 'components/App';\n\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport QuotationPaymentDetail from \"components/services/quotations/QuotationPaymentDetail\";\n\nfunction QuotationPayments(props){\n    const useStyles = makeStyles(theme => createStyles({\n\t\tpreviewChip: {\n\t\tminWidth: 160,\n\t\tmaxWidth: 210\n        },\n        wrapper: {\n            margin: theme.spacing(1),\n            position: 'relative',\n        },\n        buttonProgress: {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            marginTop: -12,\n            marginLeft: -12,\n        },\n    }));\n    \n    const classes = useStyles();\n    \n    const [paymentData, setPaymentData] = useState([]);\n    const [visit, setVisit] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [paymentDate, setPaymentDate] = useState(\"\");\n    const [paymentType, setPaymentType] = useState();\n    const [paymentTime, setPaymentTime] = useState(\"\");\n\n    useEffect(() => {\n        fetchVisitsPayments(props.quotation.id, \"Cotizacion\", props.quotation.service_id)\n    }, []);\n\n    async function fetchVisitsPayments(object_id, object_class, service_id = null){\n        setLoading(true)\n        return fetch(`/api/v1/payments?object_id=${object_id}&object_class=${object_class}&service_id=${service_id}`)\n        .then(response => response.json())\n        .then(json => {\n            if(json.data){\n                setPaymentData(json.data)\n                if (json.data[0] != undefined){ \n                    var payment_date = json.data[0].created_at//test[7].split('=>')\n                    payment_date = payment_date.split(\"-\")\n                    var payment_time = json.data[0].created_at.split(\":\")\n                    setPaymentTime(payment_time[0].split(\"T\")[1]+\":\" + payment_time[1] + \":\"+payment_time[2].split(\".\")[0]);\n                    setPaymentDate(payment_date[1]+\"/\"+payment_date[2].substr(0,2)  +\"/\"+payment_date[0])\n                    var test = json.data[0].provider_params && json.data[0].provider_params.split(',') || null\n                    if (json.data[0].payment_method_id == 1 && test){//WEBPAY\n                        var payment_type_code = test[9].split('=>')\n                        if (payment_type_code[1] == '\"VD\"'){\n                            setPaymentType(\"Débito\")\n                        }\n                        if (payment_type_code[1] == '\"NC\"'){\n                            var installments_number = test[12].split('=>')\n                            setPaymentType(\"Cŕedito - \"+installments_number[1].substr(0,installments_number[1].length-1)+ \" cuotas\")\n                        }\n                    }\n                }\n                fetchVisit(props.quotation.visit_id)\n                \n            }else{\n                console.log(\"No hay precio.\")\n            }\n            setLoading(false)\n        })\n        .catch(error => console.log(error) && setLoading(false));\n    }\n\n    async function fetchVisit(visit_id){\n        setLoading(true)\n        return fetch(`/api/v1/visits/${visit_id}`)\n        .then(response => response.json())\n        .then(json => {\n            if(json.data){\n                setVisit(json.data)\n            }else{\n                console.log(\"No se encontró la visita\")\n            }\n            setLoading(false)\n        })\n        .catch(error => console.log(error) && setLoading(false));\n    }\n\n    \n\treturn (\n\t\t<React.Fragment>\n                {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                        \n                {paymentData.length > 0 &&\n                    <QuotationPaymentDetail\n                        serviceID={props.serviceID}\n                        loading={loading}\n                        setLoading={setLoading}\n                        serviceStatusLabel={props.serviceStatusLabel}\n                        validatePayment={props.validatePayment}\n                        paymentTime = {paymentTime}\n                        quotation = {props.quotation}\n                        paymentType = {paymentType} //\n                        paymentDate = {paymentDate} //\n                        paymentData={paymentData} //\n                        visit={visit} //\n                        paymentChannel={props.paymentChannel}//\n                        country={props.country} //\n                        totalAmount={props.totalAmount} //\n                        noPaymentCheck={props.noPaymentCheck} //\n                        validated_payment={props.validated_payment} //\n                        invoiceCheck={props.invoiceCheck} //\n                        // Totals\n                        selectedPaymentDate={props.selectedPaymentDate} //\n                        customerPaymentDate={props.customerPaymentDate} //\n                    />\n                    ||\n                    <QuotationPaymentDetail\n                        callbacks={props.callbacks}\n                        serviceID={props.serviceID}\n                        loading={loading}\n                        setLoading={setLoading}\n                        serviceStatusLabel={props.serviceStatusLabel}\n                        paymentTime = {paymentTime}\n                        quotation = {props.quotation}\n                        paymentType = {paymentType}\n                        paymentDate = {paymentDate}\n                        paymentData={paymentData}\n                        visit={props.visit}\n                        paymentChannel={props.paymentChannel}\n                        country={props.country}\n                        totalAmount={props.totalAmount}\n                        noPaymentCheck={props.noPaymentCheck}\n                        validated_payment={props.validated_payment}\n                        invoiceCheck={props.invoiceCheck}\n \n                        // Totals\n                        selectedPaymentDate={props.selectedPaymentDate}\n                        customerPaymentDate={props.customerPaymentDate}\n                    />\n                    \n                }\n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({\n});\nconst mapDispatchToProps = {};\n\nexport default connect(structuredSelector, mapDispatchToProps)(QuotationPayments)\n\n"]},"metadata":{},"sourceType":"module"}