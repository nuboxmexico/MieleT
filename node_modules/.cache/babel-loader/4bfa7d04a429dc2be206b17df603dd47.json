{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/calendars/Calendar.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport EventColors from './EventColors';\nimport Paper from '@material-ui/core/Paper';\nimport FullCalendar from '@fullcalendar/react';\nimport EventTooltip from './EventTooltip';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timegridPlugin from \"@fullcalendar/timegrid\";\nimport { headers } from \"constants/csrf\";\nimport esLocale from \"@fullcalendar/core/locales/es\";\nimport ptLocale from \"@fullcalendar/core/locales/pt\";\nimport Grid from '@material-ui/core/Grid';\nimport ReactCountryFlag from \"react-country-flag\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Box } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\nimport TechnicianFilter from './TechnicianFilter';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useCountries from 'hooks/useCountries';\nvar GET_CALENDAR_EVENTS_REQUEST = \"GET_CALENDAR_EVENTS_REQUEST\";\nvar GET_CALENDAR_EVENTS_SUCCESS = \"GET_CALENDAR_EVENTS_SUCCESS\";\nvar countries = [\"MX\", \"CL\"];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    buttonProgressAbsolute: {\n      position: 'absolute',\n      left: '50%',\n      top: '40%'\n    },\n    pRelative: {\n      position: 'relative'\n    }\n  };\n});\n/*\n npm install --save @fullcalendar/react @fullcalendar/daygrid\n npm install --save @fullcalendar/interaction\n npm install --save @fullcalendar/core\n npm install --save @fullcalendar/timegrid\n npm install --save @fullcalendar/daygrid\n yarn install --check-files\n*/\n\nvar Transition = /*#__PURE__*/React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }));\n});\n\nfunction getCalendarEvents(country_iso) {\n  var technician_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var calendar_start_date = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var calendar_finish_date = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var setLoading = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  // const url = technician_ids === null ? `api/v1/calendar_events?country=${country_iso}&all=1` : `api/v1/technician_calendar_events?technician_id=${technician_ids}`\n  setLoading && setLoading(true);\n  var url = \"api/v1/technician_calendar_events?technician_id=\".concat(technician_ids, \"&calendar_start_date=\").concat(calendar_start_date, \"&calendar_finish_date=\").concat(calendar_finish_date);\n\n  if (technician_ids === null) {\n    return function (dispatch) {\n      dispatch(getCalendarEventsSuccess([]));\n    };\n  } else {\n    return function (dispatch) {\n      dispatch({\n        type: GET_CALENDAR_EVENTS_REQUEST\n      });\n      return fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return dispatch(getCalendarEventsSuccess(json)) && setLoading && setLoading(false);\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    };\n  }\n}\n\n;\nexport function getCalendarEventsSuccess(json) {\n  console.log(json);\n  return {\n    type: GET_CALENDAR_EVENTS_SUCCESS,\n    json: json\n  };\n}\n;\n\nfunction Calendar(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n,\n      t = _useTranslation.t;\n\n  var _useCountries = useCountries(),\n      countryCodes = _useCountries.isos,\n      countries = _useCountries.data,\n      loadingCountries = _useCountries.loading;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var classes = useStyles();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tecnicos = _useState6[0],\n      setTecnicos = _useState6[1];\n\n  var _useState7 = useState(new Date()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      start_date = _useState8[0],\n      setStartDate = _useState8[1];\n\n  var _useState9 = useState(new Date()),\n      _useState10 = _slicedToArray(_useState9, 2),\n      finish_date = _useState10[0],\n      setFinishDate = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      calendar_start_date = _useState12[0],\n      setCalendarStartDate = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      calendar_finish_date = _useState14[0],\n      setCalendarFinishDate = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allDay = _useState16[0],\n      setAllDay = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      country = _useState18[0],\n      setCountry = _useState18[1];\n\n  var _useState19 = useState({}),\n      _useState20 = _slicedToArray(_useState19, 2),\n      eventColors = _useState20[0],\n      setEventColors = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      load = _useState22[0],\n      setLoad = _useState22[1];\n\n  var calendarRef = /*#__PURE__*/React.createRef(\"\");\n\n  function getEventColors() {\n    return _getEventColors.apply(this, arguments);\n  }\n\n  function _getEventColors() {\n    _getEventColors = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get('api/v1/calendar_events/colors', {\n                headers: headers\n              });\n\n            case 2:\n              _yield$axios$get = _context2.sent;\n              data = _yield$axios$get.data;\n              setEventColors(data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getEventColors.apply(this, arguments);\n  }\n\n  function getAllTechnicians() {\n    return _getAllTechnicians.apply(this, arguments);\n  }\n\n  function _getAllTechnicians() {\n    _getAllTechnicians = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$axios$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.get('api/v1/all_technicians', {\n                headers: headers\n              });\n\n            case 2:\n              _yield$axios$get2 = _context3.sent;\n              data = _yield$axios$get2.data;\n              setTecnicos(data);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _getAllTechnicians.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    var user_country = country;\n\n    if (props.current_user) {\n      if (props.current_user.country != \"\" && props.current_user.country != null) {\n        user_country = props.current_user.country;\n        setCountry(user_country);\n      }\n    }\n  }, []);\n  useEffect(function () {\n    var user_country = country;\n\n    if (user_country != null && user_country != \"\") {\n      var fetchData = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(country) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function fetchData(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(); //fetchData(user_country);\n\n    }\n  }, [country]);\n\n  var handleDateClick = function handleDateClick(arg) {\n    // bind with an arrow function\n    console.log(arg); //alert(arg.dateStr)\n  };\n\n  var handleDateSelect = function handleDateSelect(arg) {\n    // bind with an arrow function\n    console.log(arg);\n    setStartDate(arg.start);\n    setFinishDate(arg.end);\n    setAllDay(arg.allDay);\n  };\n\n  var handleDateUnselect = function handleDateUnselect(arg) {\n    // bind with an arrow function\n    console.log(arg);\n  };\n\n  var handleCountryChange = function handleCountryChange(event) {\n    setCountry(event.target.value); // props.getCalendarEvents(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, t('calendar.title')), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginRight: '14px'\n    },\n    className: \"country-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: 300\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: \"white-bg padding-sides-5\",\n    htmlFor: \"select-multiple-chip-country\",\n    id: \"country-chip-multiple-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }), !loadingCountries && /*#__PURE__*/React.createElement(Select, {\n    id: \"country-chip\",\n    value: country,\n    onChange: handleCountryChange,\n    input: /*#__PURE__*/React.createElement(OutlinedInput, {\n      style: {\n        width: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 28\n      }\n    }),\n    disabled: loading,\n    renderValue: function renderValue(selected) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: selected,\n        value: selected,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ReactCountryFlag, {\n        countryCode: selected,\n        svg: true,\n        style: {\n          width: '2em',\n          height: '2em',\n          marginRight: \"15px\"\n        },\n        title: selected,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: countries.find(function (object) {\n          return object[\"iso\"] === selected;\n        }).name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 27\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, countryCodes.map(function (name) {\n    return props.current_user.countries.find(function (object) {\n      return object.iso === name;\n    }) && /*#__PURE__*/React.createElement(MenuItem, {\n      key: name,\n      value: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ReactCountryFlag, {\n      countryCode: name,\n      svg: true,\n      style: {\n        width: '2em',\n        height: '2em',\n        marginRight: \"15px\"\n      },\n      title: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: countries.find(function (object) {\n        return object[\"iso\"] === name;\n      }).name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 27\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"technician-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TechnicianFilter, {\n    setTecnicos: setTecnicos,\n    getCalendarEvents: props.getCalendarEvents,\n    loading: loading,\n    setLoading: setLoading,\n    country: country,\n    calendar_start_date: calendar_start_date,\n    calendar_finish_date: calendar_finish_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EventColors, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.pRelative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgressAbsolute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FullCalendar, {\n    timeZone: 'local',\n    plugins: [dayGridPlugin, interactionPlugin, timegridPlugin],\n    initialView: \"timeGridWeek\",\n    selectable: true,\n    ref: calendarRef,\n    events: props.calendar_events,\n    headerToolbar: {\n      start: 'today',\n      center: 'prevYear,prev,title,next,nextYear',\n      end: 'dayGridMonth,timeGridWeek,timeGridDay'\n    },\n    slotLabelFormat: ({\n      month: 'long',\n      year: 'numeric'\n    }, {\n      hour: 'numeric',\n      minute: '2-digit',\n      meridiem: 'short',\n      hour12: true\n    }),\n    datesSet: function datesSet(dateInfo) {\n      setCalendarStartDate(dateInfo.start);\n      setCalendarFinishDate(dateInfo.end);\n    },\n    slotLabelContent: function slotLabelContent(arg) {\n      var label_text = arg.text;\n\n      if (arg.text == \"0:00 p. m.\") {\n        label_text = \"12:00 p. m.\";\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, label_text);\n    },\n    slotDuration: \"01:00:00\",\n    slotMinTime: \"07:00\",\n    slotMaxTime: \"21:00\",\n    locale: i18n.language === 'pt' ? ptLocale : esLocale,\n    dateClick: handleDateClick,\n    select: handleDateSelect,\n    unselect: handleDateUnselect,\n    businessHours: {\n      daysOfWeek: [0, 1, 2, 3, 4, 5, 6],\n      startTime: '07:00',\n      endTime: '21:00'\n    },\n    eventContent: function eventContent(arg) {\n      return /*#__PURE__*/React.createElement(EventTooltip, {\n        arg: arg,\n        tecnicos: tecnicos,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 19\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  })))));\n}\n\nvar structuredSelector = createStructuredSelector({\n  calendar_events: function calendar_events(state) {\n    return state.calendar_events;\n  },\n  curent_user: function curent_user(state) {\n    return state.curent_user;\n  }\n});\nvar mapDispatchToProps = {\n  getCalendarEvents: getCalendarEvents\n};\nexport default connect(structuredSelector, mapDispatchToProps)(Calendar);","map":{"version":3,"sources":["/usr/src/app/javascript/components/calendars/Calendar.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","EventColors","Paper","FullCalendar","EventTooltip","dayGridPlugin","interactionPlugin","timegridPlugin","headers","esLocale","ptLocale","Grid","ReactCountryFlag","MenuItem","ListItemText","Select","InputLabel","FormControl","OutlinedInput","Box","Slide","TechnicianFilter","useTranslation","makeStyles","CircularProgress","useCountries","GET_CALENDAR_EVENTS_REQUEST","GET_CALENDAR_EVENTS_SUCCESS","countries","useStyles","theme","buttonProgressAbsolute","position","left","top","pRelative","Transition","forwardRef","props","ref","getCalendarEvents","country_iso","technician_ids","calendar_start_date","calendar_finish_date","setLoading","url","dispatch","getCalendarEventsSuccess","type","fetch","then","response","json","error","console","log","Calendar","i18n","t","countryCodes","isos","data","loadingCountries","loading","open","setOpen","classes","tecnicos","setTecnicos","Date","start_date","setStartDate","finish_date","setFinishDate","setCalendarStartDate","setCalendarFinishDate","allDay","setAllDay","country","setCountry","eventColors","setEventColors","load","setLoad","calendarRef","createRef","getEventColors","get","getAllTechnicians","user_country","current_user","fetchData","handleDateClick","arg","handleDateSelect","start","end","handleDateUnselect","handleCountryChange","event","target","value","marginRight","m","width","selected","height","find","object","name","map","iso","calendar_events","center","month","year","hour","minute","meridiem","hour12","dateInfo","label_text","text","language","daysOfWeek","startTime","endTime","structuredSelector","state","curent_user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {connect} from \"react-redux\"\nimport {createStructuredSelector} from \"reselect\"\nimport EventColors from './EventColors';\nimport Paper from '@material-ui/core/Paper';\nimport FullCalendar from '@fullcalendar/react'\nimport EventTooltip from './EventTooltip';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport timegridPlugin from \"@fullcalendar/timegrid\";\nimport {headers} from \"constants/csrf\"\nimport esLocale from \"@fullcalendar/core/locales/es\";\nimport ptLocale from \"@fullcalendar/core/locales/pt\";\nimport Grid from '@material-ui/core/Grid';\nimport ReactCountryFlag from \"react-country-flag\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport {Box} from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\nimport TechnicianFilter from './TechnicianFilter';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useCountries from 'hooks/useCountries';\nconst GET_CALENDAR_EVENTS_REQUEST = \"GET_CALENDAR_EVENTS_REQUEST\";\nconst GET_CALENDAR_EVENTS_SUCCESS = \"GET_CALENDAR_EVENTS_SUCCESS\";\nconst countries = [\n  \"MX\",\n  \"CL\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n\n  buttonProgressAbsolute: {\n      position: 'absolute',\n      left: '50%',\n      top: '40%',\n  },\n  pRelative:{\n    position: 'relative',\n      \n  }\n}));\n\n/*\n npm install --save @fullcalendar/react @fullcalendar/daygrid\n npm install --save @fullcalendar/interaction\n npm install --save @fullcalendar/core\n npm install --save @fullcalendar/timegrid\n npm install --save @fullcalendar/daygrid\n yarn install --check-files\n*/\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction getCalendarEvents(country_iso, technician_ids = null, calendar_start_date= null, calendar_finish_date = null, setLoading = null) {\n  // const url = technician_ids === null ? `api/v1/calendar_events?country=${country_iso}&all=1` : `api/v1/technician_calendar_events?technician_id=${technician_ids}`\n  setLoading && setLoading(true);\n  const url = `api/v1/technician_calendar_events?technician_id=${technician_ids}&calendar_start_date=${calendar_start_date}&calendar_finish_date=${calendar_finish_date}`\n  if (technician_ids === null) {\n    return dispatch => {\n      dispatch(getCalendarEventsSuccess([]))\n    }\n  } else {\n    return dispatch => {\n      dispatch({type: GET_CALENDAR_EVENTS_REQUEST});\n      return fetch(url)\n        .then(response => response.json())\n        .then(json => dispatch(getCalendarEventsSuccess(json)) && setLoading && setLoading(false))\n        .catch(error => console.log(error));\n    };\n  }\n};\n\nexport function getCalendarEventsSuccess(json) {\n  console.log(json)\n  return {\n    type: GET_CALENDAR_EVENTS_SUCCESS,\n    json\n  };\n};\n\n\n\nfunction Calendar(props) {\n  const {i18n,t} = useTranslation();\n  const {isos: countryCodes, data: countries, loading: loadingCountries} = useCountries();\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [tecnicos, setTecnicos] = useState([])\n  const [start_date, setStartDate] = useState(new Date);\n  const [finish_date, setFinishDate] = useState(new Date);\n  const [calendar_start_date, setCalendarStartDate] = useState();\n  const [calendar_finish_date, setCalendarFinishDate] = useState();\n  \n  const [allDay, setAllDay] = useState(false);\n  const [country, setCountry] = useState(\"\");\n  const [eventColors, setEventColors] = useState({})\n  const [load, setLoad] = useState(false)\n  const calendarRef = React.createRef(\"\")\n\n  async function getEventColors() {\n    const {data} = await axios.get('api/v1/calendar_events/colors', {headers: headers})\n    setEventColors(data)\n\n  }\n\n  async function getAllTechnicians() {\n    const {data} = await axios.get('api/v1/all_technicians', {headers: headers})\n    setTecnicos(data)\n  }\n\n  useEffect(() => {\n    let user_country = country\n    if (props.current_user) {\n      if (props.current_user.country != \"\" && props.current_user.country != null) {\n        user_country = props.current_user.country\n        setCountry(user_country)\n      }\n    }\n\n  }, []);\n\n  useEffect(() => {\n    let user_country = country\n    if (user_country != null && user_country != \"\") {\n      async function fetchData(country) {\n        //await getAllTechnicians();\n        // props.getCalendarEvents(country);\n      }\n  \n      //fetchData(user_country);\n    }\n\n  }, [country]);\n\n  const handleDateClick = (arg) => { // bind with an arrow function\n    console.log(arg);\n    //alert(arg.dateStr)\n  }\n\n  const handleDateSelect = (arg) => { // bind with an arrow function\n    console.log(arg);\n    setStartDate(arg.start);\n    setFinishDate(arg.end);\n    setAllDay(arg.allDay)\n  }\n\n  const handleDateUnselect = (arg) => { // bind with an arrow function\n    console.log(arg);\n  }\n\n  const handleCountryChange = (event) => {\n    setCountry(event.target.value)\n    // props.getCalendarEvents(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <Paper className=\"custom-paper\">\n\n        <Grid container spacing={3}>\n\n          <Grid item xs={12}>\n            <h1>{t('calendar.title')}</h1>\n            <Box display=\"flex\" justifyContent=\"flex-start\" >\n              <div style={{marginRight: '14px'}} className='country-container'>\n                <FormControl sx={{m: 1, width: 300}} variant=\"outlined\" size=\"small\">\n                  <InputLabel className=\"white-bg padding-sides-5\" htmlFor=\"select-multiple-chip-country\" id=\"country-chip-multiple-label\"></InputLabel>\n                  {\n                    !loadingCountries && \n                    <Select\n                    id=\"country-chip\"\n                    value={country}\n                    onChange={handleCountryChange}\n                    input={<OutlinedInput style={{width: '300px'}} />}\n                    disabled={loading}\n                    renderValue={(selected) => (\n                      <div className=\"\">\n                        <MenuItem key={selected} value={selected} >\n                          <ReactCountryFlag\n                            countryCode={selected}\n                            svg\n                            style={{\n                              width: '2em',\n                              height: '2em',\n                              marginRight: \"15px\",\n                            }}\n                            title={selected}\n                          />\n                          <ListItemText primary={countries.find(object => object[\"iso\"] === selected).name} />\n                        </MenuItem>\n                      </div>\n                    )}\n                  >\n                    {countryCodes.map((name) => {\n                      return props.current_user.countries.find(object => object.iso === name) &&\n\n                        <MenuItem key={name} value={name} >\n                          <ReactCountryFlag\n                            countryCode={name}\n                            svg\n                            style={{\n                              width: '2em',\n                              height: '2em',\n                              marginRight: \"15px\",\n                            }}\n                            title={name}\n                          />\n                          <ListItemText primary={countries.find(object => object[\"iso\"] === name).name} />\n                        </MenuItem>\n                    }\n                    )}\n                  </Select>\n\n                  }\n                </FormControl>\n              </div>\n\n              <div className=\"technician-container\">\n                <TechnicianFilter setTecnicos={setTecnicos} getCalendarEvents={props.getCalendarEvents} loading={loading} setLoading={setLoading} country={country} calendar_start_date={calendar_start_date} calendar_finish_date={calendar_finish_date} />\n              </div>\n            </Box>\n\n\n\n            <Box mt={2} >\n              <EventColors />\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} className={classes.pRelative} >\n            {loading && <CircularProgress size={24} className={classes.buttonProgressAbsolute} />}\n            <FullCalendar\n              timeZone={'local'}\n              plugins={[dayGridPlugin, interactionPlugin, timegridPlugin]}\n              initialView=\"timeGridWeek\"\n              selectable={true}\n              ref={calendarRef}\n              events={\n                props.calendar_events\n              }\n              headerToolbar={{\n                start: 'today',\n                center: 'prevYear,prev,title,next,nextYear',\n                end: 'dayGridMonth,timeGridWeek,timeGridDay'\n              }}\n              slotLabelFormat={{month: 'long', year: 'numeric'},\n              {\n                hour: 'numeric',\n                minute: '2-digit', meridiem: 'short', hour12: true\n              }}\n              datesSet={(dateInfo) => {\n                setCalendarStartDate(dateInfo.start)\n                setCalendarFinishDate(dateInfo.end)\n              }}\n              slotLabelContent={(arg) => {\n                let label_text = arg.text;\n                if (arg.text == \"0:00 p. m.\") {\n                  label_text = \"12:00 p. m.\"\n                }\n                return (\n                  <>\n                    {label_text}\n                  </>\n                );\n              }}\n              slotDuration={\"01:00:00\"}\n              slotMinTime={\"07:00\"}\n              slotMaxTime={\"21:00\"}\n              locale={i18n.language === 'pt' ?  ptLocale : esLocale}\n              dateClick={handleDateClick}\n              select={handleDateSelect}\n              unselect={handleDateUnselect}\n              businessHours={{\n                daysOfWeek: [0, 1, 2, 3, 4, 5, 6],\n                startTime: '07:00',\n                endTime: '21:00',\n              }}\n              eventContent={(arg) => {\n                return (\n                  <EventTooltip arg={arg} tecnicos={tecnicos} />\n                )\n              }}\n            />\n          </Grid>\n        </Grid>\n\n      </Paper>\n    </React.Fragment >\n  );\n\n}\n\nconst structuredSelector = createStructuredSelector({\n  calendar_events: state => state.calendar_events,\n  curent_user: state => state.curent_user\n});\nconst mapDispatchToProps = {getCalendarEvents};\n\nexport default connect(structuredSelector, mapDispatchToProps)(Calendar)\n"]},"metadata":{},"sourceType":"module"}