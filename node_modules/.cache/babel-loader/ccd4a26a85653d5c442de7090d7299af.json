{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { mergeRefs, useClassNames } from './utils';\nimport TableContext from './TableContext';\nvar Row = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var className = props.className,\n      width = props.width,\n      height = props.height,\n      top = props.top,\n      style = props.style,\n      isHeaderRow = props.isHeaderRow,\n      headerHeight = props.headerHeight,\n      rowRef = props.rowRef,\n      classPrefix = props.classPrefix,\n      children = props.children,\n      rowSpan = props.rowSpan,\n      rest = _objectWithoutPropertiesLoose(props, [\"className\", \"width\", \"height\", \"top\", \"style\", \"isHeaderRow\", \"headerHeight\", \"rowRef\", \"classPrefix\", \"children\", \"rowSpan\"]);\n\n  var _useContext = useContext(TableContext),\n      translateDOMPositionXY = _useContext.translateDOMPositionXY;\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix({\n    header: isHeaderRow,\n    rowspan: rowSpan\n  }));\n\n  var styles = _extends({\n    minWidth: width,\n    height: isHeaderRow ? headerHeight : height\n  }, style);\n\n  translateDOMPositionXY === null || translateDOMPositionXY === void 0 ? void 0 : translateDOMPositionXY(styles, 0, top);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"row\"\n  }, rest, {\n    ref: mergeRefs(rowRef, ref),\n    className: classes,\n    style: styles\n  }), children);\n});\nRow.displayName = 'Table.Row';\nRow.defaultProps = {\n  classPrefix: 'row',\n  height: 46,\n  headerHeight: 40\n};\nRow.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  top: PropTypes.number,\n  isHeaderRow: PropTypes.bool,\n  rowRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  style: PropTypes.object,\n  rowSpan: PropTypes.number\n};\nexport default Row;","map":null,"metadata":{},"sourceType":"module"}