{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/FinishServiceDialog.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport { flash_alert } from 'components/App';\nimport { useTranslation } from 'react-i18next';\n\nfunction FinishServiceDialog(props) {\n  var _useTranslation = useTranslation('translation', {\n    keyPrefix: 'services.visits.finishServiceButton'\n  }),\n      t = _useTranslation.t;\n\n  function handleClose(e) {\n    e.preventDefault();\n    props.handleCloseFinishServiceDialog();\n  }\n\n  function handleFinishService(_x) {\n    return _handleFinishService.apply(this, arguments);\n  }\n\n  function _handleFinishService() {\n    _handleFinishService = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              props.setDoFinishService(true);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleFinishService.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: props.finishServiceDialog,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    className: \"payment-dialog-title\",\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, t('finishVisit?') + props.serviceNumber), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, t('backButton')), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFinishService,\n    id: \"payment-email-send\",\n    variant: \"contained\",\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, t('finishServiceButton')))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(FinishServiceDialog);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/FinishServiceDialog.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Link","flash_alert","useTranslation","FinishServiceDialog","props","keyPrefix","t","handleClose","e","preventDefault","handleCloseFinishServiceDialog","handleFinishService","setDoFinishService","finishServiceDialog","serviceNumber","structuredSelector","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAIA,SAASC,mBAAT,CAA6BC,KAA7B,EAAmC;AAClC,wBAAcF,cAAc,CAAC,aAAD,EAAgB;AAAEG,IAAAA,SAAS,EAAE;AAAb,GAAhB,CAA5B;AAAA,MAAQC,CAAR,mBAAQA,CAAR;;AACA,WAASC,WAAT,CAAqBC,CAArB,EAAuB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,KAAK,CAACM,8BAAN;AACA;;AALiC,WAOnBC,mBAPmB;AAAA;AAAA;;AAAA;AAAA,oFAOlC,iBAAmCH,CAAnC;AAAA;AAAA;AAAA;AAAA;AACOA,cAAAA,CAAC,CAACC,cAAF;AACAL,cAAAA,KAAK,CAACQ,kBAAN,CAAyB,IAAzB;;AAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPkC;AAAA;AAAA;;AAWlC,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACD,IAAA,IAAI,EAAER,KAAK,CAACS,mBADX;AAED,IAAA,SAAS,EAAE,IAFV;AAGK,IAAA,QAAQ,EAAE,IAHf;AAIE,IAAA,OAAO,EAAEN,WAJX;AAKE,uBAAgB,oBALlB;AAME,wBAAiB,0BANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,sBAAvB;AAA8C,IAAA,EAAE,EAAC,oBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuED,CAAC,CAAC,cAAD,CAAD,GAAmBF,KAAK,CAACU,aAAhG,CARF,eASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,eAcE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEP,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDD,CAAC,CAAC,YAAD,CADA,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,mBAAjB;AAAsC,IAAA,EAAE,EAAC,oBAAzC;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAmG,IAAA,SAAS,MAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDL,CAAC,CAAC,qBAAD,CADA,CAJF,CAdF,CADF,CADD;AA4BA;;AAED,IAAMS,kBAAkB,GAAGtB,wBAAwB,CAAC,EAAD,CAAnD;AACA,IAAMuB,kBAAkB,GAAG,EAA3B;AAEA,eAAexB,OAAO,CAACuB,kBAAD,EAAqBC,kBAArB,CAAP,CAAgDb,mBAAhD,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Link from '@material-ui/core/Link';\nimport { flash_alert } from 'components/App';\nimport { useTranslation } from 'react-i18next';\n\n\n\nfunction FinishServiceDialog(props){\n\tconst { t } = useTranslation('translation', { keyPrefix: 'services.visits.finishServiceButton' });\n\tfunction handleClose(e){\n\t\te.preventDefault();\n\t\tprops.handleCloseFinishServiceDialog();\n\t}\n\n\tasync function handleFinishService(e){\n        e.preventDefault();\n        props.setDoFinishService(true)\n    }\n\treturn (\n\t\t<React.Fragment>\n\t\t  <Dialog\n\t\t\topen={props.finishServiceDialog}\n\t\t\tfullWidth={true}\n        \tmaxWidth={\"sm\"}\n\t\t    onClose={handleClose}\n\t\t    aria-labelledby=\"alert-dialog-title\"\n\t\t    aria-describedby=\"alert-dialog-description\"\n\t\t  >\n\t\t    <DialogTitle className=\"payment-dialog-title\" id=\"alert-dialog-title\">{t('finishVisit?')+ props.serviceNumber}</DialogTitle>\n\t\t    <DialogContent>\n\t\t      <DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t  \n\t\t      </DialogContentText>\n\t\t    </DialogContent>\n\t\t    <DialogActions>\n\t\t      <Button onClick={handleClose} color=\"primary\">\n\t\t\t  \t{t('backButton')}\n\t\t      </Button>\n\t\t      <Button onClick={handleFinishService} id=\"payment-email-send\"  variant=\"contained\" color=\"primary\" autoFocus>\n\t\t\t  \t{t('finishServiceButton')}\n\t\t      </Button>\n\t\t    </DialogActions>\n\t\t  </Dialog>\n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({ });\nconst mapDispatchToProps = {};\n\nexport default connect(structuredSelector, mapDispatchToProps)(FinishServiceDialog)\n"]},"metadata":{},"sourceType":"module"}