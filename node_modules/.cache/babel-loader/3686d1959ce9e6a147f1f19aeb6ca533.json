{"ast":null,"code":"\"use strict\";\n\nfunction _typeof2(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.predefinedOptions = exports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _autonumeric = _interopRequireDefault(require(\"autonumeric\"));\n\nvar _styles = require(\"@material-ui/styles\");\n\nvar _core = require(\"@material-ui/core\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar styles = function styles(theme) {\n  return {\n    textField: function textField(props) {\n      return {\n        textAlign: props.textAlign || \"right\"\n      };\n    }\n  };\n};\n/**\n * CurrencyTextField is a [react](https://reactjs.org/) component with automated currency and number format, and with [Material-ui](https://material-ui.com/) look and feel.\n *\n * CurrencyTextField is a wrapper component for <a href=\"https://github.com/autoNumeric/autoNumeric\">autonumeric</a> and based on <a href=\"https://github.com/mkg0/react-numeric\">react-numeric</a>.\n *\n * Main features:\n * * Adds thousands separator automatically.\n * * Adds automatically the decimals on blur.\n * * Smart input. User can only type the accepted characters depending on the current value.\n * * Lots of config options...\n * * It accepts all the `props` and `classes` of Material-Ui <a href=\"https://material-ui.com/api/text-field/#textfield-api\">TextField API</a> (Ex: classes, label, helperText, variant).\n * * And also all the `options` from <a href=\"http://autonumeric.org/guide\">AutoNumeric</a>\n */\n\n\nvar CurrencyTextField = /*#__PURE__*/function (_React$Component) {\n  _inherits(CurrencyTextField, _React$Component);\n\n  function CurrencyTextField(props) {\n    var _this;\n\n    _classCallCheck(this, CurrencyTextField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CurrencyTextField).call(this, props));\n    _this.getValue = _this.getValue.bind(_assertThisInitialized(_this));\n    _this.callEventHandler = _this.callEventHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CurrencyTextField, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          currencySymbol = _this$props.currencySymbol,\n          others = _objectWithoutProperties(_this$props, [\"currencySymbol\"]);\n\n      this.autonumeric = new _autonumeric[\"default\"](this.input, this.props.value, _objectSpread({}, this.props.preDefined, {}, others, {\n        onChange: undefined,\n        onFocus: undefined,\n        onBlur: undefined,\n        onKeyPress: undefined,\n        onKeyUp: undefined,\n        onKeyDown: undefined,\n        watchExternalChanges: false\n      }));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.autonumeric.remove();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var isValueChanged = this.props.value !== newProps.value && this.getValue() !== newProps.value;\n\n      if (isValueChanged) {\n        this.autonumeric.set(newProps.value);\n      }\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      if (!this.autonumeric) return;\n      var valueMapper = {\n        string: function string(numeric) {\n          return numeric.getNumericString();\n        },\n        number: function number(numeric) {\n          return numeric.getNumber();\n        }\n      };\n      return valueMapper[this.props.outputFormat](this.autonumeric);\n    }\n  }, {\n    key: \"callEventHandler\",\n    value: function callEventHandler(event, eventName) {\n      if (!this.props[eventName]) return;\n      this.props[eventName](event, this.getValue());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          currencySymbol = _this$props2.currencySymbol,\n          inputProps = _this$props2.inputProps,\n          InputProps = _this$props2.InputProps,\n          others = _objectWithoutProperties(_this$props2, [\"classes\", \"currencySymbol\", \"inputProps\", \"InputProps\"]);\n\n      var otherProps = {};\n      [\"id\", \"label\", \"className\", \"autoFocus\", \"variant\", \"style\", \"error\", \"disabled\", \"type\", \"name\", \"defaultValue\", \"tabIndex\", \"fullWidth\", \"rows\", \"rowsMax\", \"select\", \"required\", \"helperText\", \"unselectable\", \"margin\", \"SelectProps\", \"multiline\", \"size\", \"FormHelperTextProps\", \"placeholder\"].forEach(function (prop) {\n        return otherProps[prop] = _this2.props[prop];\n      });\n      return _react[\"default\"].createElement(_core.TextField, _extends({\n        inputRef: function inputRef(ref) {\n          return _this2.input = ref;\n        },\n        onChange: function onChange(e) {\n          return _this2.callEventHandler(e, \"onChange\");\n        },\n        onFocus: function onFocus(e) {\n          return _this2.callEventHandler(e, \"onFocus\");\n        },\n        onBlur: function onBlur(e) {\n          return _this2.callEventHandler(e, \"onBlur\");\n        },\n        onKeyPress: function onKeyPress(e) {\n          return _this2.callEventHandler(e, \"onKeyPress\");\n        },\n        onKeyUp: function onKeyUp(e) {\n          return _this2.callEventHandler(e, \"onKeyUp\");\n        },\n        onKeyDown: function onKeyDown(e) {\n          return _this2.callEventHandler(e, \"onKeyDown\");\n        },\n        InputProps: _objectSpread({\n          startAdornment: _react[\"default\"].createElement(_core.InputAdornment, {\n            position: \"start\"\n          }, currencySymbol)\n        }, InputProps),\n        inputProps: _objectSpread({\n          className: classes.textField\n        }, inputProps)\n      }, otherProps));\n    }\n  }]);\n\n  return CurrencyTextField;\n}(_react[\"default\"].Component);\n\nCurrencyTextField.propTypes = {\n  type: _propTypes[\"default\"].oneOf([\"text\", \"tel\", \"hidden\"]),\n\n  /** The variant to use. */\n  variant: _propTypes[\"default\"].string,\n  id: _propTypes[\"default\"].string,\n\n  /** The CSS class name of the wrapper element. */\n  className: _propTypes[\"default\"].string,\n\n  /** Inline styling for element */\n  style: _propTypes[\"default\"].object,\n\n  /** If true, the input element will be disabled. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** The label content. */\n  label: _propTypes[\"default\"].string,\n\n  /** Align the numbers in the textField.\n   * If you pass the `inputProps` from TextFieldAPI text align won't work.\n   * then, you have handle it by className with your own class inside inputProps.\n   */\n  textAlign: _propTypes[\"default\"].oneOf([\"right\", \"left\", \"center\"]),\n\n  /** Tab index for the element */\n  tabIndex: _propTypes[\"default\"].number,\n\n  /** If true, the input element will be focused during the first mount. */\n  autoFocus: _propTypes[\"default\"].bool,\n\n  /** The short hint displayed in the input before the user enters a value. */\n  placeholder: _propTypes[\"default\"].string,\n\n  /** value to be enter and display in input */\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]),\n\n  /** Callback fired when the value is changed. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** Callback fired when focused on element. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** Callback fired on blur. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** Callback fired on key press. */\n  onKeyPress: _propTypes[\"default\"].func,\n\n  /** Callback fired on key press. */\n  onKeyUp: _propTypes[\"default\"].func,\n\n  /** Callback fired on key press. */\n  onKeyDown: _propTypes[\"default\"].func,\n\n  /** Defines the currency symbol string. */\n  currencySymbol: _propTypes[\"default\"].string,\n\n  /** Defines what decimal separator character is used. */\n  decimalCharacter: _propTypes[\"default\"].string,\n\n  /** Allow to declare an alternative decimal separator which is automatically replaced by `decimalCharacter` when typed. */\n  decimalCharacterAlternative: _propTypes[\"default\"].string,\n\n  /** Defines the default number of decimal places to show on the formatted value. */\n  decimalPlaces: _propTypes[\"default\"].number,\n\n  /** Defines how many decimal places should be visible when the element is unfocused null. */\n  decimalPlacesShownOnBlur: _propTypes[\"default\"].number,\n\n  /** Defines how many decimal places should be visible when the element has the focus. */\n  decimalPlacesShownOnFocus: _propTypes[\"default\"].number,\n\n  /** Defines the thousand grouping separator character */\n  digitGroupSeparator: _propTypes[\"default\"].string,\n\n  /** Controls the leading zero behavior   */\n  leadingZero: _propTypes[\"default\"].oneOf([\"allow\", \"deny\", \"keep\"]),\n\n  /** maximum value that can be enter */\n  maximumValue: _propTypes[\"default\"].string,\n\n  /** minimum value that can be enter */\n  minimumValue: _propTypes[\"default\"].string,\n\n  /** placement of the negitive and possitive sign symbols */\n  negativePositiveSignPlacement: _propTypes[\"default\"].oneOf([\"l\", \"r\", \"p\", \"s\"]),\n\n  /** Defines the negative sign symbol to use   */\n  negativeSignCharacter: _propTypes[\"default\"].string,\n\n  /** how the value should be formatted,before storing it */\n  outputFormat: _propTypes[\"default\"].oneOf([\"string\", \"number\"]),\n\n  /** Defines if the element value should be selected on focus. */\n  selectOnFocus: _propTypes[\"default\"].bool,\n\n  /** Defines the positive sign symbol to use. */\n  positiveSignCharacter: _propTypes[\"default\"].string,\n\n  /** Defines if the element should be set as read only on initialization. */\n  readOnly: _propTypes[\"default\"].bool,\n\n  /** predefined objects are available in <a href=\"https://www.nodenpm.com/autonumeric/4.5.1/detail.html#predefined-options\">AutoNumeric</a>*/\n  preDefined: _propTypes[\"default\"].object\n};\nCurrencyTextField.defaultProps = {\n  type: \"text\",\n  variant: \"standard\",\n  currencySymbol: \"$\",\n  outputFormat: \"number\",\n  textAlign: \"right\",\n  maximumValue: \"10000000000000\",\n  minimumValue: \"-10000000000000\"\n};\n\nvar _default = (0, _styles.withStyles)(styles)(CurrencyTextField);\n\nexports[\"default\"] = _default;\n\nvar predefinedOptions = _autonumeric[\"default\"].getPredefinedOptions();\n\nexports.predefinedOptions = predefinedOptions;","map":null,"metadata":{},"sourceType":"module"}