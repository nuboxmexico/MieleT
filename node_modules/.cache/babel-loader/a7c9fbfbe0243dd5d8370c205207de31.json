{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/forms/ServiceInfoForm.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { flash_alert } from 'components/App';\nimport MaterialTable from 'react-data-table-component';\nimport Paper from '@material-ui/core/Paper'; // Card\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport PoliciesList from 'components/policies/PoliciesList';\nimport { DropzoneArea } from 'material-ui-dropzone'; // Dialog\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle'; // Image\n\nimport Image from 'material-ui-image';\nimport { SRLWrapper } from 'simple-react-lightbox';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { channelLabels, serviceTypeLabels } from 'constants/services';\n\nfunction ServiceInfoForm(props) {\n  var _this = this;\n\n  var serviceTypes = serviceTypeLabels(i18next.language);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; /// ////////////////////////////////////////////////////////////////////\n  // Delete image dialog\n\n\n  var costCenters = props.costCenters,\n      setSelectedCostCenterId = props.setSelectedCostCenterId,\n      selectedCostCenterId = props.selectedCostCenterId;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openDeleteImageDialog = _React$useState2[0],\n      setOpenDeleteImageDialog = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentDeleteImage = _React$useState4[0],\n      setCurrentDeleteImage = _React$useState4[1];\n\n  var handleClickOpenImageDialog = function handleClickOpenImageDialog(image_id) {\n    setCurrentDeleteImage(image_id);\n    setOpenDeleteImageDialog(true);\n  };\n\n  var handleCloseImageDialog = function handleCloseImageDialog() {\n    setOpenDeleteImageDialog(false);\n  };\n\n  var handleCostCenterChange = function handleCostCenterChange(event) {\n    setSelectedCostCenterId(event.target.value);\n  };\n\n  var handleDeleteImage = function handleDeleteImage() {\n    setOpenDeleteImageDialog(false);\n    return axios[\"delete\"](\"/api/v1/file_resources/\".concat(currentDeleteImage), {\n      headers: headers\n    }).then(function (response) {\n      var files_t = props.serviceFiles.filter(function (file) {\n        return String(file.id) != String(currentDeleteImage);\n      });\n      props.setServiceFiles(files_t);\n      flash_alert('Eliminado!', 'El archivo ha sido eliminado correctamente', 'success');\n    })[\"catch\"](function (e) {\n      flash_alert('Error!', 'No se ha podido eliminar el archivo', 'danger');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, t('customer.newService.serviceRequestInfo.title')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, t('customer.newService.serviceRequestInfo.subTitle'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    error: props.service_typeErrorMessage != '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"service_type-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, t('customer.newService.serviceRequestInfo.serviceType')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"service_type-simple-select-outlined-label\",\n    id: \"service_type-simple-select-outlined\",\n    value: props.service_type,\n    onChange: function onChange(e) {\n      return props.handleServiceTypeChange(e.target.value);\n    },\n    label: t('customer.newService.serviceRequestInfo.serviceType'),\n    name: \"service_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, Object.keys(serviceTypes).map(function (key) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: 'service_type-' + serviceTypes[key].key,\n      value: serviceTypes[key].key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, serviceTypes[key].label);\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: \"brand-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, props.service_typeErrorMessage))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    error: props.subcategoryErrorMessage != '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"subcategory-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, t('customer.newService.serviceRequestInfo.subCategory')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"subcategory-simple-select-outlined-label\",\n    id: \"subcategory-simple-select-outlined\",\n    value: props.subcategory,\n    onChange: function onChange(e) {\n      return props.setSubcategory(e.target.value);\n    },\n    label: t('customer.newService.serviceRequestInfo.serviceType'),\n    name: \"subcategory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, props.subcategoryOptions.map(function (subcategory) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: 'subcategory-' + subcategory.key,\n      value: subcategory.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, subcategory.label);\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: \"brand-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, props.subcategoryErrorMessage))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    error: props.requestedErrorMessage != '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"requested-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, t('customer.newService.serviceRequestInfo.request')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"requested-simple-select-outlined-label\",\n    id: \"requested-simple-select-outlined\",\n    value: props.requested,\n    onChange: function onChange(e) {\n      return props.handleRequestedChange(e);\n    },\n    label: t('customer.newService.serviceRequestInfo.request'),\n    name: \"requested\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, props.requestedBy.map(function (value) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: 'requested-' + value.key,\n      value: value.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, value.label);\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: \"brand-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, props.requestedErrorMessage))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    error: props.requestChannelErrorMessage != '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"requestChannel-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, t('customer.newService.serviceRequestInfo.requestChannel')), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"requestChannel-simple-select-outlined-label\",\n    id: \"requestChannel-simple-select-outlined\",\n    value: props.requestChannel,\n    onChange: function onChange(e) {\n      return props.setRequestChannel(e.target.value);\n    },\n    label: t('customer.newService.serviceRequestInfo.requestChannel'),\n    name: \"requestChannel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, channelLabels(i18next.language).map(function (value) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: 'requestChannel-' + value.key,\n      value: value.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, value.label);\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: \"brand-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, props.requestChannelErrorMessage)))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"cost-center-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, t('customer.newService.serviceRequestInfo.costCenter')), /*#__PURE__*/React.createElement(Select, {\n    value: selectedCostCenterId || '',\n    id: \"cost-center\",\n    labelId: \"cost-center-label\",\n    onChange: handleCostCenterChange,\n    label: t('customer.newService.serviceRequestInfo.costCenter'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, costCenters.map(function (costCenter) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: costCenter.id,\n      value: costCenter.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, costCenter.fullname);\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    className: \"brand-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, props.requestChannelErrorMessage))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    className: props.distributorCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: t('customer.newService.serviceRequestInfo.distributorName'),\n    name: \"distributorName\",\n    value: props.distributorName,\n    onChange: function onChange(e) {\n      return props.setDistributorName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    className: props.distributorCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"email\",\n    label: t('customer.newService.serviceRequestInfo.distributorEmail'),\n    name: \"distributorEmail\",\n    value: props.distributorEmail,\n    onChange: function onChange(e) {\n      return props.setDistributorEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: \"custom-paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, props.service_type == 'Póliza de Mantenimiento' && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PoliciesList, {\n    policies: props.policies,\n    country: props.country,\n    handlePolicyRowChange: props.handlePolicyRowChange,\n    selectedPolicies: props.selectedPolicies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }))), props.service_type != 'Póliza de Mantenimiento' && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, t('customer.newService.productSelection.title')), props.selectedProductRows.length > 0 && props.service_type == 'Reparaciones en Taller' && /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return props.handleProductDisabledSelected();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, t('customer.newService.productSelection.removeButton')), props.products.length > 0 && /*#__PURE__*/React.createElement(MaterialTable, {\n    className: \"customer-products-table\",\n    title: \"\",\n    columns: props.product_columns,\n    data: props.products,\n    responsive: true,\n    onSelectedRowsChange: props.handleProductRowChange,\n    highlightOnHover: true,\n    striped: true,\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    selectableRows: true,\n    selectableRowsComponent: Checkbox,\n    selectableRowsNoSelectAll: props.service_type == 'Reparaciones en Taller',\n    selectableRowSelected: function selectableRowSelected(row) {\n      return props.selectedProductRows.find(function (product) {\n        return product.id === row.id;\n      }) != undefined;\n    },\n    selectableRowDisabled: function selectableRowDisabled(row) {\n      return row.status == 'Servicio completado' && props.submit_type == 'new_visit';\n    },\n    selectableRowsComponentProps: {\n      color: 'primary'\n    },\n    contextMessage: {\n      singular: 'producto',\n      plural: 'productos',\n      message: 'seleccionados'\n    },\n    clearSelectedRows: props.toggledClearProductsRows,\n    disabled: props.productTableDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 45\n    }\n  })), props.consumables.length > 0 && props.service_type == 'Mantenimiento' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, t('customer.newService.productSelection.requiredConsumables')), /*#__PURE__*/React.createElement(MaterialTable, {\n    className: \"customer-products-table\",\n    title: \"\",\n    columns: props.consumable_columns,\n    data: props.consumables,\n    responsive: true,\n    onSelectedRowsChange: props.handleConsumableRowChange,\n    highlightOnHover: true,\n    striped: true,\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    selectableRows: true,\n    selectableRowsComponent: Checkbox,\n    selectableRowSelected: function selectableRowSelected(row) {\n      return props.consumableSelectableRowCriteria(row);\n    },\n    selectableRowsComponentProps: {\n      color: 'primary'\n    },\n    contextMessage: {\n      singular: 'producto',\n      plural: 'productos',\n      message: 'seleccionados'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  })), props.requested_spare_parts && props.requested_spare_parts.length > 0 && props.submit_type == 'new_visit' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, t('customer.newService.productSelection.spareParts')), /*#__PURE__*/React.createElement(MaterialTable, {\n    className: \"customer-products-table\",\n    noHeader: true,\n    columns: props.spare_part_columns,\n    data: props.requested_spare_parts,\n    progressPending: props.userLoading,\n    progressComponent: /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 75,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 38\n      }\n    }),\n    responsive: true,\n    highlightOnHover: true,\n    striped: true,\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    contextMessage: {\n      singular: 'producto',\n      plural: 'productos',\n      message: 'seleccionados'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, t('customer.newService.productSelection.backgroundTitle')))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    label: t('customer.newService.productSelection.background'),\n    name: \"background\",\n    value: props.background,\n    onChange: function onChange(e) {\n      return props.setBackground(e.target.value);\n    },\n    error: props.backgroundErrorMessage != '',\n    helperText: props.backgroundErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropzoneArea, {\n    name: \"services_files\",\n    dropzoneText: t('customer.newService.productSelection.dragFile'),\n    onChange: props.onServiceChangeFiles,\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    useChipsForPreview: true,\n    previewGridProps: {\n      container: {\n        spacing: 1,\n        direction: 'row'\n      }\n    },\n    previewChipProps: {\n      classes: {\n        root: props.classes.previewChip\n      }\n    },\n    previewText: t('customer.newService.productSelection.selectedFiles'),\n    filesLimit: 10,\n    showAlerts: false,\n    maxFileSize: 10000000,\n    alertSnackbarProps: {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    },\n    onAlert: props.handleMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SRLWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, props.serviceFiles.map(function (serviceFile) {\n    var labelId = \"file-list-label-\".concat(serviceFile.id);\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: labelId,\n      item: true,\n      xs: 6,\n      sm: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardActionArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: serviceFile.resource_url,\n      className: \"mdl-navigation__link file-image-link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: serviceFile.resource_url,\n      className: \"file-image\",\n      srl_gallery_image: \"true\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(CardActions, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return handleClickOpenImageDialog(serviceFile.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 29\n      }\n    }, t('globalText.deleteButton')))));\n  }))), /*#__PURE__*/React.createElement(Dialog, {\n    open: openDeleteImageDialog,\n    onClose: handleCloseImageDialog,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, t('customer.newService.productSelection.deleteImage')), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 19\n    }\n  }, t('customer.newService.productSelection.confirmMessage'))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleCloseImageDialog,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 19\n    }\n  }, t('customer.newService.productSelection.no')), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleDeleteImage,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, t('customer.newService.productSelection.yes')))))))));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(ServiceInfoForm);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/forms/ServiceInfoForm.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","TextField","Grid","InputLabel","FormControl","MenuItem","Select","Button","Link","Checkbox","CircularProgress","FormControlLabel","FormHelperText","flash_alert","MaterialTable","Paper","Card","CardActionArea","CardActions","PoliciesList","DropzoneArea","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Image","SRLWrapper","useTranslation","i18next","channelLabels","serviceTypeLabels","ServiceInfoForm","props","serviceTypes","language","t","costCenters","setSelectedCostCenterId","selectedCostCenterId","openDeleteImageDialog","setOpenDeleteImageDialog","currentDeleteImage","setCurrentDeleteImage","handleClickOpenImageDialog","image_id","handleCloseImageDialog","handleCostCenterChange","event","target","value","handleDeleteImage","headers","then","response","files_t","serviceFiles","filter","file","String","id","setServiceFiles","e","service_typeErrorMessage","service_type","handleServiceTypeChange","Object","keys","map","key","label","subcategoryErrorMessage","subcategory","setSubcategory","subcategoryOptions","requestedErrorMessage","requested","handleRequestedChange","requestedBy","requestChannelErrorMessage","requestChannel","setRequestChannel","costCenter","fullname","distributorCheck","distributorName","setDistributorName","distributorEmail","setDistributorEmail","policies","country","handlePolicyRowChange","selectedPolicies","selectedProductRows","length","handleProductDisabledSelected","products","product_columns","handleProductRowChange","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","row","find","product","undefined","status","submit_type","color","singular","plural","message","toggledClearProductsRows","productTableDisabled","consumables","consumable_columns","handleConsumableRowChange","consumableSelectableRowCriteria","requested_spare_parts","spare_part_columns","userLoading","background","setBackground","backgroundErrorMessage","onServiceChangeFiles","container","spacing","direction","classes","root","previewChip","anchorOrigin","vertical","horizontal","handleMessage","serviceFile","labelId","resource_url","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport { flash_alert } from 'components/App'\nimport MaterialTable from 'react-data-table-component'\nimport Paper from '@material-ui/core/Paper'\n// Card\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport PoliciesList from 'components/policies/PoliciesList'\nimport { DropzoneArea } from 'material-ui-dropzone'\n\n// Dialog\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n// Image\nimport Image from 'material-ui-image'\n\nimport { SRLWrapper } from 'simple-react-lightbox'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { channelLabels, serviceTypeLabels } from 'constants/services'\n\n\nfunction ServiceInfoForm (props) {\n  const serviceTypes = serviceTypeLabels(i18next.language)\n  const { t } = useTranslation()\n  /// ////////////////////////////////////////////////////////////////////\n  // Delete image dialog\n  const { costCenters, setSelectedCostCenterId, selectedCostCenterId } = props\n  const [openDeleteImageDialog, setOpenDeleteImageDialog] = React.useState(false)\n  const [currentDeleteImage, setCurrentDeleteImage] = React.useState('')\n\n  const handleClickOpenImageDialog = (image_id) => {\n    setCurrentDeleteImage(image_id)\n    setOpenDeleteImageDialog(true)\n  }\n\n  const handleCloseImageDialog = () => {\n    setOpenDeleteImageDialog(false)\n  }\n\n  const handleCostCenterChange = (event) => {\n    setSelectedCostCenterId(event.target.value)\n  }\n\n  const handleDeleteImage = () => {\n    setOpenDeleteImageDialog(false)\n    return axios.delete(`/api/v1/file_resources/${currentDeleteImage}`, { headers })\n      .then(response => {\n        const files_t = props.serviceFiles.filter(file => String(file.id) != String(currentDeleteImage))\n        props.setServiceFiles(files_t)\n        flash_alert('Eliminado!', 'El archivo ha sido eliminado correctamente', 'success')\n      })\n      .catch(e => {\n        flash_alert('Error!', 'No se ha podido eliminar el archivo', 'danger')\n      })\n  }\n\n  return (\n    <>\n      <Paper className='custom-paper'>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <h1 className='panel-custom-title'>{t('customer.newService.serviceRequestInfo.title')}</h1>\n            <p className='service-p'>{t('customer.newService.serviceRequestInfo.subTitle')}</p>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <FormControl variant='outlined' className='MuiFormControl-fullWidth' error={props.service_typeErrorMessage != ''}>\n              <InputLabel id='service_type-simple-select-outlined-label'>{t('customer.newService.serviceRequestInfo.serviceType')}</InputLabel>\n              <Select\n                labelId='service_type-simple-select-outlined-label'\n                id='service_type-simple-select-outlined'\n                value={props.service_type}\n                onChange={(e) => props.handleServiceTypeChange(e.target.value)}\n                label={t('customer.newService.serviceRequestInfo.serviceType')}\n                name='service_type'\n              >\n                {Object.keys(serviceTypes).map((key) => (\n                  <MenuItem key={'service_type-' + serviceTypes[key].key} value={serviceTypes[key].key}>{serviceTypes[key].label}</MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className='brand-error-message'>{props.service_typeErrorMessage}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <FormControl variant='outlined' className='MuiFormControl-fullWidth' error={props.subcategoryErrorMessage != ''}>\n              <InputLabel id='subcategory-simple-select-outlined-label'>{t('customer.newService.serviceRequestInfo.subCategory')}</InputLabel>\n              <Select\n                labelId='subcategory-simple-select-outlined-label'\n                id='subcategory-simple-select-outlined'\n                value={props.subcategory}\n                onChange={(e) => props.setSubcategory(e.target.value)}\n                label={t('customer.newService.serviceRequestInfo.serviceType')}\n                name='subcategory'\n              >\n                {props.subcategoryOptions.map((subcategory) => (\n                  <MenuItem key={'subcategory-' + subcategory.key} value={subcategory.key}>{subcategory.label}</MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className='brand-error-message'>{props.subcategoryErrorMessage}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <FormControl variant='outlined' className='MuiFormControl-fullWidth' error={props.requestedErrorMessage != ''}>\n                  <InputLabel id='requested-simple-select-outlined-label'>{t('customer.newService.serviceRequestInfo.request')}</InputLabel>\n                  <Select\n                    labelId='requested-simple-select-outlined-label'\n                    id='requested-simple-select-outlined'\n                    value={props.requested}\n                    onChange={(e) => props.handleRequestedChange(e)}\n                    label={t('customer.newService.serviceRequestInfo.request')}\n                    name='requested'\n                  >\n                    {props.requestedBy.map((value) => (\n                      <MenuItem key={'requested-' + value.key} value={value.key}>{value.label}</MenuItem>\n                    ))}\n                  </Select>\n                  <FormHelperText className='brand-error-message'>{props.requestedErrorMessage}</FormHelperText>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <FormControl variant='outlined' className='MuiFormControl-fullWidth' error={props.requestChannelErrorMessage != ''}>\n              <InputLabel id='requestChannel-simple-select-outlined-label'>{t('customer.newService.serviceRequestInfo.requestChannel')}</InputLabel>\n              <Select\n                labelId='requestChannel-simple-select-outlined-label'\n                id='requestChannel-simple-select-outlined'\n                value={props.requestChannel}\n                onChange={(e) => props.setRequestChannel(e.target.value)}\n                label={t('customer.newService.serviceRequestInfo.requestChannel')}\n                name='requestChannel'\n              >\n                {channelLabels(i18next.language).map((value) => (\n                  <MenuItem key={'requestChannel-' + value.key} value={value.key}>{value.label}</MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className='brand-error-message'>{props.requestChannelErrorMessage}</FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={3}>\n            <FormControl variant='outlined' className='MuiFormControl-fullWidth'>\n              <InputLabel id='cost-center-label'>{t('customer.newService.serviceRequestInfo.costCenter')}</InputLabel>\n              <Select\n                value={selectedCostCenterId || ''}\n                id='cost-center'\n                labelId='cost-center-label'\n                onChange={handleCostCenterChange}\n                label={t('customer.newService.serviceRequestInfo.costCenter')}\n              >\n                {costCenters.map((costCenter) => (\n                  <MenuItem key={costCenter.id} value={costCenter.id}>{costCenter.fullname}</MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className='brand-error-message'>{props.requestChannelErrorMessage}</FormHelperText>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} sm={3} className={props.distributorCheck}>\n            <TextField fullWidth variant='outlined' label={t('customer.newService.serviceRequestInfo.distributorName')} name='distributorName' value={props.distributorName} onChange={(e) => props.setDistributorName(e.target.value)} />\n          </Grid>\n          <Grid item xs={12} sm={3} className={props.distributorCheck}>\n            <TextField fullWidth variant='outlined' type='email' label={t('customer.newService.serviceRequestInfo.distributorEmail')} name='distributorEmail' value={props.distributorEmail} onChange={(e) => props.setDistributorEmail(e.target.value)} />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <br />\n      <Paper className='custom-paper'>\n        {props.service_type == 'Póliza de Mantenimiento' &&\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <PoliciesList\n                policies={props.policies}\n                country={props.country}\n                handlePolicyRowChange={props.handlePolicyRowChange}\n                selectedPolicies={props.selectedPolicies}\n              />\n            </Grid>\n          </Grid>}\n        {props.service_type != 'Póliza de Mantenimiento' &&\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <h1 className='panel-custom-title'>{t('customer.newService.productSelection.title')}</h1>\n              {\n                props.selectedProductRows.length > 0 && props.service_type == 'Reparaciones en Taller' &&\n                  <Button size='small' color='primary' onClick={() => props.handleProductDisabledSelected()}>\n                    {t('customer.newService.productSelection.removeButton')}\n                  </Button>\n              }\n              {props.products.length > 0 && <MaterialTable\n                className='customer-products-table'\n                title=''\n                columns={props.product_columns}\n                data={props.products}\n                responsive\n                onSelectedRowsChange={props.handleProductRowChange}\n                highlightOnHover\n                striped\n                noDataComponent={i18next.t('globalText.NoDataComponent')}\n                paginationComponentOptions={{ rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n                selectableRows\n                selectableRowsComponent={Checkbox}\n                selectableRowsNoSelectAll={props.service_type == 'Reparaciones en Taller'}\n                selectableRowSelected={row => (props.selectedProductRows.find(product => product.id === row.id) != undefined)}\n                selectableRowDisabled={row => (row.status == 'Servicio completado' && props.submit_type == 'new_visit')}\n                selectableRowsComponentProps={{ color: 'primary' }}\n                contextMessage={{ singular: 'producto', plural: 'productos', message: 'seleccionados' }}\n                clearSelectedRows={props.toggledClearProductsRows}\n                disabled={props.productTableDisabled}\n                                            />}\n            </Grid>\n            {(props.consumables.length > 0 && props.service_type == 'Mantenimiento') &&\n              <Grid item xs={12}>\n                <h1 className='panel-custom-title'>{t('customer.newService.productSelection.requiredConsumables')}</h1>\n                <MaterialTable\n                  className='customer-products-table'\n                  title=''\n                  columns={props.consumable_columns}\n                  data={props.consumables}\n                  responsive\n                  onSelectedRowsChange={props.handleConsumableRowChange}\n                  highlightOnHover\n                  striped\n                  noDataComponent={i18next.t('globalText.NoDataComponent')}\n                  paginationComponentOptions={{ rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n                  selectableRows\n                  selectableRowsComponent={Checkbox}\n                  selectableRowSelected={row => (props.consumableSelectableRowCriteria(row))}\n                  selectableRowsComponentProps={{ color: 'primary' }}\n                  contextMessage={{ singular: 'producto', plural: 'productos', message: 'seleccionados' }}\n                />\n              </Grid>}\n\n            {(props.requested_spare_parts && props.requested_spare_parts.length > 0 && props.submit_type == 'new_visit') &&\n              <Grid item xs={12}>\n                <h1 className='panel-custom-title'>{t('customer.newService.productSelection.spareParts')}</h1>\n                <MaterialTable\n                  className='customer-products-table'\n                  noHeader\n                  columns={props.spare_part_columns}\n                  data={props.requested_spare_parts}\n                  progressPending={props.userLoading}\n                  progressComponent={<CircularProgress size={75} />}\n                  responsive\n                  highlightOnHover\n                  striped\n                  noDataComponent={i18next.t('globalText.NoDataComponent')}\n                  paginationComponentOptions={{ rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n                  contextMessage={{ singular: 'producto', plural: 'productos', message: 'seleccionados' }}\n                />\n              </Grid>}\n            <Grid item xs={12}>\n              <p className='service-p'>{t('customer.newService.productSelection.backgroundTitle')}</p>\n            </Grid>\n          </Grid>}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth variant='outlined' multiline rows={8} label={t('customer.newService.productSelection.background')} name='background' value={props.background} onChange={(e) => props.setBackground(e.target.value)} error={props.backgroundErrorMessage != ''} helperText={\n              props.backgroundErrorMessage\n            }\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <DropzoneArea\n                  name='services_files'\n                  dropzoneText={t('customer.newService.productSelection.dragFile')}\n                  onChange={props.onServiceChangeFiles}\n                  showPreviews\n                  showPreviewsInDropzone={false}\n                  useChipsForPreview\n                  previewGridProps={{ container: { spacing: 1, direction: 'row' } }}\n                  previewChipProps={{ classes: { root: props.classes.previewChip } }}\n                  previewText={t('customer.newService.productSelection.selectedFiles')}\n                  filesLimit={10}\n                  showAlerts={false}\n                  maxFileSize={10000000}\n                  alertSnackbarProps={{ anchorOrigin: { vertical: 'top', horizontal: 'right' } }}\n                  onAlert={props.handleMessage}\n                />\n              </Grid>\n              <SRLWrapper>\n                <Grid container spacing={1}>\n\n                  {props.serviceFiles.map((serviceFile) => {\n                    const labelId = `file-list-label-${serviceFile.id}`\n                    return (\n                      <Grid key={labelId} item xs={6} sm={3}>\n                        <Card>\n                          <CardActionArea>\n                            <a href={serviceFile.resource_url} className='mdl-navigation__link file-image-link'>\n                              <Image\n                                src={serviceFile.resource_url}\n                                className='file-image'\n                                srl_gallery_image='true'\n                              />\n                            </a>\n                          </CardActionArea>\n                          <CardActions>\n                            <Button size='small' color='primary' onClick={() => handleClickOpenImageDialog(serviceFile.id)}>\n                              {t('globalText.deleteButton')}\n                            </Button>\n                          </CardActions>\n                        </Card>\n                      </Grid>\n                    )\n                  })}\n                </Grid>\n              </SRLWrapper>\n              <Dialog open={openDeleteImageDialog} onClose={handleCloseImageDialog} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('customer.newService.productSelection.deleteImage')}</DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    {t('customer.newService.productSelection.confirmMessage')}\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleCloseImageDialog} color='primary'>\n                    {t('customer.newService.productSelection.no')}\n                  </Button>\n                  <Button onClick={handleDeleteImage} color='primary'>\n                    {t('customer.newService.productSelection.yes')}\n                  </Button>\n                </DialogActions>\n              </Dialog>\n\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n\n    </>\n  )\n}\n\nconst structuredSelector = createStructuredSelector({\n})\nconst mapDispatchToProps = {}\n\nexport default connect(structuredSelector, mapDispatchToProps)(ServiceInfoForm)\n"]},"metadata":{},"sourceType":"module"}