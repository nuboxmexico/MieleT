{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/notifications/Notifications.jsx\",\n    _this = this,\n    _templateObject;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport styled from 'styled-components';\nimport MaterialTable from 'react-data-table-component';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { csrf, headers } from \"constants/csrf\";\nimport { flash_alert } from 'components/App';\nimport { withRouter } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nvar GET_NOTIFICATIONS_REQUEST = \"GET_NOTIFICATIONS_REQUEST\";\nvar GET_NOTIFICATIONS_SUCCESS = \"GET_NOTIFICATIONS_SUCCESS\";\nvar READ_NOTIFICATIONS_REQUEST = \"READ_NOTIFICATIONS_REQUEST\";\nvar READ_NOTIFICATIONS_SUCCESS = \"READ_NOTIFICATIONS_SUCCESS\";\nvar notifications_columns = [{\n  name: i18next.t('globalTables.notificationColumns.task'),\n  selector: 'params',\n  sortable: true,\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"span-medium\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, row.params.data ? row.params.data.name : \"Sin información\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"notification-light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AccessTimeIcon, {\n      style: {\n        fontSize: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 48\n      }\n    }), \" \", row.created_at));\n  }\n}, {\n  name: i18next.t('globalTables.notificationColumns.description'),\n  selector: 'params',\n  sortable: true,\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, row.params.data ? row.params.data.description : \"Sin información\");\n  }\n}, {\n  name: i18next.t('globalTables.notificationColumns.days'),\n  selector: 'days',\n  sortable: true,\n  hide: 'md',\n  grow: true,\n  minWidth: \"60px\"\n}, {\n  name: i18next.t('globalTables.notificationColumns.actions'),\n  selector: 'id',\n  grow: true,\n  minWidth: \"120px\",\n  cell: function cell(row) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, row.params.data && row.params.data.link && /*#__PURE__*/React.createElement(Link, {\n      className: \"mdl-navigation__link brand-primary-link customers-show-link services-show-link mg-r-15\",\n      to: \"\".concat(row.params.data ? row.params.data.link : \"#\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons material-icons-20\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"assignment\"), \" \", i18next.t('globalText.details')) || \"-\");\n  }\n}];\nvar conditionalRowStyles = [{\n  when: function when(row) {\n    return row.unread;\n  },\n  style: {\n    backgroundColor: '#f59b0026'\n  }\n}];\nvar ClearButton = styled(Button)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n  border-top-right-radius: 5px;\\n  border-bottom-right-radius: 5px;\\n  height: 34px;\\n  width: 32px;\\n  text-align: center;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\"])));\nvar filters = [\"Ver todo\", \"Leídos\", \"No leídos\"];\n\nvar FilterComponent = function FilterComponent(_ref) {\n  var filterText = _ref.filterText,\n      onFilter = _ref.onFilter,\n      onClear = _ref.onClear,\n      filterValue = _ref.filterValue,\n      setFilterValue = _ref.setFilterValue;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: \"white-bg padding-sides-5 table-search-label\",\n    htmlFor: \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Filtrar por\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"search\",\n    type: \"text\",\n    className: \"table-search-input\",\n    value: filterText,\n    onChange: onFilter,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: onClear,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth filter-select\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"filter-value-simple-select-outlined-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Ver\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"filter-value-simple-select-outlined-label\",\n    id: \"filter-value-simple-select-outlined\",\n    value: filterValue,\n    onChange: function onChange(e) {\n      return setFilterValue(e.target.value);\n    },\n    label: \"Canal\",\n    name: \"channel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, filters.map(function (value) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"filter-value-\" + value,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, value);\n  }))))));\n};\n\nfunction getNotifications() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var per_page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  var filterText = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var filterValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  var setLoading = arguments.length > 4 ? arguments[4] : undefined;\n  var current_user_id = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : nil;\n  return function (dispatch) {\n    dispatch({\n      type: GET_NOTIFICATIONS_REQUEST\n    });\n    return fetch(\"/api/v1/users/\".concat(current_user_id, \"/notifications/?page=\").concat(page, \"&per_page=\").concat(per_page, \"&keywords=\").concat(filterText, \"&filter_value=\").concat(filterValue)).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(getNotificationsSuccess(json, setLoading));\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n}\n\n;\nexport function getNotificationsSuccess(json, setLoading) {\n  setLoading(false);\n  return {\n    type: GET_NOTIFICATIONS_SUCCESS,\n    json: json\n  };\n}\n;\n\nfunction readNotifications() {\n  var current_user_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : nil;\n  var notification_id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : nil;\n  return function (dispatch) {\n    dispatch({\n      type: READ_NOTIFICATIONS_REQUEST\n    });\n    return fetch(\"/api/v1/users/\".concat(current_user_id, \"/notifications/\").concat(notification_id, \"/read\")).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(readNotificationsSuccess(json));\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n}\n\n;\nexport function readNotificationsSuccess(json) {\n  return {\n    type: READ_NOTIFICATIONS_SUCCESS,\n    json: json\n  };\n}\n;\n\nfunction Notifications(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      NotificationsLoading = _useState2[0],\n      setNotificationsLoading = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      perPage = _useState6[0],\n      setPerpage = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filterText = _useState8[0],\n      setFiltertext = _useState8[1];\n\n  var _useState9 = useState(\"Ver todo\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filterValue = _useState10[0],\n      setFilterValue = _useState10[1]; //const [selectedRows, setSelectedRows] = useState([]);\n\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setNotificationsLoading(true);\n                props.getNotifications(page, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, [props.current_user]);\n  useEffect(function () {\n    setNotificationsLoading(true);\n    var delayDebounceFn = setTimeout(function () {\n      props.getNotifications(page, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n    }, 1000);\n    return function () {\n      return clearTimeout(delayDebounceFn);\n    };\n  }, [filterText]);\n  useEffect(function () {\n    setNotificationsLoading(true);\n    props.getNotifications(page, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n  }, [filterValue]);\n\n  function handlePageChange(_x) {\n    return _handlePageChange.apply(this, arguments);\n  }\n\n  function _handlePageChange() {\n    _handlePageChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newPage) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setNotificationsLoading(true);\n              props.getNotifications(newPage, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _handlePageChange.apply(this, arguments);\n  }\n\n  function handlePerRowsChange(_x2, _x3) {\n    return _handlePerRowsChange.apply(this, arguments);\n  }\n\n  function _handlePerRowsChange() {\n    _handlePerRowsChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(newPerPage, newPage) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setNotificationsLoading(true);\n              props.getNotifications(newPage, newPerPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n              setPerpage(newPerPage);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _handlePerRowsChange.apply(this, arguments);\n  }\n\n  function handleChange(state) {\n    setSelectedRows(state.selectedRows);\n  }\n\n  function handleRowDoubleClicked(_x4) {\n    return _handleRowDoubleClicked.apply(this, arguments);\n  }\n\n  function _handleRowDoubleClicked() {\n    _handleRowDoubleClicked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(row) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              props.readNotifications(row.recipient_id, row.id);\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _handleRowDoubleClicked.apply(this, arguments);\n  }\n\n  function handleClear() {\n    setFiltertext(\"\");\n    props.getNotifications(page, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n  }\n\n  function changeFilterText(_x5) {\n    return _changeFilterText.apply(this, arguments);\n  } ///api/v1/users/1/notifications/8/read\n\n\n  function _changeFilterText() {\n    _changeFilterText = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setFiltertext(e.target.value);\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _changeFilterText.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: i18next.t('globalTables.notificationColumns.notification'),\n    className: \"notifications-table\",\n    columns: notifications_columns,\n    data: props.notifications,\n    progressPending: NotificationsLoading,\n    progressComponent: /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 28\n      }\n    }),\n    pagination: true,\n    paginationServer: true,\n    responsive: true,\n    paginationTotalRows: props.total,\n    onChangeRowsPerPage: handlePerRowsChange,\n    onRowDoubleClicked: handleRowDoubleClicked,\n    onChangePage: handlePageChange,\n    onSelectedRowsChange: handleChange,\n    highlightOnHover: true,\n    striped: true,\n    conditionalRowStyles: conditionalRowStyles,\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    subHeader: true,\n    subHeaderComponent: /*#__PURE__*/React.createElement(FilterComponent, {\n      onFilter: changeFilterText,\n      onClear: handleClear,\n      filterText: filterText,\n      filterValue: filterValue,\n      setFilterValue: setFilterValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }));\n} //  onClick={()=> this.props.getUsers() }\n\n\nNotifications.propTypes = {\n  notifications: PropTypes.array,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number\n};\nvar structuredSelector = createStructuredSelector({\n  notifications: function notifications(state) {\n    return state.notifications;\n  },\n  page: function page(state) {\n    return state.notifications_page;\n  },\n  perPage: function perPage(state) {\n    return state.notifications_per_page;\n  },\n  total: function total(state) {\n    return state.notifications_total;\n  },\n  curent_user: function curent_user(state) {\n    return state.curent_user;\n  }\n});\nvar mapDispatchToProps = {\n  getNotifications: getNotifications,\n  readNotifications: readNotifications\n};\nexport default withRouter(connect(structuredSelector, mapDispatchToProps)(Notifications));","map":{"version":3,"sources":["/usr/src/app/javascript/components/notifications/Notifications.jsx"],"names":["React","useState","useEffect","ReactDOM","Link","Button","PropTypes","connect","createStructuredSelector","styled","MaterialTable","CircularProgress","csrf","headers","flash_alert","withRouter","FormControl","InputLabel","OutlinedInput","InputAdornment","IconButton","Close","AccessTimeIcon","MenuItem","Select","Grid","useTranslation","i18next","GET_NOTIFICATIONS_REQUEST","GET_NOTIFICATIONS_SUCCESS","READ_NOTIFICATIONS_REQUEST","READ_NOTIFICATIONS_SUCCESS","notifications_columns","name","t","selector","sortable","cell","row","params","data","fontSize","created_at","description","hide","grow","minWidth","link","conditionalRowStyles","when","unread","style","backgroundColor","ClearButton","filters","FilterComponent","filterText","onFilter","onClear","filterValue","setFilterValue","e","target","value","map","getNotifications","page","per_page","setLoading","current_user_id","nil","dispatch","type","fetch","then","response","json","getNotificationsSuccess","error","console","log","readNotifications","notification_id","readNotificationsSuccess","Notifications","props","NotificationsLoading","setNotificationsLoading","setPage","perPage","setPerpage","setFiltertext","fetchData","current_user","id","delayDebounceFn","setTimeout","clearTimeout","handlePageChange","newPage","handlePerRowsChange","newPerPage","handleChange","state","setSelectedRows","selectedRows","handleRowDoubleClicked","recipient_id","handleClear","changeFilterText","notifications","total","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","propTypes","array","number","structuredSelector","notifications_page","notifications_per_page","notifications_total","curent_user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport styled from 'styled-components';\nimport MaterialTable from 'react-data-table-component';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {csrf, headers} from \"constants/csrf\"\nimport { flash_alert } from 'components/App';\nimport { withRouter } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close'; \nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nconst GET_NOTIFICATIONS_REQUEST = \"GET_NOTIFICATIONS_REQUEST\";\nconst GET_NOTIFICATIONS_SUCCESS = \"GET_NOTIFICATIONS_SUCCESS\";\n\nconst READ_NOTIFICATIONS_REQUEST = \"READ_NOTIFICATIONS_REQUEST\";\nconst READ_NOTIFICATIONS_SUCCESS = \"READ_NOTIFICATIONS_SUCCESS\";\n\n\nconst notifications_columns = [\n    {\n      name: i18next.t('globalTables.notificationColumns.task'),\n      selector: 'params',\n      sortable: true,\n      cell: row => (\n        <span className=\"span-medium\">\n          {(row.params.data ? row.params.data.name : \"Sin información\")}\n          <span className=\"notification-light\"><AccessTimeIcon style={{ fontSize: 12 }} /> {row.created_at}</span>\n        </span>\n      ),\n    },\n    {\n        name: i18next.t('globalTables.notificationColumns.description'),\n        selector: 'params',\n        sortable: true,\n        cell: row => (\n          <span>\n            {(row.params.data ? row.params.data.description : \"Sin información\")}\n          </span>\n        ),\n    },\n    {\n      name: i18next.t('globalTables.notificationColumns.days'),\n      selector: 'days',\n      sortable: true,\n      hide: 'md',\n      grow: true,\n      minWidth: \"60px\",\n    },\n    {\n      name: i18next.t('globalTables.notificationColumns.actions'),\n      selector: 'id',\n      grow: true,\n      minWidth: \"120px\",\n      cell: row => (\n        <div>\n            {row.params.data && row.params.data.link && \n                <Link className=\"mdl-navigation__link brand-primary-link customers-show-link services-show-link mg-r-15\" to={`${row.params.data ? row.params.data.link : \"#\"}`}>\n                <i className=\"material-icons material-icons-20\">assignment</i> {i18next.t('globalText.details')}\n                </Link>\n                ||\n                \"-\"\n            }\n        </div>\n      ),\n    },\n];\n\nconst conditionalRowStyles = [\n    {\n      when: row => row.unread,\n      style: {\n        backgroundColor: '#f59b0026',\n      },\n    },\n  ];\nconst ClearButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst filters = [\"Ver todo\", \"Leídos\", \"No leídos\"]\n    \n\nconst FilterComponent = ({ filterText, onFilter, onClear, filterValue, setFilterValue }) => (\n  <React.Fragment>\n     <Grid container spacing={1}  direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"center\">\n      <Grid item xs={12} sm={3}>\n        <FormControl variant=\"outlined\" className=\"MuiFormControl-fullWidth\">\n          <InputLabel className=\"white-bg padding-sides-5 table-search-label\"  htmlFor=\"search\">Filtrar por</InputLabel>\n          <OutlinedInput  \n            id=\"search\"\n            type= \"text\"\n            className=\"table-search-input\"\n            value={filterText}\n            onChange={onFilter}\n            endAdornment={\n              <InputAdornment position=\"end\" >\n                <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={onClear}\n                    >\n                    {<Close />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={12} sm={3}>\n        <FormControl variant=\"outlined\" className=\"MuiFormControl-fullWidth filter-select\" >\n            <InputLabel id=\"filter-value-simple-select-outlined-label\">Ver</InputLabel>\n            <Select\n              labelId=\"filter-value-simple-select-outlined-label\"\n              id=\"filter-value-simple-select-outlined\"\n              value={filterValue}\n              onChange={(e) => setFilterValue(e.target.value)}\n              label=\"Canal\"\n              name=\"channel\"\n            >\n            {filters.map((value) => (\n                <MenuItem key={\"filter-value-\"+value} value={value}>{value}</MenuItem>\n            ))}\n            </Select>\n        </FormControl>\n      </Grid>\n    </Grid>\n\n   </React.Fragment>\n);\n\n\nfunction getNotifications(page = 1, per_page = 5, filterText = \"\", filterValue = \"\", setLoading, current_user_id = nil) {\n  return dispatch => {\n      dispatch({type: GET_NOTIFICATIONS_REQUEST});\n      return fetch(`/api/v1/users/${current_user_id}/notifications/?page=${page}&per_page=${per_page}&keywords=${filterText}&filter_value=${filterValue}`)\n      .then(response => response.json())\n      .then(json => dispatch(getNotificationsSuccess(json, setLoading)))\n      .catch(error => console.log(error));\n      };\n  };\n    \nexport function getNotificationsSuccess(json, setLoading) {\n    setLoading(false)\n    return {\n        type: GET_NOTIFICATIONS_SUCCESS,\n        json\n    };\n};\n    \nfunction readNotifications(current_user_id = nil, notification_id = nil) {\n  return dispatch => {\n      dispatch({type: READ_NOTIFICATIONS_REQUEST});\n      return fetch(`/api/v1/users/${current_user_id}/notifications/${notification_id}/read`)\n      .then(response => response.json())\n      .then(json => dispatch(readNotificationsSuccess(json)))\n      .catch(error => console.log(error));\n      };\n  };\n    \nexport function readNotificationsSuccess(json) {\n    return {\n        type: READ_NOTIFICATIONS_SUCCESS,\n        json\n    };\n};\n    \n\n\n\nfunction Notifications(props){\n  const [NotificationsLoading, setNotificationsLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerpage] = useState(10);\n  const [filterText, setFiltertext] = useState(\"\");\n  const [filterValue, setFilterValue] = useState(\"Ver todo\");\n  \n  \n  //const [selectedRows, setSelectedRows] = useState([]);\n\n\n  useEffect(() => {\n    async function fetchData() {\n        setNotificationsLoading(true);\n        props.getNotifications(page, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n    }\n    fetchData();\n  }, [props.current_user]);\n\n  useEffect(() => {\n    setNotificationsLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      props.getNotifications(page, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n    }, 1000)\n    return () => clearTimeout(delayDebounceFn)\n  }, [filterText])\n\n  useEffect(() => {\n    setNotificationsLoading(true);\n    props.getNotifications(page, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n    \n  }, [filterValue])\n\n\n  async function handlePageChange(newPage){\n    setNotificationsLoading(true);\n    props.getNotifications(newPage, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n  }\n\n  async function handlePerRowsChange(newPerPage, newPage){\n    setNotificationsLoading(true);\n    props.getNotifications(newPage, newPerPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n    setPerpage(newPerPage);\n  }\n\n  function handleChange(state){\n   setSelectedRows(state.selectedRows);\n  } \n\n  \n\n  async function handleRowDoubleClicked(row){\n    props.readNotifications(row.recipient_id, row.id)\n  }\n\n  function handleClear(){\n    setFiltertext(\"\");\n    props.getNotifications(page, perPage, filterText, filterValue, setNotificationsLoading, props.current_user.id);\n  }\n\n  async function changeFilterText(e){\n    setFiltertext(e.target.value);\n  }\n  ///api/v1/users/1/notifications/8/read\n  return (\n    <React.Fragment>\n      <MaterialTable\n        title={i18next.t('globalTables.notificationColumns.notification')}\n        className=\"notifications-table\"\n        columns={notifications_columns}\n        data={props.notifications}\n        progressPending={NotificationsLoading}\n        progressComponent={<CircularProgress size={50} />}\n        pagination\n        paginationServer\n        responsive={true}\n        paginationTotalRows={props.total}\n        onChangeRowsPerPage={handlePerRowsChange}\n        onRowDoubleClicked={handleRowDoubleClicked}\n        onChangePage={handlePageChange}\n        onSelectedRowsChange={handleChange}\n        highlightOnHover={true}\n        striped={true}\n        conditionalRowStyles={conditionalRowStyles}\n        noDataComponent={i18next.t('globalText.NoDataComponent')}\n        paginationComponentOptions={{rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n        subHeader\n        subHeaderComponent={<FilterComponent  onFilter={changeFilterText} onClear={handleClear} filterText={filterText} filterValue={filterValue} setFilterValue={setFilterValue} />}\n      />\n      \n    </React.Fragment>\n  );\n  \n}\n//  onClick={()=> this.props.getUsers() }\n\nNotifications.propTypes = {\n  notifications: PropTypes.array,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number\n};\n\nconst structuredSelector = createStructuredSelector({\n  notifications: state => state.notifications,\n  page: state => state.notifications_page,\n  perPage: state => state.notifications_per_page,\n  total: state => state.notifications_total,\n  curent_user: state => state.curent_user\n});\nconst mapDispatchToProps = {getNotifications, readNotifications};\nexport default withRouter(connect(structuredSelector, mapDispatchToProps)(Notifications));\n"]},"metadata":{},"sourceType":"module"}