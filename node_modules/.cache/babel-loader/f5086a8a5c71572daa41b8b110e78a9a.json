{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/services/quotations/QuotationPaymentDetail.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { flash_alert } from 'components/App';\nimport { Button, Grid, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core'; // Dates\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { headers_www_form, money_format, payment_channel_label } from \"constants/csrf\";\nvar payment_options = [\"Online\", \"Transferencia\", \"Por Teléfono\", \"Cliente realiza depósito bancario\", \"Cliente paga en domicilio\", \"Garantía producto/manufactura\", \"Garantía Reparación/Instalación\", \"Instalación sin costo\", \"Visita en cortesía\", \"Segunda visita Póliza\"];\n\nfunction QuotationPaymentDetail(props) {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      quotationPaymentMethod = _useState2[0],\n      setQuotationPaymentMethod = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedPaymentDate = _useState4[0],\n      setSelectedPaymentDate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customerPaymentDate = _useState6[0],\n      setCustomerPaymentDate = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      validated_payment = _useState8[0],\n      setValidatedPayment = _useState8[1];\n\n  useEffect(function () {\n    console.log(props.selectedConsumables);\n  }, [props.selectedConsumables]);\n  useEffect(function () {\n    setCustomerPaymentDate(Date.parse(props.customerPaymentDate));\n  }, [props.customerPaymentDate]);\n  useEffect(function () {\n    setCustomerPaymentDate(props.paymentDate);\n  }, [props.paymentDate]);\n  useEffect(function () {\n    setValidatedPayment(props.validated_payment);\n  }, [props.validated_payment]);\n  useEffect(function () {\n    if (props.quotation) {\n      setCustomerPaymentDate(props.paymentDate);\n    }\n  }, [props.quotation]);\n\n  var handleCustomerPaymentDateChange = function handleCustomerPaymentDateChange(date) {\n    setCustomerPaymentDate(date);\n  };\n\n  var handlePaymentDateChange = function handlePaymentDateChange(date) {\n    setSelectedPaymentDate(date);\n  };\n\n  useEffect(function () {\n    if (props.quotation) {\n      props.quotation.payment_date && setSelectedPaymentDate(props.quotation.payment_date);\n\n      if (props.paymentData[0] == undefined) {\n        setCustomerPaymentDate(props.quotation.customer_payment_date);\n      }\n\n      setQuotationPaymentMethod(props.quotation.payment_channel);\n      setValidatedPayment(props.quotation.validated_payment);\n    }\n  }, [props.quotation]);\n\n  function validatePayment() {\n    return _validatePayment.apply(this, arguments);\n  }\n\n  function _validatePayment() {\n    _validatePayment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              body = new FormData();\n              props.setLoading(true);\n              body.set('id', props.quotation.id);\n              body.set('service_id', props.serviceID);\n              body.set('payment_date', selectedPaymentDate);\n              body.set('customer_payment_date', customerPaymentDate);\n              body.set('payment_channel', payment_channel_label(quotationPaymentMethod));\n              return _context.abrupt(\"return\", axios.patch(\"/api/v1/quotations/\".concat(props.quotation.id, \"/validate_payment\"), body, {\n                headers: headers_www_form\n              }).then(function (response) {\n                console.log(response);\n                flash_alert(\"\", \"Cotización actualizada con éxito\", \"success\");\n                props.callbacks();\n                props.setLoading(false);\n              })[\"catch\"](function (e) {\n                console.log(e);\n\n                if (e.response.data) {\n                  props.setLoading(false);\n                  console.log(e.response.data);\n\n                  for (var key in e.response.data) {\n                    flash_alert(\"Error\", e.response.data[key], \"danger\");\n                  }\n                }\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _validatePayment.apply(this, arguments);\n  }\n\n  var existsCustomerPaymentDate = !!props.quotation.customer_payment_date;\n  var existsPaymentChannel = !!props.quotation.payment_channel;\n  var existsPaymentDate = !!props.quotation.payment_date;\n\n  var validateButton = function validateButton() {\n    return existsCustomerPaymentDate && existsPaymentChannel && existsPaymentDate;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"service-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Detalles de pago de Cotizaci\\xF3n\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mdl-navigation__link service-price-table-value service-price-table-value-check \".concat(props.paymentData[0] != undefined && props.paymentData[0].status == \"completed\" || validated_payment ? \"green-label\" : \"red-label\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, props.paymentData[0] != undefined && props.paymentData[0].status == \"completed\" || validated_payment ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 125\n    }\n  }, \"done\") : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 166\n    }\n  }, \"close\"), props.paymentData[0] != undefined && props.paymentData[0].status == \"completed\" || validated_payment ? \"Cotización Pagada\" : \"Cotización No Pagada\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, props.paymentData[0] != undefined && customerPaymentDate != \"\" && /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: esLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    className: \"payment-date-input\",\n    id: \"date-payment-dialog\",\n    label: \"Fecha de pago\",\n    format: \"dd/MM/yyyy\",\n    disabled: existsCustomerPaymentDate,\n    value: customerPaymentDate,\n    emptyLabel: 'dd/mm/yyyy',\n    invalidLabel: 'dd/mm/yyyy',\n    onChange: handleCustomerPaymentDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  })), props.paymentData[0] == undefined && /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: esLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    className: \"payment-date-input\",\n    id: \"date-payment-dialog\",\n    emptyLabel: 'dd/mm/yyyy',\n    invalidLabel: 'dd/mm/yyyy',\n    label: \"Fecha de pago\",\n    format: \"dd/MM/yyyy\",\n    disabled: existsCustomerPaymentDate,\n    value: customerPaymentDate,\n    onChange: handleCustomerPaymentDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }))), props.paymentData[0] && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, \"Hora de pago\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visit-summary-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, props.paymentTime)), props.paymentData[0] != undefined && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, \"Valor\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, props.paymentData[0] != undefined && money_format(props.country, props.paymentData[0].amount), props.paymentData[0] == undefined && validated_payment && money_format(props.country, props.totalAmount))), props.paymentData[0] != undefined && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, \"N\\xB0 de Referencia de la transacci\\xF3n\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visit-summary-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, props.paymentData[0].transaction_id)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"M\\xE9todo de pago\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visit-summary-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, props.paymentData[0] != undefined && props.paymentData[0].payment_method_id == 1 && props.paymentType //(payment_channel_label(props.paymentChannel) + \" - \" + props.paymentData[0].payment_method_name)}\n  , props.paymentData[0] != undefined && props.paymentData[0].payment_method_id != 1 && payment_channel_label(props.paymentChannel) + \" - \" + props.paymentData[0].payment_method_name, props.paymentData[0] == undefined && validated_payment && \"Si. Manual\"), props.paymentData[0] == undefined && /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"service_type-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, \"Seleccione\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"service_type-simple-select-outlined-label\",\n    disabled: existsPaymentChannel,\n    id: \"service_type-simple-select-outlined\",\n    value: payment_channel_label(quotationPaymentMethod),\n    onChange: function onChange(e) {\n      return setQuotationPaymentMethod(e.target.value);\n    },\n    label: \"Tipo de Servicio\",\n    name: \"service_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, payment_options.map(function (value) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"service_type-\" + value,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, value);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    locale: esLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    className: \"payment-date-input\",\n    id: \"date-payment-dialog\",\n    label: \"Fecha l\\xEDmite de pago\",\n    format: \"dd/MM/yyyy\",\n    emptyLabel: 'dd/mm/yyyy',\n    disabled: existsPaymentDate,\n    invalidLabel: selectedPaymentDate,\n    value: selectedPaymentDate,\n    onChange: handlePaymentDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }))), new Date() >= (selectedPaymentDate ? selectedPaymentDate : props.selectedPaymentDate) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-value warning-text mdl-navigation__link limit-payment-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, \"warning\"), \" Fecha l\\xEDmite de pago expir\\xF3, regendar cotizaci\\xF3n.\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"service-price-table-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, \"\\xBFEl cliente requiere factura? \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 89\n    }\n  }, props.invoiceCheck)))))), /*#__PURE__*/React.createElement(Button, {\n    id: \"send-quotation\",\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: props.loading || validateButton(),\n    onClick: function onClick() {\n      return validatePayment();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, \"Validar Pago\"));\n}\n\nvar structuredSelector = createStructuredSelector({});\nvar mapDispatchToProps = {};\nexport default connect(structuredSelector, mapDispatchToProps)(QuotationPaymentDetail);","map":{"version":3,"sources":["/usr/src/app/javascript/components/services/quotations/QuotationPaymentDetail.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","flash_alert","Button","Grid","Select","MenuItem","FormControl","InputLabel","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","headers_www_form","money_format","payment_channel_label","payment_options","QuotationPaymentDetail","props","quotationPaymentMethod","setQuotationPaymentMethod","selectedPaymentDate","setSelectedPaymentDate","customerPaymentDate","setCustomerPaymentDate","validated_payment","setValidatedPayment","console","log","selectedConsumables","Date","parse","paymentDate","quotation","handleCustomerPaymentDateChange","date","handlePaymentDateChange","payment_date","paymentData","undefined","customer_payment_date","payment_channel","validatePayment","body","FormData","setLoading","set","id","serviceID","patch","headers","then","response","callbacks","e","data","key","existsCustomerPaymentDate","existsPaymentChannel","existsPaymentDate","validateButton","status","paymentTime","country","amount","totalAmount","transaction_id","payment_method_id","paymentType","paymentChannel","payment_method_name","target","value","map","invoiceCheck","loading","structuredSelector","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\";\nimport { flash_alert } from 'components/App';\n\nimport { Button, Grid, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core'\n// Dates\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { headers_www_form, money_format, payment_channel_label } from \"constants/csrf\"\n\nconst payment_options = [\"Online\", \"Transferencia\", \"Por Teléfono\", \"Cliente realiza depósito bancario\", \"Cliente paga en domicilio\", \"Garantía producto/manufactura\", \"Garantía Reparación/Instalación\", \"Instalación sin costo\", \"Visita en cortesía\", \"Segunda visita Póliza\"]\n\n\nfunction QuotationPaymentDetail(props) {\n  const [quotationPaymentMethod, setQuotationPaymentMethod] = useState(\"\");\n  const [selectedPaymentDate, setSelectedPaymentDate] = useState(\"\");\n  const [customerPaymentDate, setCustomerPaymentDate] = useState(\"\");\n  const [validated_payment, setValidatedPayment] = useState(false);\n\n  useEffect(() => {\n    console.log(props.selectedConsumables)\n  }, [props.selectedConsumables]);\n\n\n  useEffect(() => {\n    setCustomerPaymentDate(Date.parse(props.customerPaymentDate))\n  }, [props.customerPaymentDate]);\n\n  useEffect(() => {\n    setCustomerPaymentDate(props.paymentDate)\n  }, [props.paymentDate]);\n\n\n  useEffect(() => {\n    setValidatedPayment(props.validated_payment)\n  }, [props.validated_payment]);\n\n  useEffect(() => {\n    if (props.quotation) {\n      setCustomerPaymentDate(props.paymentDate)\n    }\n  }, [props.quotation]);\n\n\n  const handleCustomerPaymentDateChange = (date) => {\n    setCustomerPaymentDate(date);\n  };\n\n  const handlePaymentDateChange = (date) => {\n    setSelectedPaymentDate(date);\n  };\n\n  useEffect(() => {\n    if (props.quotation) {\n      props.quotation.payment_date && setSelectedPaymentDate(props.quotation.payment_date)\n      if (props.paymentData[0] == undefined) {\n        setCustomerPaymentDate(props.quotation.customer_payment_date)\n      }\n      setQuotationPaymentMethod(props.quotation.payment_channel)\n      setValidatedPayment(props.quotation.validated_payment)\n    }\n  }, [props.quotation]);\n\n  async function validatePayment() {\n    var body = new FormData();\n    props.setLoading(true);\n    body.set('id', props.quotation.id);\n    body.set('service_id', props.serviceID);\n    body.set('payment_date', selectedPaymentDate);\n    body.set('customer_payment_date', customerPaymentDate);\n    body.set('payment_channel', payment_channel_label(quotationPaymentMethod));\n    return axios.patch(`/api/v1/quotations/${props.quotation.id}/validate_payment`, body, { headers: headers_www_form })\n      .then(response => {\n        console.log(response)\n        flash_alert(\"\", \"Cotización actualizada con éxito\", \"success\");\n        props.callbacks()\n        props.setLoading(false);\n      })\n      .catch(e => {\n        console.log(e);\n        if (e.response.data) {\n          props.setLoading(false);\n          console.log(e.response.data);\n          for (var key in e.response.data) {\n            flash_alert(\"Error\", e.response.data[key], \"danger\")\n          }\n        }\n      });\n  }\n\n\n  const existsCustomerPaymentDate = !!props.quotation.customer_payment_date\n  const existsPaymentChannel = !!props.quotation.payment_channel\n  const existsPaymentDate = !!props.quotation.payment_date\n  const validateButton = () => existsCustomerPaymentDate && existsPaymentChannel && existsPaymentDate\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <p className=\"service-subtitle\">Detalles de pago de Cotización</p>\n          <Grid container spacing={3} className={\"\"}>\n            <Grid item xs={12}>\n              <span className={`mdl-navigation__link service-price-table-value service-price-table-value-check ${((props.paymentData[0] != undefined && props.paymentData[0].status == \"completed\") || validated_payment) ? \"green-label\" : \"red-label\"}`}>\n                {((props.paymentData[0] != undefined && props.paymentData[0].status == \"completed\") || validated_payment) ? <i className=\"material-icons\">done</i> : <i className=\"material-icons\">close</i>}\n                {((props.paymentData[0] != undefined && props.paymentData[0].status == \"completed\") || validated_payment) ? \"Cotización Pagada\" : \"Cotización No Pagada\"}\n              </span>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              {props.paymentData[0] != undefined && customerPaymentDate != \"\" &&\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale}>\n                  <KeyboardDatePicker\n                    className=\"payment-date-input\"\n                    id=\"date-payment-dialog\"\n                    label=\"Fecha de pago\"\n                    format=\"dd/MM/yyyy\"\n                    disabled={existsCustomerPaymentDate}\n                    value={customerPaymentDate}\n                    emptyLabel={'dd/mm/yyyy'}\n                    invalidLabel={'dd/mm/yyyy'}\n                    onChange={handleCustomerPaymentDateChange}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              }\n              {props.paymentData[0] == undefined &&\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale}>\n                  <KeyboardDatePicker\n                    className=\"payment-date-input\"\n                    id=\"date-payment-dialog\"\n                    emptyLabel={'dd/mm/yyyy'}\n                    invalidLabel={'dd/mm/yyyy'}\n                    label=\"Fecha de pago\"\n                    format=\"dd/MM/yyyy\"\n                    disabled={existsCustomerPaymentDate}\n                    value={customerPaymentDate}\n                    onChange={handleCustomerPaymentDateChange}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              }\n\n            </Grid>\n\n            {props.paymentData[0] &&\n              <Grid item xs={12} sm={6}>\n                <span className=\"service-price-table-label\">Hora de pago</span>\n                <span className=\"visit-summary-2\">{props.paymentTime}</span>\n              </Grid>\n            }\n            {props.paymentData[0] != undefined &&\n              <Grid item xs={12} sm={6}>\n                <span className=\"service-price-table-label\">Valor</span>\n                <span className=\"service-price-table-value\">\n                  {props.paymentData[0] != undefined && money_format(props.country, props.paymentData[0].amount)}\n                  {(props.paymentData[0] == undefined && validated_payment) && money_format(props.country, props.totalAmount)}\n                </span>\n              </Grid>\n            }\n            {props.paymentData[0] != undefined &&\n              <Grid item xs={12} sm={6}>\n                <span className=\"service-price-table-label\">N° de Referencia de la transacción</span>\n                <span className=\"visit-summary-2\">{props.paymentData[0].transaction_id}</span>\n              </Grid>\n            }\n\n            <Grid item xs={12} sm={6}>\n              <span className=\"service-price-table-label\">Método de pago</span>\n              <span className=\"visit-summary-2\">\n                {props.paymentData[0] != undefined && props.paymentData[0].payment_method_id == 1 && props.paymentType//(payment_channel_label(props.paymentChannel) + \" - \" + props.paymentData[0].payment_method_name)}\n                }\n                {props.paymentData[0] != undefined && props.paymentData[0].payment_method_id != 1 && (payment_channel_label(props.paymentChannel) + \" - \" + props.paymentData[0].payment_method_name)}\n                {(props.paymentData[0] == undefined && validated_payment) && \"Si. Manual\"}\n              </span>\n              {props.paymentData[0] == undefined &&\n                <FormControl variant=\"outlined\" className=\"MuiFormControl-fullWidth\">\n                  <InputLabel id=\"service_type-simple-select-outlined-label\">Seleccione</InputLabel>\n                  <Select\n                    labelId=\"service_type-simple-select-outlined-label\"\n                    disabled={existsPaymentChannel}\n                    id=\"service_type-simple-select-outlined\"\n                    value={payment_channel_label(quotationPaymentMethod)}\n                    onChange={(e) => setQuotationPaymentMethod(e.target.value)}\n                    label=\"Tipo de Servicio\"\n                    name=\"service_type\"\n                  >\n                    {payment_options.map((value) => (\n                      <MenuItem key={\"service_type-\" + value} value={value}>{value}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              }\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale}>\n                <KeyboardDatePicker\n                  className=\"payment-date-input\"\n                  id=\"date-payment-dialog\"\n                  label=\"Fecha límite de pago\"\n                  format=\"dd/MM/yyyy\"\n                  emptyLabel={'dd/mm/yyyy'}\n                  disabled={existsPaymentDate}\n                  invalidLabel={selectedPaymentDate}\n                  value={selectedPaymentDate}\n                  onChange={handlePaymentDateChange}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            {new Date() >= (selectedPaymentDate ? selectedPaymentDate : props.selectedPaymentDate) &&\n              <>\n                <Grid item xs={12}>\n                  <span className=\"service-price-table-value warning-text mdl-navigation__link limit-payment-date\">\n                    <i className=\"material-icons\">warning</i> Fecha límite de pago expiró, regendar cotización.\n                  </span>\n                </Grid>\n              </>\n            }\n            <Grid item xs={12}>\n              <span className=\"service-price-table-label\">¿El cliente requiere factura? <strong>{props.invoiceCheck}</strong></span>\n            </Grid>\n\n          </Grid>\n\n\n        </Grid>\n      </Grid>\n      <Button id=\"send-quotation\" variant=\"contained\" color=\"primary\" disabled={props.loading || validateButton()} onClick={() => validatePayment()}>\n        Validar Pago\n      </Button>\n    </React.Fragment>\n  );\n\n}\n\nconst structuredSelector = createStructuredSelector({\n});\nconst mapDispatchToProps = {};\n\nexport default connect(structuredSelector, mapDispatchToProps)(QuotationPaymentDetail)\n\n"]},"metadata":{},"sourceType":"module"}