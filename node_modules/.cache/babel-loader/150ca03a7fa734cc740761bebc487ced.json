{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/surveys/SurveyService.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Grid from '@material-ui/core/Grid';\nimport { flash_alert } from 'components/App';\nimport { csrf, headers, money_format, date_format, date_event_format, date_difference_in_hours, headers_www_form } from \"constants/csrf\";\nimport pluralize from 'pluralize';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport SurveyQuestionValue from \"components/surveys/SurveyQuestionValue\";\nvar GET_SURVEY_QUESTIONS_REQUEST = \"GET_SURVEY_QUESTIONS_REQUEST\";\nvar GET_SURVEY_QUESTIONS_SUCCESS = \"GET_SURVEY_QUESTIONS_SUCCESS\";\n\nfunction getSurveysQustions(setLoading) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_SURVEY_QUESTIONS_REQUEST\n    });\n    return fetch(\"/api/v1/survey_questions\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(getSurveysQustionsSuccess(json)) && setLoading(false);\n    })[\"catch\"](function (error) {\n      return console.log(error) && setLoading(false);\n    });\n  };\n}\n\n;\nexport function getSurveysQustionsSuccess(json) {\n  return {\n    type: GET_SURVEY_QUESTIONS_SUCCESS,\n    json: json\n  };\n}\n;\nvar survey_status_values = [\"Realizadas\", \"No contactados\", \"Cliente NO acepto la encuesta\"];\n\nfunction SurveyService(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      survey_status = _useState4[0],\n      setSurveyStatus = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      background = _useState6[0],\n      setBackground = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      surveyAnswers = _useState8[0],\n      setSurveyAnswers = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      checkAnswers = _useState10[0],\n      setCheckAnswers = _useState10[1];\n\n  function fetchSurveys() {\n    return _fetchSurveys.apply(this, arguments);\n  }\n\n  function _fetchSurveys() {\n    _fetchSurveys = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              props.getSurveysQustions(setLoading);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchSurveys.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    fetchSurveys();\n  }, []);\n  useEffect(function () {\n    if (props.survey) {\n      setBackground(props.survey.background);\n      setSurveyStatus(props.survey.status);\n    }\n  }, [props.survey]);\n  useEffect(function () {\n    if (props.survey_questions) {\n      var answer_obect = new Array();\n      Object.entries(props.survey_questions).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        console.log(value);\n        answer_obect = [].concat(_toConsumableArray(answer_obect), _toConsumableArray(value));\n      });\n      var answer_obect_array = answer_obect.map(function (answer) {\n        return {\n          id: answer.id,\n          value: \"\"\n        };\n      });\n      setSurveyAnswers(answer_obect_array);\n\n      if (props.survey.survey_answers && props.survey.survey_answers.length == props.survey_questions.length) {\n        setCheckAnswers(true);\n      }\n    }\n  }, props.survey_questions);\n\n  function _handleQuestionAnswer(question_id, new_value) {\n    if (surveyAnswers.length > 0) {\n      var answer_changed = surveyAnswers.findIndex(function (answer) {\n        return answer.id == question_id;\n      });\n\n      var new_object = _toConsumableArray(surveyAnswers);\n\n      new_object[answer_changed].value = new_value;\n      setSurveyAnswers(new_object);\n    }\n  }\n\n  function saveSurvey() {\n    var body = new FormData();\n    setLoading(true);\n    body.set('service_id', props.serviceID);\n    body.set('survey_id', props.survey.id);\n    body.set('status', survey_status);\n    body.set('background', background);\n    surveyAnswers.forEach(function (surveyAnswer) {\n      body.append('answers[]', JSON.stringify(surveyAnswer));\n    });\n    return axios.post(\"/api//v1/survey_questions/answer\", body, {\n      headers: headers_www_form\n    }).then(function (response) {\n      flash_alert(\"\", \"Encuesta actualizada con Ã©xito\", \"success\");\n      setLoading(false);\n    })[\"catch\"](function (e) {\n      console.log(e);\n\n      if (e.response.data) {\n        setLoading(false);\n        console.log(e.response.data);\n\n        for (var key in e.response.data) {\n          flash_alert(\"Error\", e.response.data[key], \"danger\");\n        }\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    defaultExpanded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }),\n    \"aria-controls\": \"panel2a-content\",\n    id: \"paneladditional-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"panel-custom-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Encuesta de servicio\")), /*#__PURE__*/React.createElement(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"MuiFormControl-fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"survey_status-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, \"Estatus encuesta\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"survey_status-simple-select-outlined-label\",\n    id: \"survey_status-simple-select-outlined\",\n    value: survey_status,\n    onChange: function onChange(e) {\n      return setSurveyStatus(e.target.value);\n    },\n    label: \"Solicitado por\",\n    name: \"survey_status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }\n  }, survey_status_values.map(function (value) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"survey_status-\" + value,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, value);\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, props.survey_questions != undefined && Object.entries(props.survey_questions).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"class\": \"service-subtitle survey-subtitle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 49\n      }\n    }, key)), value && value.map(function (survey_question, index) {\n      var labelId = \"accordeon-survey_question-\".concat(survey_question.id, \"-\").concat(index);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        key: labelId,\n        className: \"visit-summary-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 61\n        }\n      }, survey_question.title)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(SurveyQuestionValue, {\n        survey_question: survey_question,\n        handleQuestionAnswer: function handleQuestionAnswer(question_id, new_value) {\n          return _handleQuestionAnswer(question_id, new_value);\n        },\n        survey: props.survey,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 61\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    label: \"A\\xF1adir comentarios adicionales del cliente\",\n    name: \"background\",\n    value: background,\n    onChange: function onChange(e) {\n      return setBackground(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"send-survey\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return saveSurvey();\n    },\n    disabled: props.survey.is_completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, \"Guardar Encuesta\"))))));\n}\n\nvar structuredSelector = createStructuredSelector({\n  survey_questions: function survey_questions(state) {\n    return state.survey_questions;\n  }\n});\nvar mapDispatchToProps = {\n  getSurveysQustions: getSurveysQustions\n};\nexport default connect(structuredSelector, mapDispatchToProps)(SurveyService);","map":{"version":3,"sources":["/usr/src/app/javascript/components/surveys/SurveyService.jsx"],"names":["React","useState","useEffect","axios","connect","createStructuredSelector","Grid","flash_alert","csrf","headers","money_format","date_format","date_event_format","date_difference_in_hours","headers_www_form","pluralize","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","makeStyles","Link","Button","Tooltip","CircularProgress","InputLabel","FormControl","MenuItem","Select","Checkbox","TextField","SurveyQuestionValue","GET_SURVEY_QUESTIONS_REQUEST","GET_SURVEY_QUESTIONS_SUCCESS","getSurveysQustions","setLoading","dispatch","type","fetch","then","response","json","getSurveysQustionsSuccess","error","console","log","survey_status_values","SurveyService","props","loading","survey_status","setSurveyStatus","background","setBackground","surveyAnswers","setSurveyAnswers","checkAnswers","setCheckAnswers","fetchSurveys","survey","status","survey_questions","answer_obect","Array","Object","entries","map","key","value","answer_obect_array","answer","id","survey_answers","length","handleQuestionAnswer","question_id","new_value","answer_changed","findIndex","new_object","saveSurvey","body","FormData","set","serviceID","forEach","surveyAnswer","append","JSON","stringify","post","e","data","target","undefined","survey_question","index","labelId","title","is_completed","structuredSelector","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport Grid from '@material-ui/core/Grid';\nimport { flash_alert } from 'components/App';\nimport {csrf, headers, money_format, date_format,date_event_format, date_difference_in_hours, headers_www_form} from \"constants/csrf\"\nimport pluralize from 'pluralize';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport SurveyQuestionValue from \"components/surveys/SurveyQuestionValue\";\n\nconst GET_SURVEY_QUESTIONS_REQUEST = \"GET_SURVEY_QUESTIONS_REQUEST\";\nconst GET_SURVEY_QUESTIONS_SUCCESS = \"GET_SURVEY_QUESTIONS_SUCCESS\";\n\nfunction getSurveysQustions(setLoading) {\n    return dispatch => {\n        dispatch({type: GET_SURVEY_QUESTIONS_REQUEST});\n        return fetch(`/api/v1/survey_questions`)\n        .then(response => response.json())\n        .then(json => dispatch(getSurveysQustionsSuccess(json)) && setLoading(false))\n        .catch(error => console.log(error) && setLoading(false));\n    };\n};\nexport function getSurveysQustionsSuccess(json) {\n    return {\n        type: GET_SURVEY_QUESTIONS_SUCCESS,\n        json\n    };\n};\n\nconst survey_status_values = [\"Realizadas\", \"No contactados\", \"Cliente NO acepto la encuesta\"]\n\nfunction SurveyService(props){\n    const [loading, setLoading] =  useState(false);\n    const [survey_status, setSurveyStatus] =  useState(\"\");\n    const [background, setBackground] =  useState(\"\");\n    const [surveyAnswers, setSurveyAnswers] =  useState([]);\n    const [checkAnswers, setCheckAnswers] =  useState(false);\n\n\n    async function fetchSurveys() {\n        props.getSurveysQustions(setLoading);\n    }\n\n    useEffect(() => {\n        fetchSurveys();   \n    }, []);\n\n    useEffect(() => {\n        if(props.survey){\n            setBackground(props.survey.background)\n            setSurveyStatus(props.survey.status)\n            \n        }   \n    }, [props.survey]);\n\n    useEffect(() => {\n        if(props.survey_questions){\n            let answer_obect = new Array();\n            Object.entries(props.survey_questions).map(([key, value]) => {\n                    console.log(value)\n                    answer_obect = [...answer_obect, ...value]  \n            });\n            let answer_obect_array = answer_obect.map(answer => ({id: answer.id, value: \"\"}))\n            setSurveyAnswers(answer_obect_array)\n            if(props.survey.survey_answers && (props.survey.survey_answers.length == props.survey_questions.length)){\n                setCheckAnswers(true) \n            } \n        }\n\n        \n    }, props.survey_questions);\n\n\n    function handleQuestionAnswer(question_id, new_value){\n        if(surveyAnswers.length > 0){\n            let answer_changed = surveyAnswers.findIndex(answer => answer.id == question_id) \n            let new_object = [... surveyAnswers];\n            new_object[answer_changed].value = new_value\n            setSurveyAnswers(new_object)\n          \n        }\n    }\n\n    function saveSurvey(){\n        var body = new FormData();\n        setLoading(true);\n        body.set('service_id', props.serviceID);\n        body.set('survey_id', props.survey.id);\n        body.set('status', survey_status);\n        body.set('background', background);\n        \n        \n        surveyAnswers.forEach((surveyAnswer) => {\n            body.append('answers[]', JSON.stringify(surveyAnswer));\n        });\n\n        return axios.post(`/api//v1/survey_questions/answer`, body, { headers: headers_www_form})\n            .then(response => {\n                flash_alert(\"\", \"Encuesta actualizada con Ã©xito\", \"success\");\n                setLoading(false);\n                 \n            })\n        .catch(e => {\n            console.log(e);\n            if(e.response.data){\n                setLoading(false);\n                console.log(e.response.data);\n                for (var key in e.response.data) {\n                    flash_alert(\"Error\", e.response.data[key], \"danger\")\n                }\n            }\n        });\n    }\n    \n\n\treturn (\n\t\t<React.Fragment>\n\n            <Accordion defaultExpanded>\n                <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel2a-content\"\n                id=\"paneladditional-header\"\n                >\n                <h1 className=\"panel-custom-title\">Encuesta de servicio</h1>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Grid container spacing={1}>\n                        <Grid item xs={12}> \n                            <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n                                <Grid item xs={12}> \n                                    {loading && <CircularProgress size={24} />}  \n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={3}>\n\n                            <FormControl variant=\"outlined\" className=\"MuiFormControl-fullWidth\">\n                                <InputLabel id=\"survey_status-simple-select-outlined-label\">Estatus encuesta</InputLabel>\n                                    <Select\n                                        labelId=\"survey_status-simple-select-outlined-label\"\n                                        id=\"survey_status-simple-select-outlined\"\n                                        value={survey_status}\n                                        onChange={(e) => setSurveyStatus(e.target.value)}\n                                        label=\"Solicitado por\"\n                                        name=\"survey_status\"\n                                    >\n                                    {survey_status_values.map((value) => (\n                                        <MenuItem key={\"survey_status-\"+value} value={value}>{value}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}> \n                            <Grid container spacing={1}>\n                           \n                            {props.survey_questions != undefined && \n                                Object.entries(props.survey_questions).map(([key, value]) => {\n                                   \n                                    return (\n                                        <>\n                                            <Grid item xs={12}>\n                                                <p class=\"service-subtitle survey-subtitle\">{key}</p>\n                                            </Grid>\n                                            {value && value.map((survey_question, index) => {\n                                                const labelId = `accordeon-survey_question-${survey_question.id}-${index}`;\n                                                return (\n                                                    <>\n                                                        <Grid item xs={11}>\n                                                            <p key={labelId} className=\"visit-summary-2\">{survey_question.title}</p>\n                                                        </Grid>\n                                                        <Grid item xs={1}>\n                                                            <SurveyQuestionValue\n                                                                survey_question={survey_question}\n                                                                handleQuestionAnswer={(question_id, new_value) => handleQuestionAnswer(question_id, new_value) }\n                                                                survey={props.survey}\n                                                            />\n                                                        </Grid>\n                                                    </>\n                                                    );\n                                                })}\n                                            <hr />\n                                        </>\n                                    );\n                                })\n                            }\n                            \n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid item xs={12}>\n                            <Grid container spacing={2}>\n                                \n                                <Grid item xs={12}>\n                                    <TextField fullWidth variant=\"outlined\" multiline rows={8} label=\"AÃ±adir comentarios adicionales del cliente\" name=\"background\" value={background} onChange={(e) => setBackground(e.target.value)} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid item xs={12}>\n\n                            <Button id=\"send-survey\" variant=\"contained\" color=\"primary\" onClick={() => saveSurvey()} disabled={props.survey.is_completed}>\n                                Guardar Encuesta\n                            </Button>\n                            \n                        </Grid>\n\n                    </Grid>\n                </AccordionDetails>\n            </Accordion>\n                \n\n\t\t   \n\t\t</React.Fragment>\n\t);\n  \n}\n\nconst structuredSelector = createStructuredSelector({\n    survey_questions: state => state.survey_questions,\n});\nconst mapDispatchToProps = {getSurveysQustions};\n\nexport default connect(structuredSelector, mapDispatchToProps)(SurveyService)\n\n"]},"metadata":{},"sourceType":"module"}