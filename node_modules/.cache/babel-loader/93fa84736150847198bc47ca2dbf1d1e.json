{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/javascript/components/technicians/Technicians.js\",\n    _templateObject,\n    _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport styled from 'styled-components';\nimport MaterialTable from 'react-data-table-component';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport TechniciansLinks from \"components/technicians/TechniciansLinks\";\nimport DeleteTechnicianDialog from \"components/technicians/DeleteTechnicianDialog\";\nimport { csrf, headers } from \"constants/csrf\";\nimport { flash_alert } from 'components/App';\nimport { withRouter } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close';\nimport i18next from 'i18next';\nvar GET_TECHNICIANS_REQUEST = \"GET_TECHNICIANS_REQUEST\";\nvar GET_TECHNICIANS_SUCCESS = \"GET_TECHNICIANS_SUCCESS\";\nvar ClearButton = styled(Button)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n  border-top-right-radius: 5px;\\n  border-bottom-right-radius: 5px;\\n  height: 34px;\\n  width: 32px;\\n  text-align: center;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\"])));\n\nvar FilterComponent = function FilterComponent(_ref) {\n  var filterText = _ref.filterText,\n      onFilter = _ref.onFilter,\n      onClear = _ref.onClear;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"table-search-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: \"white-bg padding-sides-5 table-search-label\",\n    htmlFor: \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, i18next.t('globalText.filterFor')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"search\",\n    type: \"text\",\n    className: \"table-search-input\",\n    value: filterText,\n    onChange: onFilter,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: onClear,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(TechniciansLinks, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }));\n};\n\nfunction getTechnicians() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var per_page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var filterText = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var setLoading = arguments.length > 3 ? arguments[3] : undefined;\n  return function (dispatch) {\n    dispatch({\n      type: GET_TECHNICIANS_REQUEST\n    });\n    return fetch(\"api/v1/technicians?page=\" + page + \"&per_page=\" + per_page + \"&keywords=\" + filterText).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(getTechniciansSuccess(json, setLoading));\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n}\n\n;\nexport function getTechniciansSuccess(json, setLoading) {\n  setLoading(false);\n  return {\n    type: GET_TECHNICIANS_SUCCESS,\n    json: json\n  };\n}\n;\n\nfunction Technicians(props) {\n  var _this2 = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      userLoading = _useState2[0],\n      setUserLoading = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      perPage = _useState6[0],\n      setPerpage = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filterText = _useState8[0],\n      setFiltertext = _useState8[1]; //const [selectedRows, setSelectedRows] = useState([]);\n\n\n  var columns = [{\n    name: i18next.t('globalTables.techniciansColumns.user'),\n    selector: 'user.email',\n    sortable: true,\n    cell: function cell(row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, row.user.email, \" \", row.enterprise != \"\" && row.enterprise != null ? \"(\" + row.enterprise + \")\" : \"\");\n    }\n  }, {\n    name: i18next.t('globalTables.techniciansColumns.createdAt'),\n    selector: 'created_at',\n    sortable: true,\n    hide: 'md'\n  }, {\n    name: i18next.t('globalTables.techniciansColumns.actions'),\n    selector: 'id',\n    grow: true,\n    minWidth: \"170px\",\n    cell: function cell(row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"mdl-navigation__link brand-primary-link technicians-edit-link mg-r-15\",\n        to: \"/technicians/\".concat(row.id, \"/edit\"),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons  material-icons-20\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, \"edit\"), \"  \", i18next.t('globalText.edit')), /*#__PURE__*/React.createElement(DeleteTechnicianDialog, {\n        key: row.id,\n        technician_id: row.id,\n        name: row.user.firstname,\n        lastname: row.user.lastname,\n        email: row.user.email,\n        getTechnicians: getTechnicians,\n        headers: headers,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }));\n    }\n  }];\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setUserLoading(true);\n                props.getTechnicians(page, perPage, filterText, setUserLoading);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  function handlePageChange(_x) {\n    return _handlePageChange.apply(this, arguments);\n  }\n\n  function _handlePageChange() {\n    _handlePageChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newPage) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setUserLoading(true);\n              props.getTechnicians(newPage, perPage, filterText, setUserLoading);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _handlePageChange.apply(this, arguments);\n  }\n\n  function handlePerRowsChange(_x2, _x3) {\n    return _handlePerRowsChange.apply(this, arguments);\n  }\n\n  function _handlePerRowsChange() {\n    _handlePerRowsChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(newPerPage, newPage) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setUserLoading(true);\n              props.getTechnicians(newPage, newPerPage, filterText, setUserLoading);\n              setPerpage(newPerPage);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _handlePerRowsChange.apply(this, arguments);\n  }\n\n  function handleChange(state) {\n    setSelectedRows(state.selectedRows);\n  }\n\n  function handleClear() {\n    setFiltertext(\"\");\n    props.getTechnicians(page, perPage, \"\", setUserLoading);\n  }\n\n  function changeFilterText(_x4) {\n    return _changeFilterText.apply(this, arguments);\n  }\n\n  function _changeFilterText() {\n    _changeFilterText = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n      var search;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setFiltertext(e.target.value);\n              search = document.querySelector('#search');\n              props.getTechnicians(page, perPage, e.target.value, setUserLoading);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _changeFilterText.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: i18next.t('technicians.title'),\n    columns: columns,\n    data: props.technicians,\n    progressPending: userLoading,\n    progressComponent: /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 75,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 28\n      }\n    }),\n    pagination: true,\n    paginationServer: true,\n    responsive: true,\n    paginationTotalRows: props.total,\n    onChangeRowsPerPage: handlePerRowsChange,\n    onChangePage: handlePageChange,\n    onSelectedRowsChange: handleChange,\n    highlightOnHover: true,\n    striped: true,\n    noDataComponent: i18next.t('globalText.NoDataComponent'),\n    paginationComponentOptions: {\n      rowsPerPageText: i18next.t('globalText.rowsPerPageText'),\n      rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'),\n      noRowsPerPage: false,\n      selectAllRowsItem: false,\n      selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText')\n    },\n    subHeader: true,\n    subHeaderComponent: /*#__PURE__*/React.createElement(FilterComponent, {\n      onFilter: changeFilterText,\n      onClear: handleClear,\n      filterText: filterText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }));\n} //  onClick={()=> this.props.getUsers() }\n\n\nTechnicians.propTypes = {\n  technicians: PropTypes.array,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number\n};\nvar structuredSelector = createStructuredSelector({\n  technicians: function technicians(state) {\n    return state.technicians;\n  },\n  page: function page(state) {\n    return state.page;\n  },\n  perPage: function perPage(state) {\n    return state.perPage;\n  },\n  total: function total(state) {\n    return state.total;\n  },\n  curent_user: function curent_user(state) {\n    return state.curent_user;\n  }\n});\nvar mapDispatchToProps = {\n  getTechnicians: getTechnicians\n};\nexport default withRouter(connect(structuredSelector, mapDispatchToProps)(Technicians));","map":{"version":3,"sources":["/usr/src/app/javascript/components/technicians/Technicians.js"],"names":["React","useState","useEffect","ReactDOM","Link","Button","Fab","PropTypes","connect","createStructuredSelector","styled","MaterialTable","CircularProgress","TextField","TechniciansLinks","DeleteTechnicianDialog","csrf","headers","flash_alert","withRouter","FormControl","InputLabel","OutlinedInput","InputAdornment","IconButton","Close","i18next","GET_TECHNICIANS_REQUEST","GET_TECHNICIANS_SUCCESS","ClearButton","FilterComponent","filterText","onFilter","onClear","t","getTechnicians","page","per_page","setLoading","dispatch","type","fetch","then","response","json","getTechniciansSuccess","error","console","log","Technicians","props","userLoading","setUserLoading","setPage","perPage","setPerpage","setFiltertext","columns","name","selector","sortable","cell","row","user","email","enterprise","hide","grow","minWidth","id","firstname","lastname","fetchData","handlePageChange","newPage","handlePerRowsChange","newPerPage","handleChange","state","setSelectedRows","selectedRows","handleClear","changeFilterText","e","target","value","search","document","querySelector","technicians","total","rowsPerPageText","rangeSeparatorText","noRowsPerPage","selectAllRowsItem","selectAllRowsItemText","propTypes","array","number","structuredSelector","curent_user","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { createStructuredSelector } from \"reselect\"\nimport styled from 'styled-components';\nimport MaterialTable from 'react-data-table-component';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport TechniciansLinks from \"components/technicians/TechniciansLinks\"\nimport DeleteTechnicianDialog from \"components/technicians/DeleteTechnicianDialog\"\nimport {csrf, headers} from \"constants/csrf\"\nimport { flash_alert } from 'components/App';\nimport { withRouter } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from '@material-ui/icons/Close'; \nimport i18next from 'i18next';\nconst GET_TECHNICIANS_REQUEST = \"GET_TECHNICIANS_REQUEST\";\nconst GET_TECHNICIANS_SUCCESS = \"GET_TECHNICIANS_SUCCESS\";\n\n\nconst ClearButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n  <React.Fragment>\n    <FormControl variant=\"outlined\" className=\"table-search-form\">\n      <InputLabel className=\"white-bg padding-sides-5 table-search-label\"  htmlFor=\"search\">{i18next.t('globalText.filterFor')}</InputLabel>\n      <OutlinedInput\n        id=\"search\"\n        type= \"text\"\n        className=\"table-search-input\"\n        value={filterText}\n        onChange={onFilter}\n        endAdornment={\n          <InputAdornment position=\"end\" >\n            <IconButton\n\t\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\n\t\t\t\t\t\t\t\t\t\tonClick={onClear}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{<Close />}\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n            \n          </InputAdornment>\n        }\n      />\n    </FormControl>\n    <TechniciansLinks />\n   </React.Fragment>\n);\n\n\nfunction getTechnicians(page = 1, per_page = 10, filterText = \"\", setLoading) {\n  return dispatch => {\n    dispatch({type: GET_TECHNICIANS_REQUEST});\n    return fetch(`api/v1/technicians?page=`+page+`&per_page=`+ per_page+`&keywords=`+ filterText)\n      .then(response => response.json())\n      .then(json => dispatch(getTechniciansSuccess(json,setLoading)))\n      .catch(error => console.log(error));\n  };\n};\n\nexport function getTechniciansSuccess(json,setLoading) {\n  setLoading(false)\n  return {\n    type: GET_TECHNICIANS_SUCCESS,\n    json\n  };\n};\n\n\n\nfunction Technicians(props){\n  const [userLoading, setUserLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerpage] = useState(10);\n  const [filterText, setFiltertext] = useState(\"\");\n  //const [selectedRows, setSelectedRows] = useState([]);\n\n  const columns = [\n    {\n      name: i18next.t('globalTables.techniciansColumns.user'),\n      selector: 'user.email',\n      sortable: true,\n      cell: row => (\n        <div>\n          {row.user.email} {(row.enterprise != \"\" && row.enterprise != null ) ? \"(\" + row.enterprise  + \")\" : \"\"}\n        </div>\n      ),\n    },\n    {\n      name: i18next.t('globalTables.techniciansColumns.createdAt'),\n      selector: 'created_at',\n      sortable: true,\n      hide: 'md',\n    },\n    {\n      name: i18next.t('globalTables.techniciansColumns.actions'),\n      selector: 'id',\n      grow: true,\n      minWidth: \"170px\",\n      cell: row => (\n        <div>\n        <Link className=\"mdl-navigation__link brand-primary-link technicians-edit-link mg-r-15\" to={`/technicians/${row.id}/edit`}>\n            <i className=\"material-icons  material-icons-20\">edit</i>  {i18next.t('globalText.edit')}\n        </Link>\n        <DeleteTechnicianDialog key={row.id} technician_id={row.id} name={row.user.firstname} lastname={row.user.lastname} email={row.user.email} getTechnicians={getTechnicians} headers={headers} />\n        </div>\n      ),\n    },\n  ];\n\n  useEffect(() => {\n    async function fetchData() {\n      setUserLoading(true);\n      props.getTechnicians(page, perPage, filterText, setUserLoading);\n    }\n    fetchData();\n  }, []);\n\n\n  async function handlePageChange(newPage){\n    setUserLoading(true);\n    props.getTechnicians(newPage, perPage, filterText, setUserLoading);\n  }\n\n  async function handlePerRowsChange(newPerPage, newPage){\n    setUserLoading(true);\n    props.getTechnicians(newPage, newPerPage, filterText, setUserLoading);\n    setPerpage(newPerPage);\n  }\n\n  function handleChange(state){\n   setSelectedRows(state.selectedRows);\n  }\n\n  function handleClear(){\n    setFiltertext(\"\");\n    props.getTechnicians(page, perPage, \"\", setUserLoading);\n  }\n\n  async function changeFilterText(e){\n    setFiltertext(e.target.value);\n    const search = document.querySelector('#search');\n    props.getTechnicians(page, perPage, e.target.value, setUserLoading);\n  }\n  \n  return (\n    <React.Fragment>\n      <MaterialTable\n        title={i18next.t('technicians.title')}\n        columns={columns}\n        data={props.technicians}\n        progressPending={userLoading}\n        progressComponent={<CircularProgress size={75} />}\n        pagination\n        paginationServer\n        responsive={true}\n        paginationTotalRows={props.total}\n        onChangeRowsPerPage={handlePerRowsChange}\n        onChangePage={handlePageChange}\n        onSelectedRowsChange={handleChange}\n        highlightOnHover={true}\n        striped={true}\n        noDataComponent={i18next.t('globalText.NoDataComponent')}\n        paginationComponentOptions={{rowsPerPageText: i18next.t('globalText.rowsPerPageText'), rangeSeparatorText: i18next.t('globalText.rangeSeparatorText'), noRowsPerPage: false, selectAllRowsItem: false, selectAllRowsItemText: i18next.t('globalText.selectAllRowsItemText') }}\n        subHeader\n        subHeaderComponent={<FilterComponent  onFilter={changeFilterText} onClear={handleClear} filterText={filterText} />}\n      />\n      \n    </React.Fragment>\n  );\n  \n}\n//  onClick={()=> this.props.getUsers() }\n\nTechnicians.propTypes = {\n  technicians: PropTypes.array,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number\n};\n\nconst structuredSelector = createStructuredSelector({\n  technicians: state => state.technicians,\n  page: state => state.page,\n  perPage: state => state.perPage,\n  total: state => state.total,\n  curent_user: state => state.curent_user\n});\nconst mapDispatchToProps = {getTechnicians};\nexport default withRouter(connect(structuredSelector, mapDispatchToProps)(Technicians));\n"]},"metadata":{},"sourceType":"module"}